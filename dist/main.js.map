{"version":3,"sources":["../webpack/bootstrap","../external \"atom\"",".././lib/icons/icon-tables.js","../external \"path\"","../external \"atom-fs\"",".././lib/options.js",".././lib/service/strategy.js",".././lib/storage.js",".././node_modules/picomatch/lib/utils.js",".././node_modules/picomatch/lib/constants.js",".././lib/ui.js",".././lib/service/strategies/header-strategy.js",".././node_modules/braces/lib/stringify.js",".././node_modules/braces/lib/utils.js",".././lib/utils.js",".././lib/service/icon-service.js",".././lib/service/strategy-manager.js","../external \"util\"",".././node_modules/fill-range/index.js",".././lib/main.js",".././node_modules/lru-cache/index.js",".././node_modules/yallist/yallist.js",".././node_modules/yallist/iterator.js",".././lib/service/strategies/signature-strategy.js",".././lib/icons/icon.js","../external \"./.icondb.js\"",".././lib/service/strategies/hashbang-strategy.js",".././lib/service/strategies/modeline-strategy.js",".././lib/service/strategies/linguist-strategy.js",".././node_modules/micromatch/index.js",".././node_modules/braces/index.js",".././node_modules/braces/lib/compile.js",".././node_modules/to-regex-range/index.js",".././node_modules/is-number/index.js",".././node_modules/braces/lib/expand.js",".././node_modules/braces/lib/parse.js",".././node_modules/braces/lib/constants.js",".././node_modules/picomatch/index.js",".././node_modules/picomatch/lib/picomatch.js",".././node_modules/picomatch/lib/scan.js",".././node_modules/picomatch/lib/parse.js",".././lib/service/strategies/usertype-strategy.js",".././lib/service/strategies/grammar-strategy.js",".././lib/service/strategies/path-strategy.js",".././lib/service/icon-delegate.js",".././lib/service/icon-node.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","Icon","IconTables","data","this","directoryIcons","read","fileIcons","binaryIcon","matchName","executableIcon","matchInterpreter","table","icons","indexes","map","offset","index","byInterpreter","byLanguage","byPath","byScope","bySignature","byName","directory","cachedIcons","cache","directoryName","fileName","cached","length","icon","match","test","set","path","language","lang","scope","interpreter","signature","Map","directoryPath","filePath","CompositeDisposable","Emitter","Storage","UI","NS","disposables","configNames","emitter","register","split","addCommand","reset","toggle","add","observe","on","classes","document","body","classList","dispose","emit","setting","fn","onDidChange","coloured","lightTheme","option","filter","propertyName","replace","optionName","observer","atom","config","id","cmd","commands","configName","FileSystem","IconService","opts","priority","ignoreVirtual","matchesFiles","matchesDirs","noSetting","enabled","resources","resourceEvents","isReady","checkAll","forEach","disposable","resource","deleteIcon","clear","useExisting","isVirtual","registerResource","matchIcon","addIcon","paths","isDirectory","check","remove","has","onDestroyed","onDidDestroy","delete","sep","AtomFS","LRUCache","isWin","locked","state","deserialise","clean","dump","version","createBlankCache","max","load","hasData","isProjectRelated","deletePath","rootDirectories","project","projectPath","indexOf","fixedPath","normalisePath","iterator","pathData","pathKeys","keys","pathValues","values","done","inode","entry","addPath","getPathEntry","iconClass","iconData","del","detail","notifications","addError","size","serialize","message","addInfo","dismissable","win32","process","platform","REGEX_BACKSLASH","REGEX_REMOVE_BACKSLASH","REGEX_SPECIAL_CHARS","REGEX_SPECIAL_CHARS_GLOBAL","isObject","val","Array","isArray","hasRegexChars","str","isRegexChar","escapeRegex","toPosixSlashes","removeBackslashes","supportsLookbehinds","segs","slice","Number","isWindows","options","windows","escapeLast","input","char","lastIdx","idx","lastIndexOf","removePrefix","output","startsWith","prefix","wrapOutput","contains","negated","POSIX_CHARS","DOT_LITERAL","PLUS_LITERAL","QMARK_LITERAL","SLASH_LITERAL","ONE_CHAR","QMARK","END_ANCHOR","DOTS_SLASH","NO_DOT","NO_DOTS","NO_DOT_SLASH","NO_DOTS_SLASH","QMARK_NO_DOT","STAR","START_ANCHOR","WINDOWS_CHARS","MAX_LENGTH","POSIX_REGEX_SOURCE","alnum","alpha","ascii","blank","cntrl","digit","graph","lower","print","punct","space","upper","word","xdigit","REGEX_NON_SPECIAL_CHARS","REGEX_SPECIAL_CHARS_BACKREF","REPLACEMENTS","CHAR_0","CHAR_9","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_LEFT_PARENTHESES","CHAR_RIGHT_PARENTHESES","CHAR_ASTERISK","CHAR_AMPERSAND","CHAR_AT","CHAR_BACKWARD_SLASH","CHAR_CARRIAGE_RETURN","CHAR_CIRCUMFLEX_ACCENT","CHAR_COLON","CHAR_COMMA","CHAR_DOT","CHAR_DOUBLE_QUOTE","CHAR_EQUAL","CHAR_EXCLAMATION_MARK","CHAR_FORM_FEED","CHAR_FORWARD_SLASH","CHAR_GRAVE_ACCENT","CHAR_HASH","CHAR_HYPHEN_MINUS","CHAR_LEFT_ANGLE_BRACKET","CHAR_LEFT_CURLY_BRACE","CHAR_LEFT_SQUARE_BRACKET","CHAR_LINE_FEED","CHAR_NO_BREAK_SPACE","CHAR_PERCENT","CHAR_PLUS","CHAR_QUESTION_MARK","CHAR_RIGHT_ANGLE_BRACKET","CHAR_RIGHT_CURLY_BRACE","CHAR_RIGHT_SQUARE_BRACKET","CHAR_SEMICOLON","CHAR_SINGLE_QUOTE","CHAR_SPACE","CHAR_TAB","CHAR_UNDERSCORE","CHAR_VERTICAL_LINE","CHAR_ZERO_WIDTH_NOBREAK_SPACE","SEP","extglobChars","chars","type","open","close","globChars","join","rgbToHSL","Disposable","projects","onDidChangePaths","to","setProjects","themes","onDidChangeActiveThemes","setImmediate","checkMotif","fixOffset","onSaveNewFile","args","file","addEditor","editor","onOpenFile","getPath","entity","workspace","observeTextEditors","emitOpenedEditor","waitToSave","then","eventName","handler","subscribe","$","editors","textEditors","getFileName","global","styleSheets","sheets","push","filename","packagePath","packages","loadedPackages","styles","getStyleSheets","stylePath","styleSheet","ownerNode","sourcePath","getStyleElement","rule","cssRules","selectorText","cssText","colour","getThemeColour","isLight","emitMotifChanged","numStyles","rules","numRules","selector","style","top","restoreOffset","Promise","resolve","cd","onDidChangePath","from","emitProjectsAvailable","emitProjectsEmptied","emitProjectsChanged","Strategy","ignoreBinary","minScanSize","maxScanSize","super","needToScan","loadData","onDidChangeData","change","getFirstLine","count","isBinary","unreadable","binary","utils","ast","stringify","node","parent","invalidBlock","escapeInvalid","isInvalidBrace","invalidNode","invalid","isOpenOrClose","nodes","child","isInteger","num","trim","find","exceedsLimit","min","step","limit","escapeNode","block","escaped","encloseBrace","commas","ranges","dollar","reduce","acc","flatten","result","flat","arr","ele","caseKludge","fuzz","array","toLowerCase","prev","toUpperCase","first","rest","collectStrings","refs","WeakSet","escapeRegExp","findBasePath","POSIX","matched","pop","rows","width","Math","height","x","X","y","forceNonCapturing","pattern","source","segment","RegExp","flags","fuzzyRegExp","format","toString","a","b","String","isRegExp","isString","channels","g","lum","delta","sat","hue","wait","delay","setTimeout","EntityType","StrategyManager","IconDelegate","IconNode","handleResource","onDidChangeFiles","events","action","destroy","init","stats","ino","setPathInode","SYMLINK","onDidChangeRealPath","target","master","element","isSymlink","isTabIcon","DIRECTORY","FILE","forElement","getClasses","Options","fileStrategies","directoryStrategies","strategies","addStrategy","reverse","Set","strategy","disable","enable","util","toRegexRange","isValidValue","isNumber","zeros","pad","maxLength","toNumber","dash","padStart","toMaxLen","negative","toRange","isNumbers","wrap","start","fromCharCode","toRegex","end","capture","rangeError","RangeError","inspect","invalidRange","strictRanges","fillNumbers","descending","startString","endString","stepString","abs","padded","maxLen","transform","parts","negatives","positives","range","sort","toSequence","fill","charCodeAt","fillLetters","TypeError","invalidStep","FileIcons","_FileIcons","storage","ui","service","lock","serialise","addIconToElement","suppressFOUC","Yallist","MAX","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","self","doUse","hit","isStale","now","Date","unshiftNode","maxAge","diff","walker","tail","removeNode","Entry","forEachStep","thisp","undefined","Infinity","lc","stale","noDisposeOnSet","updateAgeOnGet","mL","allowStale","mA","lC","head","next","toArray","k","v","e","h","len","item","unshift","expiresAt","list","arguments","insert","inserted","Node","Error","pushNode","res","shift","forEachReverse","getReverse","mapReverse","initial","reduceReverse","toArrayReverse","ret","sliceReverse","splice","deleteCount","er","HeaderStrategy","hashbangs","modelines","matchSignature","matchPath","sig","colourMode","asArray","tokens","executable","onStats","onDidLoadStats","matchLanguage","hasRules","sources","languageIcons","isNew","unwatchSystem","onDidMove","updateSource","onDidChangeOnDisk","watchSystem","isDataComplete","isOpenInEditor","sourceRules","parsedRules","parseSource","updatePaths","updatePath","fileData","line","languageIcon","Micromatch","dirname","makeRe","unixify","nonegate","dot","braces","picomatch","isEmptyString","micromatch","patterns","concat","omit","keep","items","onResult","isMatch","negatedExtglob","matches","failglob","nonull","nullglob","unescape","matcher","any","not","includes","some","matchKeys","obj","every","all","glob","posix","exec","scan","parse","nobrace","braceExpand","expand","compile","nodupes","noempty","Boolean","walk","isOpen","isClose","relaxZeros","strictZeros","cacheKey","shorthand","isPadded","hasPadding","splitToPatterns","neg","pos","onlyNegative","filterPatterns","onlyPositive","intersected","collatePatterns","rangeToPattern","stop","digits","zipped","zip","startDigit","stopDigit","toCharacterClass","tok","nines","countNines","stops","countZeros","compare","splitToRanges","padZeros","string","toQuantifier","comparison","intersection","repeat","integer","pow","relax","clearCache","isFinite","append","queue","stash","enclose","rangeLimit","q","CHAR_BACKSLASH","CHAR_BACKTICK","SyntaxError","stack","brackets","depth","advance","siblings","before","keepQuotes","keepEscaping","CHAR_DOLLAR","constants","returnState","fns","isState","regex","compileRe","isIgnored","ignore","ignoreOpts","onMatch","returnObject","onIgnore","matchBase","basename","fastpaths","parsed","returnOutput","prepend","nocase","err","debug","isPathSeparator","code","token","isPrefix","isGlobstar","scanToEnd","slashes","lastIndex","isBrace","isBracket","isGlob","isExtglob","braceEscaped","backslashes","finished","eos","noext","noparen","base","maxDepth","prevIndex","expandRange","ex","syntaxError","bos","PLATFORM_CHARS","EXTGLOB_CHARS","globstar","nodot","qmarkNoDot","star","bash","noextglob","consumed","backtrack","parens","quotes","extglobs","peek","remaining","consume","negate","increment","decrement","extglob","inner","extglobOpen","conditions","extglobClose","extglobStar","esc","pre","strictBrackets","nobracket","prevValue","literalBrackets","outputIndex","tokensIndex","brace","dots","comma","out","toks","noglobstar","prior","isStart","afterStar","after","strictSlashes","suffix","slashDot","configDisposable","customTypes","customTypeIcons","hasCustomTypes","types","updateCustomTypes","newValue","scopeName","names","matchScope","makeNamePattern","makePathPattern","getVersion","inSpecMode","watcher","onDidDetachEditor","observeEditors","observeGrammar","getEditor","getGrammarOverride","grammar","grammars","grammarForScopeName","realPath","isFiltered","filtered","numIcons","destroyed","colourChangedOnly","vcsStatus","getCurrentIcon","getClass","getFallbackClasses","replacement","getReplacementClass","defaultIconClass","isRepository","isRoot","isSubmodule","currentIcon","setCurrentIcon","query","currentPriority","emitIconChange","hasIcon","getPathIcon","deletePathIcon","setPathIcon","originalIcon","masterDelegate","defineProperties","onDidChangeMaster","onDidChangeIcon","iconsByElement","WeakMap","iconDisposables","tabIcon","delegate","visible","appliedClasses","onMotifChanged","refresh","onDidChangeVCSStatus","show","setVisible","tabPaneIcon","isFile","classesDiffer","removeClasses","addClasses","typeHint","rsrc","disp"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n","module.exports = require(\"atom\");","\"use strict\";\r\n\r\nconst Icon = require(\"./icon.js\");\r\n\r\n\r\n/**\r\n * Interface providing access to the package's databases.\r\n *\r\n * @property {Array} directoryIcons - Icons to match directory-type resources.\r\n * @property {Array} fileIcons      - Icons to match file resources.\r\n * @property {Icon}  binaryIcon     - Icon for binary files.\r\n * @property {Icon}  executableIcon - Icon for executables.\r\n * @class\r\n */\r\nclass IconTables{\r\n\t\r\n\tconstructor(){\r\n\t\tconst data = require(\"./.icondb.js\");\r\n\t\tthis.directoryIcons = this.read(data[0]);\r\n\t\tthis.fileIcons      = this.read(data[1]);\r\n\t\tthis.binaryIcon     = this.matchName(\".o\");\r\n\t\tthis.executableIcon = this.matchInterpreter(\"bash\");\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Populate icon-lists from a compiled data table.\r\n\t *\r\n\t * @param {Array} table\r\n\t * @return {Object}\r\n\t * @private\r\n\t */\r\n\tread(table){\r\n\t\tlet [icons, indexes] = table;\r\n\t\ticons = icons.map((i, offset) => new Icon(offset, ...i));\r\n\t\t\r\n\t\t// Dereference Icon instances from their stored offset\r\n\t\tindexes = indexes.map(index => index.map(offset => icons[offset]));\r\n\t\t\r\n\t\tconst [\r\n\t\t\tbyInterpreter,\r\n\t\t\tbyLanguage,\r\n\t\t\tbyPath,\r\n\t\t\tbyScope,\r\n\t\t\tbySignature,\r\n\t\t] = indexes;\r\n\t\t\r\n\t\treturn {\r\n\t\t\tbyName: icons,\r\n\t\t\tbyInterpreter,\r\n\t\t\tbyLanguage,\r\n\t\t\tbyPath,\r\n\t\t\tbyScope,\r\n\t\t\tbySignature,\r\n\t\t};\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Match an icon using a resource's basename.\r\n\t *\r\n\t * @param {String} name - Name of filesystem entity\r\n\t * @param {Boolean} [directory=false] - Match folders instead of files\r\n\t * @return {Icon}\r\n\t */\r\n\tmatchName(name, directory = false){\r\n\t\tconst [cachedIcons, icons] = directory\r\n\t\t\t? [cache.directoryName, this.directoryIcons.byName]\r\n\t\t\t: [cache.fileName,      this.fileIcons.byName];\r\n\t\tconst cached = cachedIcons.get(name);\r\n\t\tif(cached) return cached;\r\n\t\tfor(let i = 0, l = icons.length; i < l; ++i){\r\n\t\t\tconst icon = icons[i];\r\n\t\t\tif(icon.match.test(name)){\r\n\t\t\t\tcachedIcons.set(name, icon);\r\n\t\t\t\treturn icon;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Match an icon using a resource's system path.\r\n\t *\r\n\t * @param {String} path - Full pathname to check\r\n\t * @param {Boolean} [directory=false] - Match folders instead of files\r\n\t * @return {Icon}\r\n\t */\r\n\tmatchPath(path, directory = false){\r\n\t\tconst [cachedIcons, icons] = directory\r\n\t\t\t? [cache.directoryName, this.directoryIcons.byPath]\r\n\t\t\t: [cache.fileName,      this.fileIcons.byPath];\r\n\t\tconst cached = cachedIcons.get(path);\r\n\t\tif(cached) return cached;\r\n\t\tfor(let i = 0, l = icons.length; i < l; ++i){\r\n\t\t\tconst icon = icons[i];\r\n\t\t\tif(icon.match.test(path)){\r\n\t\t\t\tcachedIcons.set(path, icon);\r\n\t\t\t\treturn icon;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Match an icon using the human-readable form of its related language.\r\n\t *\r\n\t * Typically used for matching modelines and Linguist-language attributes.\r\n\t *\r\n\t * @example IconTables.matchLanguage(\"JavaScript\")\r\n\t * @param {String} name - Name/alias of language\r\n\t * @return {Icon}\r\n\t */\r\n\tmatchLanguage(name){\r\n\t\tconst cached = cache.language.get(name);\r\n\t\tif(cached) return cached;\r\n\t\tconst icons = this.fileIcons.byLanguage;\r\n\t\tfor(let i = 0, l = icons.length; i < l; ++i){\r\n\t\t\tconst icon = icons[i];\r\n\t\t\tif(icon.lang.test(name)){\r\n\t\t\t\tcache.language.set(name, icon);\r\n\t\t\t\treturn icon;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Match an icon using the grammar-scope assigned to it.\r\n\t *\r\n\t * @example IconTables.matchScope(\"source.js\")\r\n\t * @param {String} name\r\n\t * @return {Icon}\r\n\t */\r\n\tmatchScope(name){\r\n\t\tconst cached = cache.scope.get(name);\r\n\t\tif(cached) return cached;\r\n\t\tconst icons = this.fileIcons.byScope;\r\n\t\tfor(let i = 0, l = icons.length; i < l; ++i){\r\n\t\t\tconst icon = icons[i];\r\n\t\t\tif(icon.scope.test(name)){\r\n\t\t\t\tcache.scope.set(name, icon);\r\n\t\t\t\treturn icon;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Match an icon using the name of an interpreter which executes its language.\r\n\t *\r\n\t * Used for matching interpreter directives (a.k.a., \"hashbangs\").\r\n\t *\r\n\t * @example IconTables.matchInterpreter(\"bash\")\r\n\t * @param {String} name\r\n\t * @return {Icon}\r\n\t */\r\n\tmatchInterpreter(name){\r\n\t\tconst cached = cache.interpreter.get(name);\r\n\t\tif(cached) return cached;\r\n\t\tconst icons = this.fileIcons.byInterpreter;\r\n\t\tfor(let i = 0, l = icons.length; i < l; ++i){\r\n\t\t\tconst icon = icons[i];\r\n\t\t\tif(icon.interpreter.test(name)){\r\n\t\t\t\tcache.interpreter.set(name, icon);\r\n\t\t\t\treturn icon;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Match an icon using a resource's file signature.\r\n\t *\r\n\t * @example IconTables.matchSignature(\"\\x1F\\x8B\")\r\n\t * @param {String} data\r\n\t * @return {Icon}\r\n\t */\r\n\tmatchSignature(data){\r\n\t\tconst cached = cache.signature.get(data);\r\n\t\tif(cached) return cached;\r\n\t\tconst icons = this.fileIcons.bySignature;\r\n\t\tfor(let i = 0, l = icons.length; i < l; ++i){\r\n\t\t\tconst icon = icons[i];\r\n\t\t\tif(icon.signature.test(data)){\r\n\t\t\t\tcache.signature.set(data, icon);\r\n\t\t\t\treturn icon;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// Special case: Assume anything containing null-bytes is binary\r\n\t\tif(/\\0/.test(data)){\r\n\t\t\tcache.signature.set(data, this.binaryIcon);\r\n\t\t\treturn this.binaryIcon;\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n\r\n// TODO: Searching/caching should be a different class's responsibility.\r\n// Add a class to represent individual tables to obviate this mess.\r\nconst cache = {\r\n\tdirectoryName: new Map(),\r\n\tdirectoryPath: new Map(),\r\n\tfileName:      new Map(),\r\n\tfilePath:      new Map(),\r\n\tinterpreter:   new Map(),\r\n\tscope:         new Map(),\r\n\tlanguage:      new Map(),\r\n\tsignature:     new Map(),\r\n};\r\n\r\n\r\n/**\r\n * Hash of maps to cache searches.\r\n * @property {Object} cachedMatches\r\n */\r\nObject.defineProperty(IconTables.prototype, \"cache\", {\r\n\tget: () => cache,\r\n});\r\n\r\nmodule.exports = new IconTables();\r\n","module.exports = require(\"path\");","module.exports = require(\"atom-fs\");","\"use strict\";\r\n\r\nconst {CompositeDisposable, Emitter} = require(\"atom\");\r\nconst Storage = require(\"./storage.js\");\r\nconst UI = require(\"./ui.js\");\r\nconst NS = \"file-icons\";\r\n\r\n\r\n/**\r\n * Global interface that monitors state of package settings.\r\n *\r\n * @class\r\n */\r\nclass Options{\r\n\t\r\n\t/**\r\n\t * Register all relevant package options.\r\n\t */\r\n\tinit(){\r\n\t\tthis.disposables = new CompositeDisposable();\r\n\t\tthis.configNames = new Map();\r\n\t\tthis.emitter = new Emitter();\r\n\t\t\r\n\t\tthis.register(\"coloured\");\r\n\t\tthis.register(\"onChanges\", \"colourChangedOnly\");\r\n\t\tthis.register(\"defaultIconClass\", null, value => value.split(/\\s+/));\r\n\t\tthis.register(\"tabPaneIcon\");\r\n\t\tthis.register(\"strategies.grammar\");\r\n\t\tthis.register(\"strategies.hashbangs\");\r\n\t\tthis.register(\"strategies.modelines\");\r\n\t\tthis.register(\"strategies.usertypes\");\r\n\t\tthis.register(\"strategies.linguist\");\r\n\t\t\r\n\t\tthis.addCommand(\"clear-cache\",         () => Storage.reset());\r\n\t\tthis.addCommand(\"toggle-colours\",      () => this.toggle(\"coloured\"));\r\n\t\tthis.addCommand(\"toggle-changed-only\", () => this.toggle(\"colourChangedOnly\"));\r\n\t\tthis.addCommand(\"toggle-tab-icons\",    () => this.toggle(\"tabPaneIcon\"));\r\n\t\t\r\n\t\tthis.disposables.add(this.observe(\"coloured\", on => {\r\n\t\t\tconst classes = document.body.classList;\r\n\t\t\tclasses.toggle(NS + \"-colourless\", !on);\r\n\t\t\tclasses.toggle(NS + \"-coloured\",    on);\r\n\t\t}));\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Free up memory when deactivating.\r\n\t */\r\n\treset(){\r\n\t\tthis.disposables.dispose();\r\n\t\tthis.disposables = null;\r\n\t\tthis.emitter.emit(\"did-destroy\");\r\n\t\tthis.emitter.dispose();\r\n\t\tthis.emitter = null;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Register a callback to fire when a registered option changes.\r\n\t *\r\n\t * @param {String} setting - Name of registered option's property\r\n\t * @param {Function} fn - Callback that gets triggered\r\n\t * @return {Disposable}\r\n\t */\r\n\tonDidChange(setting, fn){\r\n\t\treturn this.emitter.on(`did-change-${setting}`, fn);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Execute a callback with the option's current and future values.\r\n\t *\r\n\t * Analoguous to `atom.config.observe`.\r\n\t *\r\n\t * @param {String} setting - Registered option's property\r\n\t * @param {Function} fn - Callback to trigger\r\n\t * @return {Disposable}\r\n\t */\r\n\tobserve(setting, fn){\r\n\t\tfn(this[setting]);\r\n\t\tconst handler = this.onDidChange(setting, fn);\r\n\t\treturn handler;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Mode which determines the colour-class used by a motif-aware icon.\r\n\t *\r\n\t * Possible values:\r\n\t *  - `false`: Dark-coloured theme is used. Use first colour-class.\r\n\t *  -  `true`: Light-coloured theme is used. Use second colour-class.\r\n\t *  -  `null`: Coloured icons are disabled. Use no colour-class.\r\n\t *\r\n\t * @property {Boolean|null}\r\n\t * @readonly\r\n\t */\r\n\tget colourMode(){\r\n\t\treturn this.coloured ? ~~UI.lightTheme : null;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Register a package setting in Atom.\r\n\t *\r\n\t * The value of a registered setting is stored on the Options global using\r\n\t * the given `property` name, which defaults to the setting's name if omitted.\r\n\t * An optional third parameter may be given to modify what gets stored, which\r\n\t * is usually desirable for strings that need to be split into arrays.\r\n\t *\r\n\t * @param {String}     option - Name of setting, as defined by package.json.\r\n\t * @param {String} [property] - Name of setting's property, if different.\r\n\t * @param {Function} [filter] - Filter to modify the setting's stored value.\r\n\t */\r\n\tregister(option, property = null, filter = null){\r\n\t\tconst propertyName = property || option.replace(/^\\w+\\./, \"\");\r\n\t\tconst optionName = `${NS}.${option}`;\r\n\t\tthis.configNames.set(propertyName, option);\r\n\t\t\r\n\t\tconst observer = atom.config.observe(optionName, value => {\r\n\t\t\tif(filter) value = filter(value);\r\n\t\t\tthis[propertyName] = value;\r\n\t\t\tthis.emitter.emit(\"did-change-\" + propertyName, value);\r\n\t\t});\r\n\t\t\r\n\t\tthis.disposables.add(observer);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Register a package command in Atom.\r\n\t *\r\n\t * @example Options.addCommand(\"toggle-colours\", () => …);\r\n\t * @param {String} name - Name without prefixed namespace\r\n\t * @param {Function} fn - Handler function\r\n\t * @return {Disposable}\r\n\t */\r\n\taddCommand(name, fn){\r\n\t\tconst id = `${NS}:${name}`;\r\n\t\tconst cmd = atom.commands.add(\"atom-workspace\", id, fn);\r\n\t\tthis.disposables.add(cmd);\r\n\t\treturn cmd;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Toggle the status of a package setting. Implies a boolean type.\r\n\t *\r\n\t * @param {String} option\r\n\t * @return {Boolean} Whether an option was changed.\r\n\t */\r\n\ttoggle(option){\r\n\t\tconst name = `${NS}.${option}`;\r\n\t\treturn atom.config.set(name, !(atom.config.get(name)));\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Set the value of a package setting.\r\n\t *\r\n\t * @example Options.set(\"colourChangedOnly\", false);\r\n\t * @param  {String} option - Name without package prefix\r\n\t * @param  {Mixed}   value - Setting's new value\r\n\t * @return {Boolean}\r\n\t */\r\n\tset(option, value){\r\n\t\tconst configName = this.configNames.get(option);\r\n\t\treturn atom.config.set(`${NS}.${configName}`, value);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Retrieve the value of a package setting.\r\n\t *\r\n\t * @example Options.get(\"coloured\");\r\n\t * @param {String} option - Name without package prefix\r\n\t * @return {Mixed}\r\n\t */\r\n\tget(option){\r\n\t\tconst configName = this.configNames.get(option);\r\n\t\treturn atom.config.get(`${NS}.${configName}`);\r\n\t}\r\n}\r\n\r\n\r\nmodule.exports = new Options();\r\n","\"use strict\";\r\n\r\nconst {CompositeDisposable} = require(\"atom\");\r\nconst {FileSystem} = require(\"atom-fs\");\r\nconst IconService = require(\"./icon-service.js\");\r\n\r\n\r\n/**\r\n * Discrete method for determining a {@link Resource}'s icon.\r\n *\r\n * @abstract\r\n * @class\r\n */\r\nclass Strategy{\r\n\t\r\n\t/**\r\n\t * Configure what the strategy does and how it matches icons.\r\n\t *\r\n\t * @constructor\r\n\t * @param {Object}  opts                      - An object defining the strategy's behaviour.\r\n\t * @param {String}  [opts.name=\"\"]            - Name used when serialising matched icons.\r\n\t * @param {Number}  [opts.priority=0]         - Determines precedence over other strategies.\r\n\t * @param {Boolean} [opts.ignoreVirtual=true] - Skip non-existent or simulated entities.\r\n\t * @param {Boolean} [opts.matchesFiles=true]  - Should the strategy check {@link File} objects?\r\n\t * @param {Boolean} [opts.matchesDirs=false]  - Should the strategy check directories?\r\n\t * @param {Boolean} [opts.noSetting=false]    - Always keep the strategy active.\r\n\t */\r\n\tconstructor(opts = {}){\r\n\t\tconst {\r\n\t\t\tname           = \"\",\r\n\t\t\tpriority       = 0,\r\n\t\t\tignoreVirtual  = true,\r\n\t\t\tmatchesFiles   = true,\r\n\t\t\tmatchesDirs    = false,\r\n\t\t\tnoSetting      = false,\r\n\t\t} = opts;\r\n\t\t\r\n\t\tthis.name          = name || \"\";\r\n\t\tthis.priority      = +priority || 0;\r\n\t\tthis.ignoreVirtual = !!ignoreVirtual;\r\n\t\tthis.matchesFiles  = !!matchesFiles;\r\n\t\tthis.matchesDirs   = !!matchesDirs;\r\n\t\tthis.noSetting     = !!noSetting;\r\n\r\n\t\t/**\r\n\t\t * @property {Boolean} enabled - Activation status, governed by package settings.\r\n\t\t */\r\n\t\tthis.enabled = null;\r\n\t\t\r\n\t\t/**\r\n\t\t * @property {Map} resources - A mapping of {@link Resource} ⇒ {@link Icon} matches.\r\n\t\t * Resources the strategy hasn't matched are assigned `null`. The value itself is `null`\r\n\t\t * if the strategy has been deactivated.\r\n\t\t */\r\n\t\tthis.resources = null;\r\n\t\t\r\n\t\t/**\r\n\t\t * @property {Map} resourceEvents - A map of {@link Resource} ⇒ {@link CompositeDisposables}.\r\n\t\t * Used for storing subscriptions that should only be registered once per resource. Disposed\r\n\t\t * and nulled when disabling strategy.\r\n\t\t */\r\n\t\tthis.resourceEvents = null;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Activate the strategy.\r\n\t *\r\n\t * @return {Boolean} False if already enabled.\r\n\t */\r\n\tenable(){\r\n\t\tif(this.enabled)\r\n\t\t\treturn false;\r\n\t\t\r\n\t\tthis.resources = new Map();\r\n\t\tthis.enabled = true;\r\n\t\tthis.resourceEvents = new Map();\r\n\t\t\r\n\t\tif(IconService.isReady)\r\n\t\t\tthis.checkAll();\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Deactivate the strategy.\r\n\t *\r\n\t * @return {Boolean} False if already disabled.\r\n\t */\r\n\tdisable(){\r\n\t\tif(!this.enabled)\r\n\t\t\treturn false;\r\n\t\t\r\n\t\tthis.resourceEvents.forEach(disposable => disposable.dispose());\r\n\t\t\r\n\t\tfor(const [resource] of this.resources)\r\n\t\t\tresource.icon && this.deleteIcon(resource);\r\n\t\t\r\n\t\tthis.resourceEvents.clear();\r\n\t\tthis.resourceEvents = null;\r\n\t\tthis.resources.clear();\r\n\t\tthis.resources = null;\r\n\t\tthis.enabled = false;\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Evaluate a resource to determine if an icon matches.\r\n\t *\r\n\t * The method is executed within a loop by the {@link StrategyManager}.\r\n\t * Returning a truthy value indicates a match was made and remaining\r\n\t * strategies need not be consulted.\r\n\t *\r\n\t * Actual icon assignment/removal is handled by the {@link addIcon} and\r\n\t * {@link deleteIcon} methods, respectively. Subclasses should override\r\n\t * {@link matchIcon} to determine what icon is matched for a resource.\r\n\t *\r\n\t * @param {Resource} resource\r\n\t * @param {Boolean} useExisting - If false, will ignore the last match\r\n\t * @return {Boolean}\r\n\t */\r\n\tcheck(resource, useExisting = true){\r\n\t\tif(this.ignoreVirtual && resource.isVirtual)\r\n\t\t\treturn false;\r\n\t\t\r\n\t\tif(useExisting && this.resources.get(resource))\r\n\t\t\treturn false;\r\n\t\t\r\n\t\telse{\r\n\t\t\tthis.registerResource(resource);\r\n\t\t\tconst icon = this.matchIcon(resource);\r\n\t\t\treturn icon\r\n\t\t\t\t? this.addIcon(resource, icon)\r\n\t\t\t\t: this.deleteIcon(resource);\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Evaluate every currently registered resource.\r\n\t *\r\n\t * @param {Boolean} useExisting - Discard existing matches\r\n\t */\r\n\tcheckAll(useExisting = true){\r\n\t\tfor(const [, resource] of FileSystem.paths){\r\n\t\t\tif(resource.isDirectory && !this.matchesDirs)\r\n\t\t\t\tcontinue;\r\n\t\t\tthis.check(resource, useExisting);\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Add an icon to the resource's {@link IconDelegate}.\r\n\t *\r\n\t * @param {Resource} resource\r\n\t * @param {Icon} icon\r\n\t * @return {Boolean} Always returns `true`.\r\n\t */\r\n\taddIcon(resource, icon){\r\n\t\tthis.resources.set(resource, icon);\r\n\t\tresource.icon.add(icon, this.priority);\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove an icon from a resource's {@link IconDelegate}.\r\n\t *\r\n\t * @param {Resource} resource\r\n\t * @return {Boolean} Always returns `false`.\r\n\t */\r\n\tdeleteIcon(resource){\r\n\t\tconst icon = this.resources.get(resource);\r\n\t\tif(icon)\r\n\t\t\tresource.icon.remove(icon, this.priority);\r\n\t\tthis.resources.set(resource, null);\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Retrieve an {@link Icon} for a resource.\r\n\t *\r\n\t * This method does nothing by default: it exists as an extension point\r\n\t * for subclasses. If no match is found, the method must return `null`.\r\n\t *\r\n\t * @param {Resource} resource\r\n\t * @return {Icon}\r\n\t * @abstract\r\n\t */\r\n\tmatchIcon(){\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Attach subscriptions to a newly-discovered resource.\r\n\t *\r\n\t * Subclasses should extend this to monitor resource behaviour.\r\n\t *\r\n\t * @param {Resource} resource\r\n\t * @return {Boolean} False if the resource was already registered\r\n\t */\r\n\tregisterResource(resource){\r\n\t\tif(this.resourceEvents.has(resource))\r\n\t\t\treturn false;\r\n\t\t\r\n\t\tconst disposables = new CompositeDisposable();\r\n\t\tconst onDestroyed = resource.onDidDestroy(() => {\r\n\t\t\tthis.resourceEvents.get(resource).dispose();\r\n\t\t\tthis.resourceEvents.delete(resource);\r\n\t\t\tthis.resources.delete(resource);\r\n\t\t\tdisposables.dispose();\r\n\t\t});\r\n\t\t\r\n\t\tdisposables.add(onDestroyed);\r\n\t\tthis.resourceEvents.set(resource, disposables);\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\n\r\nmodule.exports = Strategy;\r\n","\"use strict\";\r\n\r\nconst {sep}    = require(\"path\");\r\nconst AtomFS   = require(\"atom-fs\");\r\nconst LRUCache = require(\"lru-cache\");\r\n\r\nconst isWin    = \"\\\\\" === sep;\r\nconst MAX_SIZE = 10000;\r\nconst version  = 0x005;\r\nlet locked     = false;\r\nlet data       = null;\r\n\r\n\r\n/**\r\n * Cache for session-specific data.\r\n *\r\n * @class\r\n */\r\nclass Storage{\r\n\r\n\t/**\r\n\t * Initialise session storage.\r\n\t *\r\n\t * @param {Object} state - Data serialised from last session\r\n\t */\r\n\tinit(state){\r\n\t\tlocked = false;\r\n\t\tdata = this.deserialise(state);\r\n\r\n\t\tthis.clean();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Serialise data intended to persist between sessions.\r\n\t */\r\n\tserialise(){\r\n\t\tif(!data)\r\n\t\t\treturn null;\r\n\t\treturn {\r\n\t\t\tpaths: data.paths.dump(),\r\n\t\t\tversion,\r\n\t\t};\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Deserialise the result of a previous {@link Storage#serialise} call.\r\n\t */\r\n\tdeserialise(state){\r\n\t\tif(!state || state.version !== version)\r\n\t\t\treturn this.createBlankCache();\r\n\t\tconst paths = new LRUCache({max: MAX_SIZE});\r\n\t\tpaths.load(state.paths);\r\n\t\treturn {paths, version};\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Purge cache of invalid or irrelevant data.\r\n\t */\r\n\tclean(){\r\n\t\tdata.paths.forEach((value, path) => {\r\n\t\t\tif(!this.hasData(path) || !this.isProjectRelated(path))\r\n\t\t\t\tthis.deletePath(path);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Create a blank cache to store session data.\r\n\t *\r\n\t * @return {Object}\r\n\t */\r\n\tcreateBlankCache(){\r\n\t\treturn {\r\n\t\t\tpaths: new LRUCache({max: MAX_SIZE}),\r\n\t\t\tversion,\r\n\t\t};\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Determine if a currently-open project encloses a path.\r\n\t *\r\n\t * @param {String} path\r\n\t * @return {Boolean}\r\n\t */\r\n\tisProjectRelated(path){\r\n\t\tconst {rootDirectories} = atom.project;\r\n\t\tfor(let i = 0, l = rootDirectories.length; i < l; ++i){\r\n\t\t\tconst projectPath = rootDirectories[i].path;\r\n\r\n\t\t\tif(path === projectPath || 0 === path.indexOf(projectPath + sep))\r\n\t\t\t\treturn true;\r\n\r\n\t\t\tif(isWin){\r\n\t\t\t\tconst fixedPath = AtomFS.normalisePath(projectPath);\r\n\t\t\t\tif(path === fixedPath || 0 === path.indexOf(fixedPath + \"/\"))\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Use path entries when iterating.\r\n\t *\r\n\t * @return {Iterator}\r\n\t */\r\n\t[Symbol.iterator](){\r\n\t\tconst pathData = data.paths;\r\n\t\tconst pathKeys = pathData.keys();\r\n\t\tconst pathValues = pathData.values();\r\n\t\tconst {length} = pathKeys;\r\n\t\tlet index = 0;\r\n\r\n\t\treturn {\r\n\t\t\tnext(){\r\n\t\t\t\tif(index >= length)\r\n\t\t\t\t\treturn { done: true };\r\n\t\t\t\telse{\r\n\t\t\t\t\tconst path  = pathKeys[index];\r\n\t\t\t\t\tconst value = [path, pathValues[index]];\r\n\t\t\t\t\t++index;\r\n\t\t\t\t\treturn { value };\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Create a blank entry for an unlisted path.\r\n\t *\r\n\t * Any existing data is blindly overwritten. Use {@link #getPathEntry}\r\n\t * or {@link #deletePathEntry} to add/delete path-related data.\r\n\t *\r\n\t * @param {String} path\r\n\t * @return {Object}\r\n\t * @private\r\n\t */\r\n\taddPath(path){\r\n\t\tif(locked) return;\r\n\r\n\t\tconst value = {\r\n\t\t\ticon: null,\r\n\t\t\tinode: null,\r\n\t\t};\r\n\t\tdata.paths.set(path, value);\r\n\t\treturn value;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Retrieve the data cached for a path.\r\n\t *\r\n\t * A new entry is created if one doesn't exist.\r\n\t *\r\n\t * @param {String} path\r\n\t * @return {Object}\r\n\t */\r\n\tgetPathEntry(path){\r\n\t\tconst entry = data.paths.get(path);\r\n\t\tif(entry) return entry;\r\n\r\n\t\treturn locked\r\n\t\t\t? null\r\n\t\t\t: this.addPath(path);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Retrieve the icon data cached for a path.\r\n\t *\r\n\t * @param {String} path\r\n\t * @return {Object}\r\n\t */\r\n\tgetPathIcon(path){\r\n\t\tconst {icon} = this.getPathEntry(path);\r\n\t\tif(!icon) return null;\r\n\r\n\t\treturn {\r\n\t\t\tpriority:  icon[0],\r\n\t\t\tindex:     icon[1],\r\n\t\t\ticonClass: icon[2],\r\n\t\t};\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Determine if stored data exists for a given path.\r\n\t *\r\n\t * @param {String} path\r\n\t * @return {Boolean}\r\n\t */\r\n\thasData(path){\r\n\t\tconst entry = data.paths.get(path) || null;\r\n\t\treturn !!(entry && (entry.icon || entry.inode));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Determine if icon-related data exists for a given path.\r\n\t *\r\n\t * @param {String} path\r\n\t * @return {Boolean}\r\n\t */\r\n\thasIcon(path){\r\n\t\tconst entry = data.paths.get(path);\r\n\t\treturn !!(entry && entry.icon);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Store icon-related data for a path.\r\n\t *\r\n\t * @param {String} path\r\n\t * @param {Object} iconData\r\n\t * @param {Number} iconData.priority\r\n\t * @param {Number} iconData.index\r\n\t * @param {Array}  iconData.iconClass\r\n\t */\r\n\tsetPathIcon(path, iconData){\r\n\t\tif(!iconData) return;\r\n\t\tthis.getPathEntry(path).icon = [\r\n\t\t\ticonData.priority,\r\n\t\t\ticonData.index,\r\n\t\t\ticonData.iconClass,\r\n\t\t];\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Store the inode of a filesystem path.\r\n\t *\r\n\t * @param {String} path\r\n\t * @param {Number} inode\r\n\t */\r\n\tsetPathInode(path, inode){\r\n\t\tif(!inode || locked) return;\r\n\t\tlet entry = this.getPathEntry(path);\r\n\r\n\t\t// We're holding stale data. Shoot it.\r\n\t\tif(entry.inode && entry.inode !== inode){\r\n\t\t\tthis.deletePath(path);\r\n\t\t\tentry = this.addPath(path);\r\n\t\t}\r\n\r\n\t\tentry.inode = inode;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Delete any data being stored for a path.\r\n\t *\r\n\t * @param {String} path\r\n\t */\r\n\tdeletePath(path){\r\n\t\tdata.paths.del(path);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Delete a path's cached icon.\r\n\t *\r\n\t * @param {String} path\r\n\t */\r\n\tdeletePathIcon(path){\r\n\t\tdelete this.getPathEntry(path).icon;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Block further changes to cached data.\r\n\t *\r\n\t * Stops strategies losing cached data when deactivating\r\n\t * the package, or when closing the project window.\r\n\t */\r\n\tlock(){\r\n\t\tlocked = true;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Wipe all cached data.\r\n\t *\r\n\t * Handler for a user-command. Not used internally.\r\n\t * @public\r\n\t */\r\n\treset(){\r\n\t\tif(this.locked){\r\n\t\t\tconst detail = \"This shouldn't have happened. Please restart Atom.\";\r\n\t\t\tatom.notifications.addError(\"Storage locked\", {detail});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\telse{\r\n\t\t\tconst {size} = this;\r\n\t\t\tdata = this.createBlankCache();\r\n\t\t\tatom.project.serialize();\r\n\t\t\tconst plural = 1 === size ? \"\" : \"s\";\r\n\t\t\tconst message = `Cleared ${size} path${plural} from icon cache.`;\r\n\t\t\tatom.notifications.addInfo(message, {dismissable: true});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Pointer to the hash which holds all cached data.\r\n\t *\r\n\t * @property {Object}\r\n\t * @readonly\r\n\t */\r\n\tget data(){\r\n\t\treturn data;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Whether the cache has been locked from modification.\r\n\t *\r\n\t * @property {Boolean}\r\n\t * @readonly\r\n\t */\r\n\tget locked(){\r\n\t\treturn locked;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Number of paths currently cached.\r\n\t *\r\n\t * @property {Number}\r\n\t * @readonly\r\n\t */\r\n\tget size(){\r\n\t\treturn data.paths.length;\r\n\t}\r\n}\r\n\r\n\r\nmodule.exports = new Storage();\r\n","'use strict';\n\nconst path = require('path');\nconst win32 = process.platform === 'win32';\nconst {\n  REGEX_BACKSLASH,\n  REGEX_REMOVE_BACKSLASH,\n  REGEX_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_GLOBAL\n} = require('./constants');\n\nexports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\nexports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\nexports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\nexports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\nexports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\n\nexports.removeBackslashes = str => {\n  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n    return match === '\\\\' ? '' : match;\n  });\n};\n\nexports.supportsLookbehinds = () => {\n  const segs = process.version.slice(1).split('.').map(Number);\n  if (segs.length === 3 && segs[0] >= 9 || (segs[0] === 8 && segs[1] >= 10)) {\n    return true;\n  }\n  return false;\n};\n\nexports.isWindows = options => {\n  if (options && typeof options.windows === 'boolean') {\n    return options.windows;\n  }\n  return win32 === true || path.sep === '\\\\';\n};\n\nexports.escapeLast = (input, char, lastIdx) => {\n  const idx = input.lastIndexOf(char, lastIdx);\n  if (idx === -1) return input;\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\n};\n\nexports.removePrefix = (input, state = {}) => {\n  let output = input;\n  if (output.startsWith('./')) {\n    output = output.slice(2);\n    state.prefix = './';\n  }\n  return output;\n};\n\nexports.wrapOutput = (input, state = {}, options = {}) => {\n  const prepend = options.contains ? '' : '^';\n  const append = options.contains ? '' : '$';\n\n  let output = `${prepend}(?:${input})${append}`;\n  if (state.negated === true) {\n    output = `(?:^(?!${output}).*$)`;\n  }\n  return output;\n};\n","'use strict';\n\nconst path = require('path');\nconst WIN_SLASH = '\\\\\\\\/';\nconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\n\n/**\n * Posix glob regex\n */\n\nconst DOT_LITERAL = '\\\\.';\nconst PLUS_LITERAL = '\\\\+';\nconst QMARK_LITERAL = '\\\\?';\nconst SLASH_LITERAL = '\\\\/';\nconst ONE_CHAR = '(?=.)';\nconst QMARK = '[^/]';\nconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\nconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\nconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\nconst NO_DOT = `(?!${DOT_LITERAL})`;\nconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\nconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\nconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\nconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\nconst STAR = `${QMARK}*?`;\n\nconst POSIX_CHARS = {\n  DOT_LITERAL,\n  PLUS_LITERAL,\n  QMARK_LITERAL,\n  SLASH_LITERAL,\n  ONE_CHAR,\n  QMARK,\n  END_ANCHOR,\n  DOTS_SLASH,\n  NO_DOT,\n  NO_DOTS,\n  NO_DOT_SLASH,\n  NO_DOTS_SLASH,\n  QMARK_NO_DOT,\n  STAR,\n  START_ANCHOR\n};\n\n/**\n * Windows glob regex\n */\n\nconst WINDOWS_CHARS = {\n  ...POSIX_CHARS,\n\n  SLASH_LITERAL: `[${WIN_SLASH}]`,\n  QMARK: WIN_NO_SLASH,\n  STAR: `${WIN_NO_SLASH}*?`,\n  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\n  NO_DOT: `(?!${DOT_LITERAL})`,\n  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\n  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\n  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\n  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`\n};\n\n/**\n * POSIX Bracket Regex\n */\n\nconst POSIX_REGEX_SOURCE = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  ascii: '\\\\x00-\\\\x7F',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E ',\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n  POSIX_REGEX_SOURCE,\n\n  // regular expressions\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n\n  // Replace globs with equivalent patterns to reduce parsing time.\n  REPLACEMENTS: {\n    '***': '*',\n    '**/**': '**',\n    '**/**/**': '**'\n  },\n\n  // Digits\n  CHAR_0: 48, /* 0 */\n  CHAR_9: 57, /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65, /* A */\n  CHAR_LOWERCASE_A: 97, /* a */\n  CHAR_UPPERCASE_Z: 90, /* Z */\n  CHAR_LOWERCASE_Z: 122, /* z */\n\n  CHAR_LEFT_PARENTHESES: 40, /* ( */\n  CHAR_RIGHT_PARENTHESES: 41, /* ) */\n\n  CHAR_ASTERISK: 42, /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: 38, /* & */\n  CHAR_AT: 64, /* @ */\n  CHAR_BACKWARD_SLASH: 92, /* \\ */\n  CHAR_CARRIAGE_RETURN: 13, /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */\n  CHAR_COLON: 58, /* : */\n  CHAR_COMMA: 44, /* , */\n  CHAR_DOT: 46, /* . */\n  CHAR_DOUBLE_QUOTE: 34, /* \" */\n  CHAR_EQUAL: 61, /* = */\n  CHAR_EXCLAMATION_MARK: 33, /* ! */\n  CHAR_FORM_FEED: 12, /* \\f */\n  CHAR_FORWARD_SLASH: 47, /* / */\n  CHAR_GRAVE_ACCENT: 96, /* ` */\n  CHAR_HASH: 35, /* # */\n  CHAR_HYPHEN_MINUS: 45, /* - */\n  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */\n  CHAR_LEFT_CURLY_BRACE: 123, /* { */\n  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */\n  CHAR_LINE_FEED: 10, /* \\n */\n  CHAR_NO_BREAK_SPACE: 160, /* \\u00A0 */\n  CHAR_PERCENT: 37, /* % */\n  CHAR_PLUS: 43, /* + */\n  CHAR_QUESTION_MARK: 63, /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */\n  CHAR_RIGHT_CURLY_BRACE: 125, /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */\n  CHAR_SEMICOLON: 59, /* ; */\n  CHAR_SINGLE_QUOTE: 39, /* ' */\n  CHAR_SPACE: 32, /*   */\n  CHAR_TAB: 9, /* \\t */\n  CHAR_UNDERSCORE: 95, /* _ */\n  CHAR_VERTICAL_LINE: 124, /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \\uFEFF */\n\n  SEP: path.sep,\n\n  /**\n   * Create EXTGLOB_CHARS\n   */\n\n  extglobChars(chars) {\n    return {\n      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },\n      '?': { type: 'qmark', open: '(?:', close: ')?' },\n      '+': { type: 'plus', open: '(?:', close: ')+' },\n      '*': { type: 'star', open: '(?:', close: ')*' },\n      '@': { type: 'at', open: '(?:', close: ')' }\n    };\n  },\n\n  /**\n   * Create GLOB_CHARS\n   */\n\n  globChars(win32) {\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\n  }\n};\n","\"use strict\";\r\n\r\nconst {join} = require(\"path\");\r\nconst {FileSystem} = require(\"atom-fs\");\r\nconst {rgbToHSL} = require(\"./utils.js\");\r\nconst {CompositeDisposable, Disposable, Emitter} = require(\"atom\");\r\n\r\n\r\n// TODO: Double-check how much of this file is even needed once Atom 1.23 hits stable\r\nclass UI {\r\n\t\r\n\tconstructor(){\r\n\t\tthis.reset();\r\n\t\tthis.lightTheme = false;\r\n\t}\r\n\t\r\n\t\r\n\t// TODO: Clean up the whole notion of \"colour modes/motifs\", etc.\r\n\tinit(){\r\n\t\tthis.projects = [];\r\n\t\t\r\n\t\tthis.disposables.add(\r\n\t\t\tatom.project.onDidChangePaths(to => this.setProjects(to)),\r\n\t\t\tatom.themes.onDidChangeActiveThemes(() => {\r\n\t\t\t\tsetImmediate(() => this.checkMotif());\r\n\t\t\t\tthis.fixOffset();\r\n\t\t\t}),\r\n\t\t\tthis.onSaveNewFile(args => {\r\n\t\t\t\tconst file = FileSystem.get(args.file);\r\n\t\t\t\tfile && file.addEditor(args.editor);\r\n\t\t\t}),\r\n\t\t\tthis.onOpenFile(editor => {\r\n\t\t\t\tconst path = editor.getPath();\r\n\t\t\t\tlet entity = FileSystem.get(path);\r\n\t\t\t\tif(!entity || \"function\" !== typeof entity.addEditor){\r\n\t\t\t\t\tFileSystem.paths.delete(path);\r\n\t\t\t\t\tentity = FileSystem.get(path);\r\n\t\t\t\t}\r\n\t\t\t\tentity && entity.addEditor(editor);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\t\r\n\t\r\n\treset(){\r\n\t\tthis.disposables && this.disposables.dispose();\r\n\t\tthis.emitter     && this.emitter.dispose();\r\n\t\tthis.disposables = new CompositeDisposable();\r\n\t\tthis.emitter     = new Emitter();\r\n\t}\r\n\r\n\r\n\tobserve(){\r\n\t\tthis.disposables.add(\r\n\t\t\tatom.workspace.observeTextEditors(editor => {\r\n\t\t\t\tthis.emitOpenedEditor(editor);\r\n\t\t\t\t\r\n\t\t\t\t// Existing file\r\n\t\t\t\tif(editor.getPath())\r\n\t\t\t\t\tthis.emitter.emit(\"open-file\", editor);\r\n\t\t\t\t\r\n\t\t\t\t// New document: track once a file's been saved\r\n\t\t\t\telse{\r\n\t\t\t\t\tthis.emitter.emit(\"open-blank\", editor);\r\n\t\t\t\t\tthis.waitToSave(editor).then(file => {\r\n\t\t\t\t\t\tthis.emitter.emit(\"save-new-file\", {file, editor});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Register a handler function to fire in response to emitted events.\r\n\t *\r\n\t * @param {String} eventName\r\n\t * @param {Function} handler\r\n\t * @return {Disposable}\r\n\t */\r\n\tsubscribe(eventName, handler){\r\n\t\treturn this.emitter\r\n\t\t\t? this.emitter.on(eventName, handler)\r\n\t\t\t: new Disposable(() => {});\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Dispatch an event with the designated name and argument list.\r\n\t *\r\n\t * @param {String} eventName\r\n\t * @param {Array} [args=[]]\r\n\t */\r\n\temit(eventName, args = []){\r\n\t\tif(!this.emitter) return;\r\n\t\tthis.emitter.emit(eventName, ...args);\r\n\t}\r\n\t\r\n\t\r\n\t/* Event subscription */\r\n\tonMotifChanged         (fn){ return this.subscribe(\"motif-changed\",      fn); }\r\n\tonOpenEditor           (fn){ return this.subscribe(\"open-editor\",        fn); }\r\n\tonOpenFile             (fn){ return this.subscribe(\"open-file\",          fn); }\r\n\tonOpenBlank            (fn){ return this.subscribe(\"open-blank\",         fn); }\r\n\tonOpenProject          (fn){ return this.subscribe(\"open-project\",       fn); }\r\n\tonProjectsAvailable    (fn){ return this.subscribe(\"projects-available\", fn); }\r\n\tonProjectsChanged      (fn){ return this.subscribe(\"projects-changed\",   fn); }\r\n\tonProjectsEmptied      (fn){ return this.subscribe(\"projects-emptied\",   fn); }\r\n\tonSaveNewFile          (fn){ return this.subscribe(\"save-new-file\",      fn); }\r\n\t\r\n\t/* Event emission */\r\n\temitMotifChanged       (...$){ this.emit(\"motif-changed\",      $); }\r\n\temitOpenedEditor       (...$){ this.emit(\"open-editor\",        $); }\r\n\temitOpenedFile         (...$){ this.emit(\"open-file\",          $); }\r\n\temitOpenedBlank        (...$){ this.emit(\"open-blank\",         $); }\r\n\temitOpenedProject      (...$){ this.emit(\"open-project\",       $); }\r\n\temitProjectsAvailable  (...$){ this.emit(\"projects-available\", $); }\r\n\temitProjectsChanged    (...$){ this.emit(\"projects-changed\",   $); }\r\n\temitProjectsEmptied    (...$){ this.emit(\"projects-emptied\",   $); }\r\n\t\r\n\t\r\n\tobserveFiles(fn){\r\n\t\tconst {editors} = atom.textEditors;\r\n\t\tfor(let i = 0, l = editors.length; i < l; ++i){\r\n\t\t\tconst editor = editors[i];\r\n\t\t\teditor.getFileName() && fn(editor);\r\n\t\t}\r\n\t\treturn this.onOpenFile(fn);\r\n\t}\r\n\r\n\r\n\tgetStyleSheets(){\r\n\t\tconst {document} = global;\r\n\t\tif(!document || \"object\" !== typeof document.styleSheets)\r\n\t\t\treturn [];\r\n\t\tconst sheets = [];\r\n\t\tconst {length} = document.styleSheets;\r\n\t\tfor(let i = 0; i < length; ++i)\r\n\t\t\tsheets.push(document.styleSheets[i]);\r\n\t\treturn sheets;\r\n\t}\r\n\r\n\r\n\tgetStyleElement(filename){\r\n\t\tconst packagePath = atom.packages.loadedPackages[\"file-icons\"].path;\r\n\t\tconst styles = this.getStyleSheets();\r\n\t\tif(!document || !styles || !packagePath)\r\n\t\t\treturn null;\r\n\t\tconst stylePath = join(packagePath, \"styles\", filename);\r\n\t\tfor(let i = 0, l = styles.length; i < l; ++i){\r\n\t\t\tconst styleSheet = styles[i];\r\n\t\t\tconst {ownerNode} = styleSheet;\r\n\t\t\tif(ownerNode && ownerNode.sourcePath === stylePath)\r\n\t\t\t\treturn styleSheet;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t\r\n\tgetThemeColour(){\r\n\t\tconst styleSheet = this.getStyleElement(\"colours.less\");\r\n\t\tif(!styleSheet)\r\n\t\t\treturn null;\r\n\t\tfor(const rule of styleSheet.cssRules)\r\n\t\t\tif(\".theme-colour-check\" === rule.selectorText){\r\n\t\t\t\tconst match = rule.cssText.match(/rgb\\(.+\\)/);\r\n\t\t\t\treturn match\r\n\t\t\t\t\t? match[0].match(/[\\d.]+(?=[,)])/g).map(Number)\r\n\t\t\t\t\t: null;\r\n\t\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t\r\n\tcheckMotif(){\r\n\t\tconst colour = this.getThemeColour();\r\n\t\tif(!colour) return;\r\n\t\tconst isLight = rgbToHSL(colour)[2] >= .5;\r\n\t\tif(isLight !== this.lightTheme){\r\n\t\t\tthis.lightTheme = isLight;\r\n\t\t\tthis.emitMotifChanged(isLight);\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tfixOffset(){\r\n\t\tconst styles    = this.getStyleSheets();\r\n\t\tconst numStyles = styles.length;\r\n\t\t\r\n\t\tfor(let s = 0; s < numStyles; ++s){\r\n\t\t\tconst rules    = styles[s].cssRules;\r\n\t\t\tconst numRules = rules.length;\r\n\t\t\t\r\n\t\t\tfor(let r = 0; r < numRules; ++r){\r\n\t\t\t\tconst selector = \".list-group .icon::before, .list-tree .icon::before\";\r\n\t\t\t\tconst rule = rules[r];\r\n\t\t\t\t\r\n\t\t\t\tif(rule.selectorText === selector && rule.style.top){\r\n\t\t\t\t\tconst offset = rule.style.top;\r\n\t\t\t\t\trule.style.top = \"\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(this.restoreOffset){\r\n\t\t\t\t\t\tthis.restoreOffset.dispose();\r\n\t\t\t\t\t\tthis.disposables.remove(this.restoreOffset);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.restoreOffset = new Disposable(() => rule.style.top = offset);\r\n\t\t\t\t\tthis.disposables.add(this.restoreOffset);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\twaitToSave(editor){\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tconst cd = new CompositeDisposable(\r\n\t\t\t\tnew Disposable(() => this.disposables.remove(cd)),\r\n\t\t\t\teditor.onDidDestroy(() => cd.dispose()),\r\n\t\t\t\teditor.onDidChangePath(file => {\r\n\t\t\t\t\tcd.dispose();\r\n\t\t\t\t\tresolve(file);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tthis.disposables.add(cd);\r\n\t\t});\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Update the list of currently-open project folders.\r\n\t *\r\n\t * @param {Array} to\r\n\t * @emits paths-changed\r\n\t */\r\n\tsetProjects(to = []){\r\n\t\tconst from = this.projects;\r\n\t\tif(from.join(\"\\n\") !== to.join(\"\\n\")){\r\n\t\t\tthis.projects = to;\r\n\t\t\tto.length\r\n\t\t\t\t? this.emitProjectsAvailable()\r\n\t\t\t\t: this.emitProjectsEmptied();\r\n\t\t\tthis.emitProjectsChanged({from, to});\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nmodule.exports = new UI();\r\n","\"use strict\";\r\n\r\nconst Strategy = require(\"../strategy.js\");\r\n\r\n\r\n/**\r\n * Abstract base-class for any strategy that matches file-data.\r\n *\r\n * @abstract\r\n * @class\r\n */\r\nclass HeaderStrategy extends Strategy {\r\n\t\r\n\t/**\r\n\t * Configure a new HeaderStrategy subclass.\r\n\t *\r\n\t * @constructor\r\n\t * @param {Object}  opts                     - An object defining the strategy's behaviour.\r\n\t * @param {String}  [opts.name=\"\"]           - Name used when serialising matched icons.\r\n\t * @param {Number}  [opts.priority=0]        - Determines precedence over other strategies.\r\n\t * @param {Boolean} [opts.ignoreBinary=true] - Avoid scanning non-textual/binary files\r\n\t * @param {Number}  [opts.minScanSize=6]     - Minimum filesize that deems a file worth scanning.\r\n\t * @param {Number}  [opts.maxScanSize=80]    - Maximum number of bytes to read from each file.\r\n\t */\r\n\tconstructor(opts = {}){\r\n\t\tconst {\r\n\t\t\tname           = \"\",\r\n\t\t\tpriority       = 0,\r\n\t\t\tignoreBinary   = true,\r\n\t\t\tminScanSize    = 6,\r\n\t\t\tmaxScanSize    = 80,\r\n\t\t\tnoSetting      = false,\r\n\t\t} = opts;\r\n\t\t\r\n\t\tsuper({\r\n\t\t\tname,\r\n\t\t\tpriority,\r\n\t\t\tnoSetting,\r\n\t\t\tmatchesFiles: true,\r\n\t\t\tmatchesDirs:  false,\r\n\t\t});\r\n\t\t\r\n\t\tthis.ignoreBinary = !!ignoreBinary;\r\n\t\tthis.minScanSize  = +minScanSize;\r\n\t\tthis.maxScanSize  = +maxScanSize;\r\n\t}\r\n\t\r\n\t\r\n\tcheck(resource, useExisting = true){\r\n\t\tif(this.needToScan(resource))\r\n\t\t\tresource.loadData(false, this.maxScanSize);\r\n\t\treturn super.check(resource, useExisting);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Add handler to rerun strategy when files are modified.\r\n\t *\r\n\t * @param {Resource} resource - Resource to monitor\r\n\t * @return {Boolean} False if the resource was already registered\r\n\t * @override\r\n\t */\r\n\tregisterResource(resource){\r\n\t\tif(super.registerResource(resource)){\r\n\t\t\tconst disposables = this.resourceEvents.get(resource);\r\n\t\t\t\r\n\t\t\tdisposables.add(resource.onDidChangeData(change => {\r\n\t\t\t\tconst from = this.getFirstLine(change.from);\r\n\t\t\t\tconst to   = this.getFirstLine(change.to);\r\n\t\t\t\tif(from !== to)\r\n\t\t\t\t\tthis.check(resource, false);\r\n\t\t\t}));\r\n\t\t\t\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t\r\n\t\telse return false;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Extract the first line from a block of text.\r\n\t *\r\n\t * @param {String} input\r\n\t * @param {Number} [count=1]\r\n\t * @return {String}\r\n\t */\r\n\tgetFirstLine(input, count = 1){\r\n\t\treturn input ? input.split(/\\r?\\n/).slice(0, count).join(\"\\n\") : \"\";\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Determine if a resource's data should be scanned.\r\n\t *\r\n\t * @param {Resource} file\r\n\t * @return {Boolean}\r\n\t */\r\n\tneedToScan(file){\r\n\t\treturn null === file.data\r\n\t\t\t&& (this.ignoreBinary || !this.isBinary(file))\r\n\t\t\t&& !file.unreadable\r\n\t\t\t&& !file.isVirtual\r\n\t\t\t&& file.size >= this.minScanSize;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Determine if a resource's data looks to be non-textual/binary.\r\n\t *\r\n\t * @param {Resource} resource\r\n\t * @return {Boolean}\r\n\t */\r\n\tisBinary(resource){\r\n\t\tconst binaryTypes = /\\.(?:exe|jpe?g|png|gif|bmp|py[co]|woff2?|ttf|ico|webp|zip|[tr]ar|gz|bz2)$/i;\r\n\t\treturn resource.binary || binaryTypes.test(resource.name);\r\n\t}\r\n}\r\n\r\n\r\nmodule.exports = HeaderStrategy;\r\n","'use strict';\n\nconst utils = require('./utils');\n\nmodule.exports = (ast, options = {}) => {\n  let stringify = (node, parent = {}) => {\n    let invalidBlock = options.escapeInvalid && utils.isInvalidBrace(parent);\n    let invalidNode = node.invalid === true && options.escapeInvalid === true;\n    let output = '';\n\n    if (node.value) {\n      if ((invalidBlock || invalidNode) && utils.isOpenOrClose(node)) {\n        return '\\\\' + node.value;\n      }\n      return node.value;\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes) {\n      for (let child of node.nodes) {\n        output += stringify(child);\n      }\n    }\n    return output;\n  };\n\n  return stringify(ast);\n};\n\n","'use strict';\n\nexports.isInteger = num => {\n  if (typeof num === 'number') {\n    return Number.isInteger(num);\n  }\n  if (typeof num === 'string' && num.trim() !== '') {\n    return Number.isInteger(Number(num));\n  }\n  return false;\n};\n\n/**\n * Find a node of the given type\n */\n\nexports.find = (node, type) => node.nodes.find(node => node.type === type);\n\n/**\n * Find a node of the given type\n */\n\nexports.exceedsLimit = (min, max, step = 1, limit) => {\n  if (limit === false) return false;\n  if (!exports.isInteger(min) || !exports.isInteger(max)) return false;\n  return ((Number(max) - Number(min)) / Number(step)) >= limit;\n};\n\n/**\n * Escape the given node with '\\\\' before node.value\n */\n\nexports.escapeNode = (block, n = 0, type) => {\n  let node = block.nodes[n];\n  if (!node) return;\n\n  if ((type && node.type === type) || node.type === 'open' || node.type === 'close') {\n    if (node.escaped !== true) {\n      node.value = '\\\\' + node.value;\n      node.escaped = true;\n    }\n  }\n};\n\n/**\n * Returns true if the given brace node should be enclosed in literal braces\n */\n\nexports.encloseBrace = node => {\n  if (node.type !== 'brace') return false;\n  if ((node.commas >> 0 + node.ranges >> 0) === 0) {\n    node.invalid = true;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Returns true if a brace node is invalid.\n */\n\nexports.isInvalidBrace = block => {\n  if (block.type !== 'brace') return false;\n  if (block.invalid === true || block.dollar) return true;\n  if ((block.commas >> 0 + block.ranges >> 0) === 0) {\n    block.invalid = true;\n    return true;\n  }\n  if (block.open !== true || block.close !== true) {\n    block.invalid = true;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Returns true if a node is an open or close node\n */\n\nexports.isOpenOrClose = node => {\n  if (node.type === 'open' || node.type === 'close') {\n    return true;\n  }\n  return node.open === true || node.close === true;\n};\n\n/**\n * Reduce an array of text nodes.\n */\n\nexports.reduce = nodes => nodes.reduce((acc, node) => {\n  if (node.type === 'text') acc.push(node.value);\n  if (node.type === 'range') node.type = 'text';\n  return acc;\n}, []);\n\n/**\n * Flatten an array\n */\n\nexports.flatten = (...args) => {\n  const result = [];\n  const flat = arr => {\n    for (let i = 0; i < arr.length; i++) {\n      let ele = arr[i];\n      Array.isArray(ele) ? flat(ele, result) : ele !== void 0 && result.push(ele);\n    }\n    return result;\n  };\n  flat(args);\n  return result;\n};\n","\"use strict\";\r\n\r\nmodule.exports = {\r\n\tcaseKludge,\r\n\tcollectStrings,\r\n\tescapeRegExp,\r\n\tfindBasePath,\r\n\tforceNonCapturing,\r\n\tfuzzyRegExp,\r\n\tisRegExp,\r\n\tisString,\r\n\trgbToHSL,\r\n\twait,\r\n};\r\n\r\n\r\n/**\r\n * Synthesise case-insensitivity for a regexp string.\r\n *\r\n * JavaScript doesn't support scoped modifiers like (?i),\r\n * so this function attempts to approximate the closest thing.\r\n *\r\n * @param {String} input - Case-insensitive text\r\n * @param {Boolean} fuzz - Apply {@link fuzzyRegExp} to input\r\n * @return {String}\r\n */\r\nfunction caseKludge(input, fuzz = false){\r\n\tlet output = input.split(\"\").map((s, index, array) => {\r\n\t\tif(/[A-Z]/.test(s)){\r\n\t\t\tconst output = \"[\" + s + s.toLowerCase() + \"]\";\r\n\t\t\tconst prev   = array[index - 1];\r\n\t\t\tif(fuzz && prev && /[a-z]/.test(prev))\r\n\t\t\t\treturn \"[\\\\W_\\\\S]*\" + output;\r\n\t\t\treturn output;\r\n\t\t}\r\n\t\tif(/[a-z]/.test(s))     return \"[\" + s.toUpperCase() + s + \"]\";\r\n\t\tif(!fuzz)               return s.replace(/([/\\\\^$*+?{}[\\]().|])/g, \"\\\\$1\");\r\n\t\tif(\"0\" === s)           return \"[0Oo]\";\r\n\t\tif(/[\\W_ \\t]?/.test(s)) return \"[\\\\W_ \\\\t]?\";\r\n\t\treturn s;\r\n\t}).join(\"\");\r\n\t\r\n\tif(fuzz)\r\n\t\toutput = output.replace(/\\[Oo\\]/g, \"[0Oo]\");\r\n\treturn output.replace(/(\\[\\w{2,3}\\])(\\1+)/g, (match, first, rest) =>\r\n\t\tfirst + \"{\" + ((rest.length / first.length) + 1) + \"}\");\r\n}\r\n\r\n\r\n/**\r\n * \"Flatten\" a (possibly nested) list of strings into a single-level array.\r\n *\r\n * Strings are split by whitespace as separate elements of the final array.\r\n *\r\n * @param {Array|String} input\r\n * @return {String[]} An array of strings\r\n */\r\nfunction collectStrings(input, refs = null){\r\n\trefs = refs || new WeakSet();\r\n\tinput = \"string\" === typeof input\r\n\t\t? [input]\r\n\t\t: refs.add(input) && Array.from(input);\r\n\t\r\n\tconst output = [];\r\n\tfor(const value of input){\r\n\t\tif(!value) continue;\r\n\t\tswitch(typeof value){\r\n\t\t\tcase \"string\":\r\n\t\t\t\toutput.push(...value.split(/\\s+/));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"object\":\r\n\t\t\t\tif(refs.has(value)) continue;\r\n\t\t\t\trefs.add(value);\r\n\t\t\t\toutput.push(...collectStrings(value, refs));\r\n\t\t}\r\n\t}\r\n\treturn output;\r\n}\r\n\r\n\r\n/**\r\n * Escape special regex characters within a string.\r\n *\r\n * @example \"file.js\" -> \"file\\\\.js\"\r\n * @param {String} input\r\n * @return {String}\r\n */\r\nfunction escapeRegExp(input){\r\n\treturn input.replace(/([/\\\\^$*+?{}[\\]().|])/g, \"\\\\$1\");\r\n}\r\n\r\n\r\n/**\r\n * Locate the root directory shared by multiple paths.\r\n *\r\n * @param {String[]} paths - A list of filesystem paths\r\n * @return {String} root\r\n */\r\nfunction findBasePath(paths){\r\n\tconst POSIX = -1 !== paths[0].indexOf(\"/\");\r\n\tlet matched = [];\r\n\t\r\n\t// Spare ourselves the trouble if there's only one path.\r\n\tif(1 === paths.length){\r\n\t\tmatched = (paths[0].replace(/[\\\\/]+$/, \"\")).split(/[\\\\/]/g);\r\n\t\tmatched.pop();\r\n\t}\r\n\telse{\r\n\t\tconst rows   = paths.map(d => d.split(/[\\\\/]/g));\r\n\t\tconst width  = Math.max(...rows.map(d => d.length));\r\n\t\tconst height = rows.length;\r\n\t\tlet x;\r\n\t\tX: for(x = 0; x < width; ++x){\r\n\t\t\tconst str = rows[0][x];\r\n\t\t\tfor(let y = 1; y < height; ++y)\r\n\t\t\t\tif(str !== rows[y][x]) break X;\r\n\t\t\tmatched.push(str);\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn matched.join(POSIX ? \"/\" : \"\\\\\");\r\n}\r\n\r\n/**\r\n * Turn capturing groups in an expression into non-capturing groups.\r\n *\r\n * @example forceNonCapturing(/([A-Z]+)/) == /(?:[A-Z]+)/\r\n * @param {RegExp} pattern\r\n * @return {RegExp}\r\n */\r\nfunction forceNonCapturing(pattern){\r\n\tconst source = pattern.source\r\n\t\t.split(/\\((?!\\?[=<!])/)\r\n\t\t.map((segment, index, array) => {\r\n\t\t\tif(!index) return segment;\r\n\t\t\treturn !/^(?:[^\\\\]|\\\\.)*\\\\$/.test(array[index - 1])\r\n\t\t\t\t? segment.replace(/^(?:\\?:)?/, \"(?:\")\r\n\t\t\t\t: segment.replace(/^/, \"(\");\r\n\t\t})\r\n\t\t.join(\"\");\r\n\treturn new RegExp(source, pattern.flags);\r\n}\r\n\r\n\r\n/**\r\n * Generate a regex to match a string, bypassing intermediate punctuation.\r\n *\r\n * E.g., \"CoffeeScript\" matches \"coffee-script\", \"cOfFeE sCRiPT\" or even\r\n * \"C0FFEE.SCRIPT\". Useful when words have multiple possible spellings.\r\n *\r\n * @param {String} input - A string, such as \"reStructuredText\" or \"dBASE\"\r\n * @param {Function} format - Desired output format (String or RegExp)\r\n * @return {String|RegExp}\r\n */\r\nfunction fuzzyRegExp(input, format = RegExp){\r\n\tif(\"[object String]\" !== Object.prototype.toString.call(input))\r\n\t\treturn input;\r\n\t\r\n\tconst output = input\r\n\t\t.replace(/([A-Z])([A-Z]+)/g, (a, b, c) => b + c.toLowerCase())\r\n\t\t.split(/\\B(?=[A-Z])|[-\\s]/g)\r\n\t\t.map(i => i.replace(/([/\\\\^$*+?{}[\\]().|])/g, \"\\\\$1?\"))\r\n\t\t.join(\"[\\\\W_ \\\\t]?\")\r\n\t\t.replace(/[0Oo]/g, \"[0o]\");\r\n\t\r\n\t// Author's requested the regex source, return a string\r\n\tif(String === format)\r\n\t\treturn output;\r\n\t\r\n\t// Otherwise, crank the fuzz\r\n\treturn new RegExp(output, \"i\");\r\n}\r\n\r\n\r\n/**\r\n * Return true if the given value is a {@link RegExp|regular expression}.\r\n *\r\n * @param {*} input\r\n * @return {Boolean}\r\n */\r\nfunction isRegExp(input){\r\n\treturn \"[object RegExp]\" === Object.prototype.toString.call(input);\r\n}\r\n\r\n\r\n/**\r\n * Return true if the given value is a {@link String}.\r\n *\r\n * @param {*} input\r\n * @return {Boolean}\r\n */\r\nfunction isString(input){\r\n\treturn \"[object String]\" === Object.prototype.toString.call(input);\r\n}\r\n\r\n\r\n/**\r\n * Convert an RGB colour to HSL.\r\n *\r\n * @param {Number[]} channels - An array holding each RGB component\r\n * @return {Number[]}\r\n */\r\nfunction rgbToHSL(channels){\r\n\tif(!channels) return;\r\n\t\r\n\tconst r     = channels[0] / 255;\r\n\tconst g     = channels[1] / 255;\r\n\tconst b     = channels[2] / 255;\r\n\tconst min   = Math.min(r, g, b);\r\n\tconst max   = Math.max(r, g, b);\r\n\tconst lum   = (max + min) / 2;\r\n\tconst delta = max - min;\r\n\tconst sat   = lum < .5\r\n\t\t? (delta / (max + min))\r\n\t\t: (delta / (2 - max - min));\r\n\t\r\n\tlet hue;\r\n\tswitch(max){\r\n\t\tcase r:  hue =     (g - b) / delta; break;\r\n\t\tcase g:  hue = 2 + (b - r) / delta; break;\r\n\t\tdefault: hue = 4 + (r - g) / delta; break;\r\n\t}\r\n\t\r\n\thue /= 6;\r\n\t\r\n\tif(hue < 0)\r\n\t\thue += 1;\r\n\t\r\n\treturn [ hue || 0, sat || 0, lum || 0 ];\r\n}\r\n\r\n\r\n/**\r\n * Return a {@link Promise} which auto-resolves after a delay.\r\n *\r\n * @param {Number} [delay=100] - Delay in milliseconds\r\n * @return {Promise}\r\n */\r\nfunction wait(delay = 100){\r\n\treturn new Promise(resolve => {\r\n\t\tsetTimeout(() => resolve(), delay);\r\n\t});\r\n}\r\n","\"use strict\";\r\n\r\nconst {CompositeDisposable} = require(\"atom\");\r\nconst {EntityType, FileSystem} = require(\"atom-fs\");\r\nconst StrategyManager = require(\"./strategy-manager.js\");\r\nconst IconDelegate    = require(\"./icon-delegate.js\");\r\nconst IconNode        = require(\"./icon-node.js\");\r\nconst Storage         = require(\"../storage.js\");\r\n\r\n\r\nclass IconService{\r\n\t\r\n\tinit(){\r\n\t\tthis.disposables = new CompositeDisposable();\r\n\t\tthis.disposables.add(\r\n\t\t\tFileSystem.observe(this.handleResource.bind(this)),\r\n\t\t\t\r\n\t\t\t// #693: Notify `FileSystem` when files are deleted\r\n\t\t\tatom.project.onDidChangeFiles(events => {\r\n\t\t\t\tfor(const {action, path} of events){\r\n\t\t\t\t\tif(\"deleted\" === action && FileSystem.paths.has(path)){\r\n\t\t\t\t\t\tconst resource = FileSystem.get(path);\r\n\t\t\t\t\t\tif(resource)\r\n\t\t\t\t\t\t\tresource.destroy();\r\n\t\t\t\t\t\tStorage.deletePath(path);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t);\r\n\t\tStrategyManager.init();\r\n\t\tthis.isReady = true;\r\n\t}\r\n\t\r\n\t\r\n\treset(){\r\n\t\tthis.disposables.dispose();\r\n\t\tthis.disposables.clear();\r\n\t\tthis.disposables = null;\r\n\t\t\r\n\t\tStrategyManager.reset();\r\n\t\tthis.isReady = false;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Handle a newly-registered filesystem resource.\r\n\t *\r\n\t * @param {Resource} resource\r\n\t * @private\r\n\t */\r\n\thandleResource(resource){\r\n\t\tif(resource.icon) return;\r\n\t\t\r\n\t\tconst icon = new IconDelegate(resource);\r\n\t\tresource.icon = icon;\r\n\t\tthis.disposables.add(\r\n\t\t\tresource.onDidDestroy(() => {\r\n\t\t\t\ticon.destroy();\r\n\t\t\t\tresource.icon = null;\r\n\t\t\t})\r\n\t\t);\r\n\t\t\r\n\t\t// TODO: Add `.inode` property to Resource class\r\n\t\tif(resource.stats && resource.stats.ino){\r\n\t\t\tconst inode = resource.stats.ino;\r\n\t\t\tStorage.setPathInode(resource.path, inode);\r\n\t\t}\r\n\t\t\r\n\t\tif(resource.type & EntityType.SYMLINK)\r\n\t\t\tthis.disposables.add(\r\n\t\t\t\tresource.onDidChangeRealPath(({to}) => {\r\n\t\t\t\t\tconst target = FileSystem.get(to);\r\n\t\t\t\t\ticon.master = target.icon;\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\t\r\n\t\r\n\taddIconToElement(element, path, options = {}){\r\n\t\tconst {\r\n\t\t\tisDirectory,\r\n\t\t\tisSymlink,\r\n\t\t\tisTabIcon,\r\n\t\t} = options;\r\n\t\t\r\n\t\tlet type = isDirectory\r\n\t\t\t? EntityType.DIRECTORY\r\n\t\t\t: EntityType.FILE;\r\n\t\t\r\n\t\tif(isSymlink)\r\n\t\t\ttype |= EntityType.SYMLINK;\r\n\t\t\r\n\t\tconst disposable = IconNode.forElement(element, path, type, isTabIcon);\r\n\t\tif(null !== module.exports.disposables)\r\n\t\t\tmodule.exports.disposables.add(disposable);\r\n\t\treturn disposable;\r\n\t}\r\n\t\r\n\t\r\n\tsuppressFOUC(){\r\n\t\treturn {\r\n\t\t\ticonClassForPath(path){\r\n\t\t\t\tconst file = FileSystem.get(path);\r\n\t\t\t\treturn file && file.icon\r\n\t\t\t\t\t? file.icon.getClasses() || null\r\n\t\t\t\t\t: null;\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n}\r\n\r\nIconService.prototype.isReady = false;\r\n\r\nmodule.exports = new IconService();\r\n","\"use strict\";\r\n\r\nconst {CompositeDisposable} = require(\"atom\");\r\nconst Options = require(\"../options.js\");\r\n\r\n\r\nclass StrategyManager{\r\n\t\r\n\tinit(){\r\n\t\tthis.fileStrategies = [];\r\n\t\tthis.directoryStrategies = [];\r\n\t\tthis.disposables = new CompositeDisposable();\r\n\t\t\r\n\t\tconst strategies = [\r\n\t\t\trequire(\"./strategies/signature-strategy.js\"),\r\n\t\t\trequire(\"./strategies/hashbang-strategy.js\"),\r\n\t\t\trequire(\"./strategies/modeline-strategy.js\"),\r\n\t\t\trequire(\"./strategies/linguist-strategy.js\"),\r\n\t\t\trequire(\"./strategies/usertype-strategy.js\"),\r\n\t\t\trequire(\"./strategies/grammar-strategy.js\"),\r\n\t\t\trequire(\"./strategies/path-strategy.js\"),\r\n\t\t];\r\n\r\n\t\tfor(let i = 0, l = strategies.length; i < l; ++i)\r\n\t\t\tthis.addStrategy(strategies[i]);\r\n\r\n\t\tthis.fileStrategies = this.fileStrategies.filter(a => a).reverse();\r\n\t\tthis.directoryStrategies = this.directoryStrategies.filter(a => a).reverse();\r\n\t}\r\n\t\r\n\t\r\n\treset(){\r\n\t\tconst strategies = new Set([\r\n\t\t\t...this.fileStrategies,\r\n\t\t\t...this.directoryStrategies,\r\n\t\t]);\r\n\t\t\r\n\t\tstrategies.forEach(strategy => strategy.disable());\r\n\t\tthis.disposables.dispose();\r\n\t\tthis.disposables = null;\r\n\t}\r\n\t\r\n\t\r\n\taddStrategy(strategy){\r\n\t\tconst {priority} = strategy;\r\n\t\tif(strategy.matchesFiles) this.fileStrategies[priority] = strategy;\r\n\t\tif(strategy.matchesDirs)  this.directoryStrategies[priority] = strategy;\r\n\t\t\r\n\t\tif(!strategy.noSetting)\r\n\t\t\tthis.disposables.add(Options.observe(strategy.name, enabled => {\r\n\t\t\t\tenabled ? strategy.enable() : strategy.disable();\r\n\t\t\t}));\r\n\t\t\r\n\t\telse if(\"signature\" === strategy.name){\r\n\t\t\tthis.disposables.add(\r\n\t\t\t\tOptions.observe(\"hashbangs\", enabled => {\r\n\t\t\t\t\tenabled || Options.get(\"modelines\")\r\n\t\t\t\t\t\t? strategy.enable()\r\n\t\t\t\t\t\t: strategy.disable();\r\n\t\t\t\t}),\r\n\t\t\t\tOptions.observe(\"modelines\", enabled => {\r\n\t\t\t\t\tenabled || Options.get(\"hashbangs\")\r\n\t\t\t\t\t\t? strategy.enable()\r\n\t\t\t\t\t\t: strategy.disable();\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\t// Strategies without settings are always active\r\n\t\telse strategy.enable();\r\n\t}\r\n\t\r\n\t\r\n\tquery(resource){\r\n\t\tif(null == resource)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tconst strategies = resource.isDirectory\r\n\t\t\t? this.directoryStrategies\r\n\t\t\t: this.fileStrategies;\r\n\t\t\r\n\t\tif(!strategies) return;\r\n\r\n\t\tfor(let i = 0, l = strategies.length; i < l; ++i){\r\n\t\t\tconst strategy = strategies[i];\r\n\t\t\tif(!strategy.enabled) continue;\r\n\t\t\tconst shouldStop = strategy.check(resource);\r\n\t\t\tif(shouldStop)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nmodule.exports = new StrategyManager();\r\n","module.exports = require(\"util\");","/*!\n * fill-range <https://github.com/jonschlinkert/fill-range>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nconst util = require('util');\nconst toRegexRange = require('to-regex-range');\n\nconst isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\n\nconst transform = toNumber => {\n  return value => toNumber === true ? Number(value) : String(value);\n};\n\nconst isValidValue = value => {\n  return typeof value === 'number' || (typeof value === 'string' && value !== '');\n};\n\nconst isNumber = num => Number.isInteger(+num);\n\nconst zeros = input => {\n  let value = `${input}`;\n  let index = -1;\n  if (value[0] === '-') value = value.slice(1);\n  if (value === '0') return false;\n  while (value[++index] === '0');\n  return index > 0;\n};\n\nconst stringify = (start, end, options) => {\n  if (typeof start === 'string' || typeof end === 'string') {\n    return true;\n  }\n  return options.stringify === true;\n};\n\nconst pad = (input, maxLength, toNumber) => {\n  if (maxLength > 0) {\n    let dash = input[0] === '-' ? '-' : '';\n    if (dash) input = input.slice(1);\n    input = (dash + input.padStart(dash ? maxLength - 1 : maxLength, '0'));\n  }\n  if (toNumber === false) {\n    return String(input);\n  }\n  return input;\n};\n\nconst toMaxLen = (input, maxLength) => {\n  let negative = input[0] === '-' ? '-' : '';\n  if (negative) {\n    input = input.slice(1);\n    maxLength--;\n  }\n  while (input.length < maxLength) input = '0' + input;\n  return negative ? ('-' + input) : input;\n};\n\nconst toSequence = (parts, options) => {\n  parts.negatives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\n  parts.positives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\n\n  let prefix = options.capture ? '' : '?:';\n  let positives = '';\n  let negatives = '';\n  let result;\n\n  if (parts.positives.length) {\n    positives = parts.positives.join('|');\n  }\n\n  if (parts.negatives.length) {\n    negatives = `-(${prefix}${parts.negatives.join('|')})`;\n  }\n\n  if (positives && negatives) {\n    result = `${positives}|${negatives}`;\n  } else {\n    result = positives || negatives;\n  }\n\n  if (options.wrap) {\n    return `(${prefix}${result})`;\n  }\n\n  return result;\n};\n\nconst toRange = (a, b, isNumbers, options) => {\n  if (isNumbers) {\n    return toRegexRange(a, b, { wrap: false, ...options });\n  }\n\n  let start = String.fromCharCode(a);\n  if (a === b) return start;\n\n  let stop = String.fromCharCode(b);\n  return `[${start}-${stop}]`;\n};\n\nconst toRegex = (start, end, options) => {\n  if (Array.isArray(start)) {\n    let wrap = options.wrap === true;\n    let prefix = options.capture ? '' : '?:';\n    return wrap ? `(${prefix}${start.join('|')})` : start.join('|');\n  }\n  return toRegexRange(start, end, options);\n};\n\nconst rangeError = (...args) => {\n  return new RangeError('Invalid range arguments: ' + util.inspect(...args));\n};\n\nconst invalidRange = (start, end, options) => {\n  if (options.strictRanges === true) throw rangeError([start, end]);\n  return [];\n};\n\nconst invalidStep = (step, options) => {\n  if (options.strictRanges === true) {\n    throw new TypeError(`Expected step \"${step}\" to be a number`);\n  }\n  return [];\n};\n\nconst fillNumbers = (start, end, step = 1, options = {}) => {\n  let a = Number(start);\n  let b = Number(end);\n\n  if (!Number.isInteger(a) || !Number.isInteger(b)) {\n    if (options.strictRanges === true) throw rangeError([start, end]);\n    return [];\n  }\n\n  // fix negative zero\n  if (a === 0) a = 0;\n  if (b === 0) b = 0;\n\n  let descending = a > b;\n  let startString = String(start);\n  let endString = String(end);\n  let stepString = String(step);\n  step = Math.max(Math.abs(step), 1);\n\n  let padded = zeros(startString) || zeros(endString) || zeros(stepString);\n  let maxLen = padded ? Math.max(startString.length, endString.length, stepString.length) : 0;\n  let toNumber = padded === false && stringify(start, end, options) === false;\n  let format = options.transform || transform(toNumber);\n\n  if (options.toRegex && step === 1) {\n    return toRange(toMaxLen(start, maxLen), toMaxLen(end, maxLen), true, options);\n  }\n\n  let parts = { negatives: [], positives: [] };\n  let push = num => parts[num < 0 ? 'negatives' : 'positives'].push(Math.abs(num));\n  let range = [];\n  let index = 0;\n\n  while (descending ? a >= b : a <= b) {\n    if (options.toRegex === true && step > 1) {\n      push(a);\n    } else {\n      range.push(pad(format(a, index), maxLen, toNumber));\n    }\n    a = descending ? a - step : a + step;\n    index++;\n  }\n\n  if (options.toRegex === true) {\n    return step > 1\n      ? toSequence(parts, options)\n      : toRegex(range, null, { wrap: false, ...options });\n  }\n\n  return range;\n};\n\nconst fillLetters = (start, end, step = 1, options = {}) => {\n  if ((!isNumber(start) && start.length > 1) || (!isNumber(end) && end.length > 1)) {\n    return invalidRange(start, end, options);\n  }\n\n\n  let format = options.transform || (val => String.fromCharCode(val));\n  let a = `${start}`.charCodeAt(0);\n  let b = `${end}`.charCodeAt(0);\n\n  let descending = a > b;\n  let min = Math.min(a, b);\n  let max = Math.max(a, b);\n\n  if (options.toRegex && step === 1) {\n    return toRange(min, max, false, options);\n  }\n\n  let range = [];\n  let index = 0;\n\n  while (descending ? a >= b : a <= b) {\n    range.push(format(a, index));\n    a = descending ? a - step : a + step;\n    index++;\n  }\n\n  if (options.toRegex === true) {\n    return toRegex(range, null, { wrap: false, options });\n  }\n\n  return range;\n};\n\nconst fill = (start, end, step, options = {}) => {\n  if (end == null && isValidValue(start)) {\n    return [start];\n  }\n\n  if (!isValidValue(start) || !isValidValue(end)) {\n    return invalidRange(start, end, options);\n  }\n\n  if (typeof step === 'function') {\n    return fill(start, end, 1, { transform: step });\n  }\n\n  if (isObject(step)) {\n    return fill(start, end, 0, step);\n  }\n\n  let opts = { ...options };\n  if (opts.capture === true) opts.wrap = true;\n  step = step || opts.step || 1;\n\n  if (!isNumber(step)) {\n    if (step != null && !isObject(step)) return invalidStep(step, opts);\n    return fill(start, end, 1, step);\n  }\n\n  if (isNumber(start) && isNumber(end)) {\n    return fillNumbers(start, end, step, opts);\n  }\n\n  return fillLetters(start, end, Math.max(Math.abs(step), 1), opts);\n};\n\nmodule.exports = fill;\n","\"use strict\";\r\n\r\nconst FileIcons = {\r\n\tget storage (){ return require(\"./storage.js\"); },\r\n\tget options (){ return require(\"./options.js\"); },\r\n\tget ui      (){ return require(\"./ui.js\");      },\r\n\tget service (){ return require(\"./service/icon-service.js\"); },\r\n\r\n\tactivate(state){\r\n\t\tglobal._FileIcons = this;\r\n\t\tthis.storage.init(state);\r\n\t\tthis.options.init();\r\n\t\tthis.ui.init();\r\n\t\tthis.ui.observe();\r\n\t\tthis.service.init();\r\n\t},\r\n\r\n\tdeactivate(){\r\n\t\tthis.storage.lock();\r\n\t\tthis.service.reset();\r\n\t\tthis.ui.reset();\r\n\t\tthis.options.reset();\r\n\t\tdelete global._FileIcons;\r\n\t},\r\n\r\n\tserialize(){\r\n\t\treturn this.storage.serialise();\r\n\t},\r\n\r\n\tprovideService(){\r\n\t\treturn this.service.addIconToElement;\r\n\t},\r\n\r\n\tsuppressFOUC(){\r\n\t\treturn this.service.suppressFOUC();\r\n\t},\r\n};\r\n\r\nmodule.exports = FileIcons;\r\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount /*, ...nodes */) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 2; i < arguments.length; i++) {\n    walker = insert(this, walker, arguments[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","\"use strict\";\r\n\r\nconst HeaderStrategy = require(\"./header-strategy.js\");\r\nconst IconTables = require(\"../../icons/icon-tables.js\");\r\nconst Options = require(\"../../options.js\");\r\n\r\n\r\nclass SignatureStrategy extends HeaderStrategy {\r\n\t\r\n\tconstructor(){\r\n\t\tsuper({\r\n\t\t\tname:         \"signature\",\r\n\t\t\tpriority:     0,\r\n\t\t\tminScanSize:  1,\r\n\t\t\tignoreBinary: false,\r\n\t\t\tnoSetting:    true,\r\n\t\t});\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Avoid scanning if header-recognition is disabled.\r\n\t *\r\n\t * @param {Resource} file\r\n\t * @return {Boolean}\r\n\t */\r\n\tneedToScan(file){\r\n\t\treturn (Options.hashbangs || Options.modelines)\r\n\t\t\t? super.needToScan(file)\r\n\t\t\t: false;\r\n\t}\r\n\t\r\n\t\r\n\tmatchIcon(resource){\r\n\t\tconst {data} = resource;\r\n\t\treturn data\r\n\t\t\t? IconTables.matchSignature(data)\r\n\t\t\t: null;\r\n\t}\r\n}\r\n\r\n\r\nmodule.exports = new SignatureStrategy();\r\n","\"use strict\";\r\n\r\n/**\r\n * Immutable hash of icon data.\r\n *\r\n * These objects are accessed through {@link IconDelegate} instances, and\r\n * generated at startup from precomposed data by the {@link IconCompiler}.\r\n *\r\n * @class\r\n */\r\nclass Icon{\r\n\t\r\n\t/**\r\n\t * Create a new icon object.\r\n\t *\r\n\t * @param {Number}  index - Index of the icon's appearance in the enclosing array\r\n\t * @param {String}  icon - Icon's CSS class (e.g., \"js-icon\")\r\n\t * @param {Array}   colour - Icon's colour classes\r\n\t * @param {RegExp}  match - Pattern for matching names or pathnames\r\n\t * @param {Number}  [priority=1] - Numeric priority that determined icon's order of appearance\r\n\t * @param {Boolean} [matchPath=false] - Match against system path instead of basename\r\n\t * @param {RegExp}  [interpreter=null] - RegExp to match executable names in hashbangs\r\n\t * @param {RegExp}  [scope=null] - RegExp to match grammar scope-names\r\n\t * @param {RegExp}  [lang=null] - RegExp to match alias patterns\r\n\t * @param {RegExp}  [sig=null] - RegExp to match file signatures\r\n\t * @see {@link IconTables#read}\r\n\t * @constructor\r\n\t */\r\n\tconstructor(index, icon, colour, match, priority = 1, matchPath = null, interpreter = null, scope = null, lang = null, sig = null){\r\n\t\tthis.index       = index;\r\n\t\tthis.icon        = icon;\r\n\t\tthis.colour      = colour;\r\n\t\tthis.match       = match;\r\n\t\tthis.priority    = priority;\r\n\t\t\r\n\t\tthis.matchPath   = matchPath   || false;\r\n\t\tthis.interpreter = interpreter || null;\r\n\t\tthis.scope       = scope       || null;\r\n\t\tthis.lang        = lang        || null;\r\n\t\tthis.signature   = sig         || null;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Return the CSS classes for displaying the icon.\r\n\t *\r\n\t * @param {Number|null} colourMode\r\n\t * @param {Boolean} asArray\r\n\t * @return {String}\r\n\t */\r\n\tgetClass(colourMode = null, asArray = false){\r\n\t\t\r\n\t\t// No colour needed or available\r\n\t\tif(null === colourMode || null === this.colour[0])\r\n\t\t\treturn asArray ? [this.icon] : this.icon;\r\n\t\t\r\n\t\treturn asArray\r\n\t\t\t? [this.icon, this.colour[colourMode]]\r\n\t\t\t: (this.icon + \" \" + this.colour[colourMode]);\r\n\t}\r\n}\r\n\r\n\r\nmodule.exports = Icon;\r\n","module.exports = require(\"./.icondb.js\");","\"use strict\";\r\n\r\nconst IconTables = require(\"../../icons/icon-tables.js\");\r\nconst HeaderStrategy = require(\"./header-strategy.js\");\r\nconst {executableIcon} = IconTables;\r\n\r\n\r\nclass HashbangStrategy extends HeaderStrategy {\r\n\t\r\n\tconstructor(){\r\n\t\tsuper({\r\n\t\t\tname: \"hashbangs\",\r\n\t\t\tpriority: 5,\r\n\t\t});\r\n\t}\r\n\t\r\n\t\r\n\tmatchIcon(resource){\r\n\t\tconst pattern = /^#!(?:(?:\\s*\\S*\\/|\\s*(?=perl6?))(\\S+))(?:(?:\\s+\\S+=\\S*)*\\s+(\\S+))?/;\r\n\t\tconst tokens = null !== resource.data\r\n\t\t\t? this.getFirstLine(resource.data).match(pattern)\r\n\t\t\t: null;\r\n\t\t\r\n\t\tif(!tokens)\r\n\t\t\treturn null;\r\n\t\t\r\n\t\tconst name = \"env\" === tokens[1]\r\n\t\t\t? (tokens[2] || \"\").split(\"/\").pop()\r\n\t\t\t:  tokens[1];\r\n\t\t\r\n\t\t// TypeScript source which compiles an executable Node file (#606)\r\n\t\tif(\"node\" === name && /\\.tsx?$/i.test(resource.name))\r\n\t\t\treturn null;\r\n\t\t\r\n\t\tlet result = IconTables.matchInterpreter(name);\r\n\t\t\r\n\t\t// Valid hashbang, unrecognised interpreter\r\n\t\tif(!result){\r\n\t\t\tconst {executable} = resource;\r\n\t\t\t\r\n\t\t\t// Stats currently unavailable\r\n\t\t\tif(null === executable){\r\n\t\t\t\tconst onStats = resource.onDidLoadStats(() => {\r\n\t\t\t\t\tonStats.dispose();\r\n\t\t\t\t\tif(resource.executable)\r\n\t\t\t\t\t\tresource.icon.add(executableIcon, this.priority);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\telse if(executable)\r\n\t\t\t\tresult = executableIcon;\r\n\t\t}\r\n\t\t\r\n\t\treturn result || null;\r\n\t}\r\n}\r\n\r\n\r\nmodule.exports = new HashbangStrategy();\r\n","\"use strict\";\r\n\r\nconst HeaderStrategy = require(\"./header-strategy.js\");\r\nconst IconTables = require(\"../../icons/icon-tables.js\");\r\n\r\n\r\nclass ModelineStrategy extends HeaderStrategy {\r\n\t\r\n\tconstructor(){\r\n\t\tsuper({\r\n\t\t\tname: \"modelines\",\r\n\t\t\tpriority: 6,\r\n\t\t});\r\n\t}\r\n\t\r\n\t\r\n\tmatchIcon(resource){\r\n\t\tconst data = this.getFirstLine(resource.data, 2) || null;\r\n\t\t\r\n\t\tif(null === data)\r\n\t\t\treturn null;\r\n\t\t\r\n\t\t// Emacs\r\n\t\tlet tokens = data.match(/-\\*-(?:(?:(?!mode\\s*:)[^:;]+:[^:;]+;)*\\s*mode\\s*:)?\\s*([\\w+-]+)\\s*(?:;[^:;]+:[^:;]+?)*;?\\s*-\\*-/i);\r\n\t\tif(tokens && \"fundamental\" !== tokens[1])\r\n\t\t\treturn IconTables.matchLanguage(tokens[1]) || null;\r\n\t\t\r\n\t\t// Vim\r\n\t\ttokens = data.match(/(?:(?:\\s|^)vi(?:m[<=>]?\\d+|m)?|[\\t ]ex)(?=:(?=\\s*set?\\s[^\\n:]+:)|:(?!\\s*set?\\s))(?:(?:\\s|\\s*:\\s*)\\w*(?:\\s*=(?:[^\\n\\\\\\s]|\\\\.)*)?)*[\\s:](?:filetype|ft|syntax)\\s*=(\\w+)(?=\\s|:|$)/i);\r\n\t\tif(tokens)\r\n\t\t\treturn IconTables.matchLanguage(tokens[1]) || null;\r\n\t\t\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n\r\nmodule.exports = new ModelineStrategy();\r\n","\"use strict\";\r\n\r\nconst path = require(\"path\");\r\nconst {Disposable} = require(\"atom\");\r\nconst IconTables = require(\"../../icons/icon-tables.js\");\r\nconst Strategy = require(\"../strategy.js\");\r\n\r\n\r\nclass LinguistStrategy extends Strategy {\r\n\t\r\n\tconstructor(){\r\n\t\tsuper({\r\n\t\t\tname:          \"linguist\",\r\n\t\t\tpriority:      4,\r\n\t\t\tmatchesFiles:  true,\r\n\t\t\tmatchesDirs:   false,\r\n\t\t\tignoreVirtual: false,\r\n\t\t});\r\n\t\t\r\n\t\tthis.hasRules      = false;\r\n\t\tthis.rules         = null;\r\n\t\tthis.sources       = null;\r\n\t\tthis.languageIcons = null;\r\n\t}\r\n\t\r\n\r\n\tenable(){\r\n\t\tif(!this.enabled){\r\n\t\t\tthis.hasRules      = false;\r\n\t\t\tthis.rules         = new Map();\r\n\t\t\tthis.sources       = new Map();\r\n\t\t\tthis.languageIcons = new Map();\r\n\t\t}\r\n\t\treturn super.enable();\r\n\t}\r\n\t\r\n\t\r\n\tdisable(){\r\n\t\tif(this.enabled){\r\n\t\t\tsuper.disable();\r\n\t\t\tthis.rules.clear();\r\n\t\t\tthis.sources.clear();\r\n\t\t\tthis.languageIcons.clear();\r\n\t\t\tthis.hasRules      = false;\r\n\t\t\tthis.rules         = null;\r\n\t\t\tthis.sources       = null;\r\n\t\t\tthis.languageIcons = null;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t\r\n\t\telse return false;\r\n\t}\r\n\t\r\n\t\r\n\tmatchIcon(resource){\r\n\t\tif(!this.hasRules)\r\n\t\t\treturn null;\r\n\t\t\r\n\t\tfor(const [pattern, icon] of this.rules)\r\n\t\t\tif(pattern.test(resource.path))\r\n\t\t\t\treturn icon;\r\n\t\t\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t\r\n\tregisterResource(file){\r\n\t\tconst isNew = super.registerResource(file);\r\n\t\t\r\n\t\tif(isNew && !file.unreadable && /^\\.gitattributes$/.test(file.name)){\r\n\t\t\tthis.sources.set(file, new Map());\r\n\t\t\t\r\n\t\t\tconst disposables = this.resourceEvents.get(file);\r\n\t\t\tdisposables.add(\r\n\t\t\t\tnew Disposable(() => file.unwatchSystem()),\r\n\t\t\t\tfile.onDidMove(() => this.updateSource(file)),\r\n\t\t\t\tfile.onDidChangeData(() => this.updateSource(file)),\r\n\t\t\t\tfile.onDidChangeOnDisk(() => {\r\n\t\t\t\t\ttry{ file.loadData(true); }\r\n\t\t\t\t\tcatch(e){ disposables.dispose(); }\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tfile.watchSystem();\r\n\t\t\t(file.isDataComplete || file.isOpenInEditor)\r\n\t\t\t\t? this.updateSource(file)\r\n\t\t\t\t: file.loadData(true);\r\n\t\t}\r\n\t\t\r\n\t\telse return isNew;\r\n\t}\r\n\t\r\n\t\r\n\tupdateSource(file){\r\n\t\tconst sourceRules = this.sources.get(file);\r\n\t\tconst parsedRules = new Map(this.parseSource(file.data, file.path));\r\n\t\tconst updatePaths = new Set();\r\n\t\t\r\n\t\t// Deleted rules\r\n\t\tfor(const [pattern] of sourceRules)\r\n\t\t\tif(!parsedRules.has(pattern)){\r\n\t\t\t\tupdatePaths.add(pattern);\r\n\t\t\t\tsourceRules.delete(pattern);\r\n\t\t\t\tthis.rules.delete(pattern);\r\n\t\t\t}\r\n\t\t\r\n\t\t// Added/changed rules\r\n\t\tfor(const [pattern, icon] of parsedRules)\r\n\t\t\tif(sourceRules.get(pattern) !== icon){\r\n\t\t\t\tthis.rules.set(pattern, icon);\r\n\t\t\t\tsourceRules.set(pattern, icon);\r\n\t\t\t\tupdatePaths.add(pattern);\r\n\t\t\t}\r\n\t\t\r\n\t\tthis.hasRules = !!this.rules.size;\r\n\r\n\t\tfor(const path of updatePaths)\r\n\t\t\tthis.updatePath(path);\r\n\t}\r\n\t\r\n\t\r\n\tupdatePath(path){\r\n\t\tfor(const [resource] of this.resources)\r\n\t\t\tif(path.test(resource.path)){\r\n\t\t\t\tthis.deleteIcon(resource);\r\n\t\t\t\tconst icon = this.rules.get(path) || null;\r\n\t\t\t\tif(null !== icon)\r\n\t\t\t\t\tthis.addIcon(resource, icon);\r\n\t\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tparseSource(fileData, filePath){\r\n\t\tif(!fileData)\r\n\t\t\treturn [];\r\n\t\t\r\n\t\treturn fileData\r\n\t\t\t.replace(/^[\\t ]*#.*$|^[ \\t]+|[ \\t]+$/gm, \"\")\r\n\t\t\t.split(/(?:\\r?\\n)+/g)\r\n\t\t\t.filter(s => /\\S+[ \\t]+linguist-language=\\w+/.test(s))\r\n\t\t\t.map(line => {\r\n\t\t\t\tlet [pattern, language] = line.split(/\\s+linguist-language=/);\r\n\t\t\t\t\r\n\t\t\t\t// Look for this language's icon if we've not already done so.\r\n\t\t\t\tif(!this.languageIcons.has(language))\r\n\t\t\t\t\tthis.languageIcons.set(language, IconTables.matchLanguage(language));\r\n\t\t\t\t\r\n\t\t\t\tconst languageIcon = this.languageIcons.get(language);\r\n\t\t\t\t\r\n\t\t\t\t// Only acknowledge languages with icons\r\n\t\t\t\tif(!languageIcon)\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t// Lazily require the micromatch dependency due to its weight.\r\n\t\t\t\tconst Micromatch = require(\"micromatch\");\r\n\t\t\t\t\r\n\t\t\t\tpattern = path.dirname(filePath) + \"/\" + (/^\\//.test(pattern) ? \"\" : \"**\") + \"/\" + pattern;\r\n\t\t\t\tpattern = path.resolve(pattern);\r\n\t\t\t\t\r\n\t\t\t\t// Normalise path separators on Windows\r\n\t\t\t\tif(\"win32\" === process.platform)\r\n\t\t\t\t\tpattern = pattern.replace(/\\\\/g, \"/\");\r\n\t\t\t\t\r\n\t\t\t\tpattern = Micromatch.makeRe(pattern, {\r\n\t\t\t\t\tunixify: false,\r\n\t\t\t\t\tnonegate: true,\r\n\t\t\t\t\tdot: true,\r\n\t\t\t\t});\r\n\t\t\t\treturn pattern\r\n\t\t\t\t\t? [pattern, languageIcon]\r\n\t\t\t\t\t: null;\r\n\t\t\t})\r\n\t\t\t.filter(a => a);\r\n\t}\r\n}\r\n\r\n\r\nmodule.exports = new LinguistStrategy();\r\n","'use strict';\n\nconst util = require('util');\nconst braces = require('braces');\nconst picomatch = require('picomatch');\nconst utils = require('picomatch/lib/utils');\nconst isEmptyString = val => typeof val === 'string' && (val === '' || val === './');\n\n/**\n * Returns an array of strings that match one or more glob patterns.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm(list, patterns[, options]);\n *\n * console.log(mm(['a.js', 'a.txt'], ['*.js']));\n * //=> [ 'a.js' ]\n * ```\n * @param {String|Array<string>} list List of strings to match.\n * @param {String|Array<string>} patterns One or more glob patterns to use for matching.\n * @param {Object} options See available [options](#options)\n * @return {Array} Returns an array of matches\n * @summary false\n * @api public\n */\n\nconst micromatch = (list, patterns, options) => {\n  patterns = [].concat(patterns);\n  list = [].concat(list);\n\n  let omit = new Set();\n  let keep = new Set();\n  let items = new Set();\n  let negatives = 0;\n\n  let onResult = state => {\n    items.add(state.output);\n    if (options && options.onResult) {\n      options.onResult(state);\n    }\n  };\n\n  for (let i = 0; i < patterns.length; i++) {\n    let isMatch = picomatch(String(patterns[i]), { ...options, onResult }, true);\n    let negated = isMatch.state.negated || isMatch.state.negatedExtglob;\n    if (negated) negatives++;\n\n    for (let item of list) {\n      let matched = isMatch(item, true);\n\n      let match = negated ? !matched.isMatch : matched.isMatch;\n      if (!match) continue;\n\n      if (negated) {\n        omit.add(matched.output);\n      } else {\n        omit.delete(matched.output);\n        keep.add(matched.output);\n      }\n    }\n  }\n\n  let result = negatives === patterns.length ? [...items] : [...keep];\n  let matches = result.filter(item => !omit.has(item));\n\n  if (options && matches.length === 0) {\n    if (options.failglob === true) {\n      throw new Error(`No matches found for \"${patterns.join(', ')}\"`);\n    }\n\n    if (options.nonull === true || options.nullglob === true) {\n      return options.unescape ? patterns.map(p => p.replace(/\\\\/g, '')) : patterns;\n    }\n  }\n\n  return matches;\n};\n\n/**\n * Backwards compatibility\n */\n\nmicromatch.match = micromatch;\n\n/**\n * Returns a matcher function from the given glob `pattern` and `options`.\n * The returned function takes a string to match as its only argument and returns\n * true if the string is a match.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.matcher(pattern[, options]);\n *\n * const isMatch = mm.matcher('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @param {String} `pattern` Glob pattern\n * @param {Object} `options`\n * @return {Function} Returns a matcher function.\n * @api public\n */\n\nmicromatch.matcher = (pattern, options) => picomatch(pattern, options);\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.isMatch(string, patterns[, options]);\n *\n * console.log(mm.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(mm.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\nmicromatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Backwards compatibility\n */\n\nmicromatch.any = micromatch.isMatch;\n\n/**\n * Returns a list of strings that _**do not match any**_ of the given `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.not(list, patterns[, options]);\n *\n * console.log(mm.not(['a.a', 'b.b', 'c.c'], '*.a'));\n * //=> ['b.b', 'c.c']\n * ```\n * @param {Array} `list` Array of strings to match.\n * @param {String|Array} `patterns` One or more glob pattern to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Array} Returns an array of strings that **do not match** the given patterns.\n * @api public\n */\n\nmicromatch.not = (list, patterns, options = {}) => {\n  patterns = [].concat(patterns).map(String);\n  let result = new Set();\n  let items = [];\n\n  let onResult = state => {\n    if (options.onResult) options.onResult(state);\n    items.push(state.output);\n  };\n\n  let matches = micromatch(list, patterns, { ...options, onResult });\n\n  for (let item of items) {\n    if (!matches.includes(item)) {\n      result.add(item);\n    }\n  }\n  return [...result];\n};\n\n/**\n * Returns true if the given `string` contains the given pattern. Similar\n * to [.isMatch](#isMatch) but the pattern can match any part of the string.\n *\n * ```js\n * var mm = require('micromatch');\n * // mm.contains(string, pattern[, options]);\n *\n * console.log(mm.contains('aa/bb/cc', '*b'));\n * //=> true\n * console.log(mm.contains('aa/bb/cc', '*d'));\n * //=> false\n * ```\n * @param {String} `str` The string to match.\n * @param {String|Array} `patterns` Glob pattern to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if the patter matches any part of `str`.\n * @api public\n */\n\nmicromatch.contains = (str, pattern, options) => {\n  if (typeof str !== 'string') {\n    throw new TypeError(`Expected a string: \"${util.inspect(str)}\"`);\n  }\n\n  if (Array.isArray(pattern)) {\n    return pattern.some(p => micromatch.contains(str, p, options));\n  }\n\n  if (typeof pattern === 'string') {\n    if (isEmptyString(str) || isEmptyString(pattern)) {\n      return false;\n    }\n\n    if (str.includes(pattern) || (str.startsWith('./') && str.slice(2).includes(pattern))) {\n      return true;\n    }\n  }\n\n  return micromatch.isMatch(str, pattern, { ...options, contains: true });\n};\n\n/**\n * Filter the keys of the given object with the given `glob` pattern\n * and `options`. Does not attempt to match nested keys. If you need this feature,\n * use [glob-object][] instead.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.matchKeys(object, patterns[, options]);\n *\n * const obj = { aa: 'a', ab: 'b', ac: 'c' };\n * console.log(mm.matchKeys(obj, '*b'));\n * //=> { ab: 'b' }\n * ```\n * @param {Object} `object` The object with keys to filter.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Object} Returns an object with only keys that match the given patterns.\n * @api public\n */\n\nmicromatch.matchKeys = (obj, patterns, options) => {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('Expected the first argument to be an object');\n  }\n  let keys = micromatch(Object.keys(obj), patterns, options);\n  let res = {};\n  for (let key of keys) res[key] = obj[key];\n  return res;\n};\n\n/**\n * Returns true if some of the strings in the given `list` match any of the given glob `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.some(list, patterns[, options]);\n *\n * console.log(mm.some(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n * // true\n * console.log(mm.some(['foo.js'], ['*.js', '!foo.js']));\n * // false\n * ```\n * @param {String|Array} `list` The string or array of strings to test. Returns as soon as the first match is found.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\nmicromatch.some = (list, patterns, options) => {\n  let items = [].concat(list);\n\n  for (let pattern of [].concat(patterns)) {\n    let isMatch = picomatch(String(pattern), options);\n    if (items.some(item => isMatch(item))) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Returns true if every string in the given `list` matches\n * any of the given glob `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.every(list, patterns[, options]);\n *\n * console.log(mm.every('foo.js', ['foo.js']));\n * // true\n * console.log(mm.every(['foo.js', 'bar.js'], ['*.js']));\n * // true\n * console.log(mm.every(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n * // false\n * console.log(mm.every(['foo.js'], ['*.js', '!foo.js']));\n * // false\n * ```\n * @param {String|Array} `list` The string or array of strings to test.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\nmicromatch.every = (list, patterns, options) => {\n  let items = [].concat(list);\n\n  for (let pattern of [].concat(patterns)) {\n    let isMatch = picomatch(String(pattern), options);\n    if (!items.every(item => isMatch(item))) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Returns true if **all** of the given `patterns` match\n * the specified string.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.all(string, patterns[, options]);\n *\n * console.log(mm.all('foo.js', ['foo.js']));\n * // true\n *\n * console.log(mm.all('foo.js', ['*.js', '!foo.js']));\n * // false\n *\n * console.log(mm.all('foo.js', ['*.js', 'foo.js']));\n * // true\n *\n * console.log(mm.all('foo.js', ['*.js', 'f*', '*o*', '*o.js']));\n * // true\n * ```\n * @param {String|Array} `str` The string to test.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\nmicromatch.all = (str, patterns, options) => {\n  if (typeof str !== 'string') {\n    throw new TypeError(`Expected a string: \"${util.inspect(str)}\"`);\n  }\n\n  return [].concat(patterns).every(p => picomatch(p, options)(str));\n};\n\n/**\n * Returns an array of matches captured by `pattern` in `string, or `null` if the pattern did not match.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.capture(pattern, string[, options]);\n *\n * console.log(mm.capture('test/*.js', 'test/foo.js'));\n * //=> ['foo']\n * console.log(mm.capture('test/*.js', 'foo/bar.css'));\n * //=> null\n * ```\n * @param {String} `glob` Glob pattern to use for matching.\n * @param {String} `input` String to match\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns an array of captures if the input matches the glob pattern, otherwise `null`.\n * @api public\n */\n\nmicromatch.capture = (glob, input, options) => {\n  let posix = utils.isWindows(options);\n  let regex = picomatch.makeRe(String(glob), { ...options, capture: true });\n  let match = regex.exec(posix ? utils.toPosixSlashes(input) : input);\n\n  if (match) {\n    return match.slice(1).map(v => v === void 0 ? '' : v);\n  }\n};\n\n/**\n * Create a regular expression from the given glob `pattern`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.makeRe(pattern[, options]);\n *\n * console.log(mm.makeRe('*.js'));\n * //=> /^(?:(\\.[\\\\\\/])?(?!\\.)(?=.)[^\\/]*?\\.js)$/\n * ```\n * @param {String} `pattern` A glob pattern to convert to regex.\n * @param {Object} `options`\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\nmicromatch.makeRe = (...args) => picomatch.makeRe(...args);\n\n/**\n * Scan a glob pattern to separate the pattern into segments. Used\n * by the [split](#split) method.\n *\n * ```js\n * const mm = require('micromatch');\n * const state = mm.scan(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\nmicromatch.scan = (...args) => picomatch.scan(...args);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const mm = require('micromatch');\n * const state = mm(pattern[, options]);\n * ```\n * @param {String} `glob`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as regex source string.\n * @api public\n */\n\nmicromatch.parse = (patterns, options) => {\n  let res = [];\n  for (let pattern of [].concat(patterns || [])) {\n    for (let str of braces(String(pattern), options)) {\n      res.push(picomatch.parse(str, options));\n    }\n  }\n  return res;\n};\n\n/**\n * Process the given brace `pattern`.\n *\n * ```js\n * const { braces } = require('micromatch');\n * console.log(braces('foo/{a,b,c}/bar'));\n * //=> [ 'foo/(a|b|c)/bar' ]\n *\n * console.log(braces('foo/{a,b,c}/bar', { expand: true }));\n * //=> [ 'foo/a/bar', 'foo/b/bar', 'foo/c/bar' ]\n * ```\n * @param {String} `pattern` String with brace pattern to process.\n * @param {Object} `options` Any [options](#options) to change how expansion is performed. See the [braces][] library for all available options.\n * @return {Array}\n * @api public\n */\n\nmicromatch.braces = (pattern, options) => {\n  if (typeof pattern !== 'string') throw new TypeError('Expected a string');\n  if ((options && options.nobrace === true) || !/\\{.*\\}/.test(pattern)) {\n    return [pattern];\n  }\n  return braces(pattern, options);\n};\n\n/**\n * Expand braces\n */\n\nmicromatch.braceExpand = (pattern, options) => {\n  if (typeof pattern !== 'string') throw new TypeError('Expected a string');\n  return micromatch.braces(pattern, { ...options, expand: true });\n};\n\n/**\n * Expose micromatch\n */\n\nmodule.exports = micromatch;\n","'use strict';\n\nconst stringify = require('./lib/stringify');\nconst compile = require('./lib/compile');\nconst expand = require('./lib/expand');\nconst parse = require('./lib/parse');\n\n/**\n * Expand the given pattern or create a regex-compatible string.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces('{a,b,c}', { compile: true })); //=> ['(a|b|c)']\n * console.log(braces('{a,b,c}')); //=> ['a', 'b', 'c']\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {String}\n * @api public\n */\n\nconst braces = (input, options = {}) => {\n  let output = [];\n\n  if (Array.isArray(input)) {\n    for (let pattern of input) {\n      let result = braces.create(pattern, options);\n      if (Array.isArray(result)) {\n        output.push(...result);\n      } else {\n        output.push(result);\n      }\n    }\n  } else {\n    output = [].concat(braces.create(input, options));\n  }\n\n  if (options && options.expand === true && options.nodupes === true) {\n    output = [...new Set(output)];\n  }\n  return output;\n};\n\n/**\n * Parse the given `str` with the given `options`.\n *\n * ```js\n * // braces.parse(pattern, [, options]);\n * const ast = braces.parse('a/{b,c}/d');\n * console.log(ast);\n * ```\n * @param {String} pattern Brace pattern to parse\n * @param {Object} options\n * @return {Object} Returns an AST\n * @api public\n */\n\nbraces.parse = (input, options = {}) => parse(input, options);\n\n/**\n * Creates a braces string from an AST, or an AST node.\n *\n * ```js\n * const braces = require('braces');\n * let ast = braces.parse('foo/{a,b}/bar');\n * console.log(stringify(ast.nodes[2])); //=> '{a,b}'\n * ```\n * @param {String} `input` Brace pattern or AST.\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.stringify = (input, options = {}) => {\n  if (typeof input === 'string') {\n    return stringify(braces.parse(input, options), options);\n  }\n  return stringify(input, options);\n};\n\n/**\n * Compiles a brace pattern into a regex-compatible, optimized string.\n * This method is called by the main [braces](#braces) function by default.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.compile('a/{b,c}/d'));\n * //=> ['a/(b|c)/d']\n * ```\n * @param {String} `input` Brace pattern or AST.\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.compile = (input, options = {}) => {\n  if (typeof input === 'string') {\n    input = braces.parse(input, options);\n  }\n  return compile(input, options);\n};\n\n/**\n * Expands a brace pattern into an array. This method is called by the\n * main [braces](#braces) function when `options.expand` is true. Before\n * using this method it's recommended that you read the [performance notes](#performance))\n * and advantages of using [.compile](#compile) instead.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.expand('a/{b,c}/d'));\n * //=> ['a/b/d', 'a/c/d'];\n * ```\n * @param {String} `pattern` Brace pattern\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.expand = (input, options = {}) => {\n  if (typeof input === 'string') {\n    input = braces.parse(input, options);\n  }\n\n  let result = expand(input, options);\n\n  // filter out empty strings if specified\n  if (options.noempty === true) {\n    result = result.filter(Boolean);\n  }\n\n  // filter out duplicates if specified\n  if (options.nodupes === true) {\n    result = [...new Set(result)];\n  }\n\n  return result;\n};\n\n/**\n * Processes a brace pattern and returns either an expanded array\n * (if `options.expand` is true), a highly optimized regex-compatible string.\n * This method is called by the main [braces](#braces) function.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.create('user-{200..300}/project-{a,b,c}-{1..10}'))\n * //=> 'user-(20[0-9]|2[1-9][0-9]|300)/project-(a|b|c)-([1-9]|10)'\n * ```\n * @param {String} `pattern` Brace pattern\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.create = (input, options = {}) => {\n  if (input === '' || input.length < 3) {\n    return [input];\n  }\n\n return options.expand !== true\n    ? braces.compile(input, options)\n    : braces.expand(input, options);\n};\n\n/**\n * Expose \"braces\"\n */\n\nmodule.exports = braces;\n","'use strict';\n\nconst fill = require('fill-range');\nconst utils = require('./utils');\n\nconst compile = (ast, options = {}) => {\n  let walk = (node, parent = {}) => {\n    let invalidBlock = utils.isInvalidBrace(parent);\n    let invalidNode = node.invalid === true && options.escapeInvalid === true;\n    let invalid = invalidBlock === true || invalidNode === true;\n    let prefix = options.escapeInvalid === true ? '\\\\' : '';\n    let output = '';\n\n    if (node.isOpen === true) {\n      return prefix + node.value;\n    }\n    if (node.isClose === true) {\n      return prefix + node.value;\n    }\n\n    if (node.type === 'open') {\n      return invalid ? (prefix + node.value) : '(';\n    }\n\n    if (node.type === 'close') {\n      return invalid ? (prefix + node.value) : ')';\n    }\n\n    if (node.type === 'comma') {\n      return node.prev.type === 'comma' ? '' : (invalid ? node.value : '|');\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      let args = utils.reduce(node.nodes);\n      let range = fill(...args, { ...options, wrap: false, toRegex: true });\n\n      if (range.length !== 0) {\n        return args.length > 1 && range.length > 1 ? `(${range})` : range;\n      }\n    }\n\n    if (node.nodes) {\n      for (let child of node.nodes) {\n        output += walk(child, node);\n      }\n    }\n    return output;\n  };\n\n  return walk(ast);\n};\n\nmodule.exports = compile;\n","/*!\n * to-regex-range <https://github.com/micromatch/to-regex-range>\n *\n * Copyright (c) 2015-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nconst isNumber = require('is-number');\n\nconst toRegexRange = (min, max, options) => {\n  if (isNumber(min) === false) {\n    throw new TypeError('toRegexRange: expected the first argument to be a number');\n  }\n\n  if (max === void 0 || min === max) {\n    return String(min);\n  }\n\n  if (isNumber(max) === false) {\n    throw new TypeError('toRegexRange: expected the second argument to be a number.');\n  }\n\n  let opts = { relaxZeros: true, ...options };\n  if (typeof opts.strictZeros === 'boolean') {\n    opts.relaxZeros = opts.strictZeros === false;\n  }\n\n  let relax = String(opts.relaxZeros);\n  let shorthand = String(opts.shorthand);\n  let capture = String(opts.capture);\n  let wrap = String(opts.wrap);\n  let cacheKey = min + ':' + max + '=' + relax + shorthand + capture + wrap;\n\n  if (toRegexRange.cache.hasOwnProperty(cacheKey)) {\n    return toRegexRange.cache[cacheKey].result;\n  }\n\n  let a = Math.min(min, max);\n  let b = Math.max(min, max);\n\n  if (Math.abs(a - b) === 1) {\n    let result = min + '|' + max;\n    if (opts.capture) {\n      return `(${result})`;\n    }\n    if (opts.wrap === false) {\n      return result;\n    }\n    return `(?:${result})`;\n  }\n\n  let isPadded = hasPadding(min) || hasPadding(max);\n  let state = { min, max, a, b };\n  let positives = [];\n  let negatives = [];\n\n  if (isPadded) {\n    state.isPadded = isPadded;\n    state.maxLen = String(state.max).length;\n  }\n\n  if (a < 0) {\n    let newMin = b < 0 ? Math.abs(b) : 1;\n    negatives = splitToPatterns(newMin, Math.abs(a), state, opts);\n    a = state.a = 0;\n  }\n\n  if (b >= 0) {\n    positives = splitToPatterns(a, b, state, opts);\n  }\n\n  state.negatives = negatives;\n  state.positives = positives;\n  state.result = collatePatterns(negatives, positives, opts);\n\n  if (opts.capture === true) {\n    state.result = `(${state.result})`;\n  } else if (opts.wrap !== false && (positives.length + negatives.length) > 1) {\n    state.result = `(?:${state.result})`;\n  }\n\n  toRegexRange.cache[cacheKey] = state;\n  return state.result;\n};\n\nfunction collatePatterns(neg, pos, options) {\n  let onlyNegative = filterPatterns(neg, pos, '-', false, options) || [];\n  let onlyPositive = filterPatterns(pos, neg, '', false, options) || [];\n  let intersected = filterPatterns(neg, pos, '-?', true, options) || [];\n  let subpatterns = onlyNegative.concat(intersected).concat(onlyPositive);\n  return subpatterns.join('|');\n}\n\nfunction splitToRanges(min, max) {\n  let nines = 1;\n  let zeros = 1;\n\n  let stop = countNines(min, nines);\n  let stops = new Set([max]);\n\n  while (min <= stop && stop <= max) {\n    stops.add(stop);\n    nines += 1;\n    stop = countNines(min, nines);\n  }\n\n  stop = countZeros(max + 1, zeros) - 1;\n\n  while (min < stop && stop <= max) {\n    stops.add(stop);\n    zeros += 1;\n    stop = countZeros(max + 1, zeros) - 1;\n  }\n\n  stops = [...stops];\n  stops.sort(compare);\n  return stops;\n}\n\n/**\n * Convert a range to a regex pattern\n * @param {Number} `start`\n * @param {Number} `stop`\n * @return {String}\n */\n\nfunction rangeToPattern(start, stop, options) {\n  if (start === stop) {\n    return { pattern: start, count: [], digits: 0 };\n  }\n\n  let zipped = zip(start, stop);\n  let digits = zipped.length;\n  let pattern = '';\n  let count = 0;\n\n  for (let i = 0; i < digits; i++) {\n    let [startDigit, stopDigit] = zipped[i];\n\n    if (startDigit === stopDigit) {\n      pattern += startDigit;\n\n    } else if (startDigit !== '0' || stopDigit !== '9') {\n      pattern += toCharacterClass(startDigit, stopDigit, options);\n\n    } else {\n      count++;\n    }\n  }\n\n  if (count) {\n    pattern += options.shorthand === true ? '\\\\d' : '[0-9]';\n  }\n\n  return { pattern, count: [count], digits };\n}\n\nfunction splitToPatterns(min, max, tok, options) {\n  let ranges = splitToRanges(min, max);\n  let tokens = [];\n  let start = min;\n  let prev;\n\n  for (let i = 0; i < ranges.length; i++) {\n    let max = ranges[i];\n    let obj = rangeToPattern(String(start), String(max), options);\n    let zeros = '';\n\n    if (!tok.isPadded && prev && prev.pattern === obj.pattern) {\n      if (prev.count.length > 1) {\n        prev.count.pop();\n      }\n\n      prev.count.push(obj.count[0]);\n      prev.string = prev.pattern + toQuantifier(prev.count);\n      start = max + 1;\n      continue;\n    }\n\n    if (tok.isPadded) {\n      zeros = padZeros(max, tok, options);\n    }\n\n    obj.string = zeros + obj.pattern + toQuantifier(obj.count);\n    tokens.push(obj);\n    start = max + 1;\n    prev = obj;\n  }\n\n  return tokens;\n}\n\nfunction filterPatterns(arr, comparison, prefix, intersection, options) {\n  let result = [];\n\n  for (let ele of arr) {\n    let { string } = ele;\n\n    // only push if _both_ are negative...\n    if (!intersection && !contains(comparison, 'string', string)) {\n      result.push(prefix + string);\n    }\n\n    // or _both_ are positive\n    if (intersection && contains(comparison, 'string', string)) {\n      result.push(prefix + string);\n    }\n  }\n  return result;\n}\n\n/**\n * Zip strings\n */\n\nfunction zip(a, b) {\n  let arr = [];\n  for (let i = 0; i < a.length; i++) arr.push([a[i], b[i]]);\n  return arr;\n}\n\nfunction compare(a, b) {\n  return a > b ? 1 : b > a ? -1 : 0;\n}\n\nfunction contains(arr, key, val) {\n  return arr.some(ele => ele[key] === val);\n}\n\nfunction countNines(min, len) {\n  return Number(String(min).slice(0, -len) + '9'.repeat(len));\n}\n\nfunction countZeros(integer, zeros) {\n  return integer - (integer % Math.pow(10, zeros));\n}\n\nfunction toQuantifier(digits) {\n  let [start = 0, stop = ''] = digits;\n  if (stop || start > 1) {\n    return `{${start + (stop ? ',' + stop : '')}}`;\n  }\n  return '';\n}\n\nfunction toCharacterClass(a, b, options) {\n  return `[${a}${(b - a === 1) ? '' : '-'}${b}]`;\n}\n\nfunction hasPadding(str) {\n  return /^-?(0+)\\d/.test(str);\n}\n\nfunction padZeros(value, tok, options) {\n  if (!tok.isPadded) {\n    return value;\n  }\n\n  let diff = Math.abs(tok.maxLen - String(value).length);\n  let relax = options.relaxZeros !== false;\n\n  switch (diff) {\n    case 0:\n      return '';\n    case 1:\n      return relax ? '0?' : '0';\n    case 2:\n      return relax ? '0{0,2}' : '00';\n    default: {\n      return relax ? `0{0,${diff}}` : `0{${diff}}`;\n    }\n  }\n}\n\n/**\n * Cache\n */\n\ntoRegexRange.cache = {};\ntoRegexRange.clearCache = () => (toRegexRange.cache = {});\n\n/**\n * Expose `toRegexRange`\n */\n\nmodule.exports = toRegexRange;\n","/*!\n * is-number <https://github.com/jonschlinkert/is-number>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function(num) {\n  if (typeof num === 'number') {\n    return num - num === 0;\n  }\n  if (typeof num === 'string' && num.trim() !== '') {\n    return Number.isFinite ? Number.isFinite(+num) : isFinite(+num);\n  }\n  return false;\n};\n","'use strict';\n\nconst fill = require('fill-range');\nconst stringify = require('./stringify');\nconst utils = require('./utils');\n\nconst append = (queue = '', stash = '', enclose = false) => {\n  let result = [];\n\n  queue = [].concat(queue);\n  stash = [].concat(stash);\n\n  if (!stash.length) return queue;\n  if (!queue.length) {\n    return enclose ? utils.flatten(stash).map(ele => `{${ele}}`) : stash;\n  }\n\n  for (let item of queue) {\n    if (Array.isArray(item)) {\n      for (let value of item) {\n        result.push(append(value, stash, enclose));\n      }\n    } else {\n      for (let ele of stash) {\n        if (enclose === true && typeof ele === 'string') ele = `{${ele}}`;\n        result.push(Array.isArray(ele) ? append(item, ele, enclose) : (item + ele));\n      }\n    }\n  }\n  return utils.flatten(result);\n};\n\nconst expand = (ast, options = {}) => {\n  let rangeLimit = options.rangeLimit === void 0 ? 1000 : options.rangeLimit;\n\n  let walk = (node, parent = {}) => {\n    node.queue = [];\n\n    let p = parent;\n    let q = parent.queue;\n\n    while (p.type !== 'brace' && p.type !== 'root' && p.parent) {\n      p = p.parent;\n      q = p.queue;\n    }\n\n    if (node.invalid || node.dollar) {\n      q.push(append(q.pop(), stringify(node, options)));\n      return;\n    }\n\n    if (node.type === 'brace' && node.invalid !== true && node.nodes.length === 2) {\n      q.push(append(q.pop(), ['{}']));\n      return;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      let args = utils.reduce(node.nodes);\n\n      if (utils.exceedsLimit(...args, options.step, rangeLimit)) {\n        throw new RangeError('expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.');\n      }\n\n      let range = fill(...args, options);\n      if (range.length === 0) {\n        range = stringify(node, options);\n      }\n\n      q.push(append(q.pop(), range));\n      node.nodes = [];\n      return;\n    }\n\n    let enclose = utils.encloseBrace(node);\n    let queue = node.queue;\n    let block = node;\n\n    while (block.type !== 'brace' && block.type !== 'root' && block.parent) {\n      block = block.parent;\n      queue = block.queue;\n    }\n\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i];\n\n      if (child.type === 'comma' && node.type === 'brace') {\n        if (i === 1) queue.push('');\n        queue.push('');\n        continue;\n      }\n\n      if (child.type === 'close') {\n        q.push(append(q.pop(), queue, enclose));\n        continue;\n      }\n\n      if (child.value && child.type !== 'open') {\n        queue.push(append(queue.pop(), child.value));\n        continue;\n      }\n\n      if (child.nodes) {\n        walk(child, node);\n      }\n    }\n\n    return queue;\n  };\n\n  return utils.flatten(walk(ast));\n};\n\nmodule.exports = expand;\n","'use strict';\n\nconst stringify = require('./stringify');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  CHAR_BACKSLASH, /* \\ */\n  CHAR_BACKTICK, /* ` */\n  CHAR_COMMA, /* , */\n  CHAR_DOT, /* . */\n  CHAR_LEFT_PARENTHESES, /* ( */\n  CHAR_RIGHT_PARENTHESES, /* ) */\n  CHAR_LEFT_CURLY_BRACE, /* { */\n  CHAR_RIGHT_CURLY_BRACE, /* } */\n  CHAR_LEFT_SQUARE_BRACKET, /* [ */\n  CHAR_RIGHT_SQUARE_BRACKET, /* ] */\n  CHAR_DOUBLE_QUOTE, /* \" */\n  CHAR_SINGLE_QUOTE, /* ' */\n  CHAR_NO_BREAK_SPACE,\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE\n} = require('./constants');\n\n/**\n * parse\n */\n\nconst parse = (input, options = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  let opts = options || {};\n  let max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  if (input.length > max) {\n    throw new SyntaxError(`Input length (${input.length}), exceeds max characters (${max})`);\n  }\n\n  let ast = { type: 'root', input, nodes: [] };\n  let stack = [ast];\n  let block = ast;\n  let prev = ast;\n  let brackets = 0;\n  let length = input.length;\n  let index = 0;\n  let depth = 0;\n  let value;\n  let memo = {};\n\n  /**\n   * Helpers\n   */\n\n  const advance = () => input[index++];\n  const push = node => {\n    if (node.type === 'text' && prev.type === 'dot') {\n      prev.type = 'text';\n    }\n\n    if (prev && prev.type === 'text' && node.type === 'text') {\n      prev.value += node.value;\n      return;\n    }\n\n    block.nodes.push(node);\n    node.parent = block;\n    node.prev = prev;\n    prev = node;\n    return node;\n  };\n\n  push({ type: 'bos' });\n\n  while (index < length) {\n    block = stack[stack.length - 1];\n    value = advance();\n\n    /**\n     * Invalid chars\n     */\n\n    if (value === CHAR_ZERO_WIDTH_NOBREAK_SPACE || value === CHAR_NO_BREAK_SPACE) {\n      continue;\n    }\n\n    /**\n     * Escaped chars\n     */\n\n    if (value === CHAR_BACKSLASH) {\n      push({ type: 'text', value: (options.keepEscaping ? value : '') + advance() });\n      continue;\n    }\n\n    /**\n     * Right square bracket (literal): ']'\n     */\n\n    if (value === CHAR_RIGHT_SQUARE_BRACKET) {\n      push({ type: 'text', value: '\\\\' + value });\n      continue;\n    }\n\n    /**\n     * Left square bracket: '['\n     */\n\n    if (value === CHAR_LEFT_SQUARE_BRACKET) {\n      brackets++;\n\n      let closed = true;\n      let next;\n\n      while (index < length && (next = advance())) {\n        value += next;\n\n        if (next === CHAR_LEFT_SQUARE_BRACKET) {\n          brackets++;\n          continue;\n        }\n\n        if (next === CHAR_BACKSLASH) {\n          value += advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          brackets--;\n\n          if (brackets === 0) {\n            break;\n          }\n        }\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === CHAR_LEFT_PARENTHESES) {\n      block = push({ type: 'paren', nodes: [] });\n      stack.push(block);\n      push({ type: 'text', value });\n      continue;\n    }\n\n    if (value === CHAR_RIGHT_PARENTHESES) {\n      if (block.type !== 'paren') {\n        push({ type: 'text', value });\n        continue;\n      }\n      block = stack.pop();\n      push({ type: 'text', value });\n      block = stack[stack.length - 1];\n      continue;\n    }\n\n    /**\n     * Quotes: '|\"|`\n     */\n\n    if (value === CHAR_DOUBLE_QUOTE || value === CHAR_SINGLE_QUOTE || value === CHAR_BACKTICK) {\n      let open = value;\n      let next;\n\n      if (options.keepQuotes !== true) {\n        value = '';\n      }\n\n      while (index < length && (next = advance())) {\n        if (next === CHAR_BACKSLASH) {\n          value += next + advance();\n          continue;\n        }\n\n        if (next === open) {\n          if (options.keepQuotes === true) value += next;\n          break;\n        }\n\n        value += next;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Left curly brace: '{'\n     */\n\n    if (value === CHAR_LEFT_CURLY_BRACE) {\n      depth++;\n\n      let dollar = prev.value && prev.value.slice(-1) === '$' || block.dollar === true;\n      let brace = {\n        type: 'brace',\n        open: true,\n        close: false,\n        dollar,\n        depth,\n        commas: 0,\n        ranges: 0,\n        nodes: []\n      };\n\n      block = push(brace);\n      stack.push(block);\n      push({ type: 'open', value });\n      continue;\n    }\n\n    /**\n     * Right curly brace: '}'\n     */\n\n    if (value === CHAR_RIGHT_CURLY_BRACE) {\n      if (block.type !== 'brace') {\n        push({ type: 'text', value });\n        continue;\n      }\n\n      let type = 'close';\n      block = stack.pop();\n      block.close = true;\n\n      push({ type, value });\n      depth--;\n\n      block = stack[stack.length - 1];\n      continue;\n    }\n\n    /**\n     * Comma: ','\n     */\n\n    if (value === CHAR_COMMA && depth > 0) {\n      if (block.ranges > 0) {\n        block.ranges = 0;\n        let open = block.nodes.shift();\n        block.nodes = [open, { type: 'text', value: stringify(block) }];\n      }\n\n      push({ type: 'comma', value });\n      block.commas++;\n      continue;\n    }\n\n    /**\n     * Dot: '.'\n     */\n\n    if (value === CHAR_DOT && depth > 0 && block.commas === 0) {\n      let siblings = block.nodes;\n\n      if (depth === 0 || siblings.length === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n\n      if (prev.type === 'dot') {\n        block.range = [];\n        prev.value += value;\n        prev.type = 'range';\n\n        if (block.nodes.length !== 3 && block.nodes.length !== 5) {\n          block.invalid = true;\n          block.ranges = 0;\n          prev.type = 'text';\n          continue;\n        }\n\n        block.ranges++;\n        block.args = [];\n        continue;\n      }\n\n      if (prev.type === 'range') {\n        siblings.pop();\n\n        let before = siblings[siblings.length - 1];\n        before.value += prev.value + value;\n        prev = before;\n        block.ranges--;\n        continue;\n      }\n\n      push({ type: 'dot', value });\n      continue;\n    }\n\n    /**\n     * Text\n     */\n\n    push({ type: 'text', value });\n  }\n\n  // Mark imbalanced braces and brackets as invalid\n  do {\n    block = stack.pop();\n\n    if (block.type !== 'root') {\n      block.nodes.forEach(node => {\n        if (!node.nodes) {\n          if (node.type === 'open') node.isOpen = true;\n          if (node.type === 'close') node.isClose = true;\n          if (!node.nodes) node.type = 'text';\n          node.invalid = true;\n        }\n      });\n\n      // get the location of the block on parent.nodes (block's siblings)\n      let parent = stack[stack.length - 1];\n      let index = parent.nodes.indexOf(block);\n      // replace the (invalid) block with it's nodes\n      parent.nodes.splice(index, 1, ...block.nodes);\n    }\n  } while (stack.length > 0);\n\n  push({ type: 'eos' });\n  return ast;\n};\n\nmodule.exports = parse;\n","'use strict';\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n\n  // Digits\n  CHAR_0: '0', /* 0 */\n  CHAR_9: '9', /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 'A', /* A */\n  CHAR_LOWERCASE_A: 'a', /* a */\n  CHAR_UPPERCASE_Z: 'Z', /* Z */\n  CHAR_LOWERCASE_Z: 'z', /* z */\n\n  CHAR_LEFT_PARENTHESES: '(', /* ( */\n  CHAR_RIGHT_PARENTHESES: ')', /* ) */\n\n  CHAR_ASTERISK: '*', /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: '&', /* & */\n  CHAR_AT: '@', /* @ */\n  CHAR_BACKSLASH: '\\\\', /* \\ */\n  CHAR_BACKTICK: '`', /* ` */\n  CHAR_CARRIAGE_RETURN: '\\r', /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: '^', /* ^ */\n  CHAR_COLON: ':', /* : */\n  CHAR_COMMA: ',', /* , */\n  CHAR_DOLLAR: '$', /* . */\n  CHAR_DOT: '.', /* . */\n  CHAR_DOUBLE_QUOTE: '\"', /* \" */\n  CHAR_EQUAL: '=', /* = */\n  CHAR_EXCLAMATION_MARK: '!', /* ! */\n  CHAR_FORM_FEED: '\\f', /* \\f */\n  CHAR_FORWARD_SLASH: '/', /* / */\n  CHAR_HASH: '#', /* # */\n  CHAR_HYPHEN_MINUS: '-', /* - */\n  CHAR_LEFT_ANGLE_BRACKET: '<', /* < */\n  CHAR_LEFT_CURLY_BRACE: '{', /* { */\n  CHAR_LEFT_SQUARE_BRACKET: '[', /* [ */\n  CHAR_LINE_FEED: '\\n', /* \\n */\n  CHAR_NO_BREAK_SPACE: '\\u00A0', /* \\u00A0 */\n  CHAR_PERCENT: '%', /* % */\n  CHAR_PLUS: '+', /* + */\n  CHAR_QUESTION_MARK: '?', /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: '>', /* > */\n  CHAR_RIGHT_CURLY_BRACE: '}', /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: ']', /* ] */\n  CHAR_SEMICOLON: ';', /* ; */\n  CHAR_SINGLE_QUOTE: '\\'', /* ' */\n  CHAR_SPACE: ' ', /*   */\n  CHAR_TAB: '\\t', /* \\t */\n  CHAR_UNDERSCORE: '_', /* _ */\n  CHAR_VERTICAL_LINE: '|', /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: '\\uFEFF' /* \\uFEFF */\n};\n","'use strict';\n\nmodule.exports = require('./lib/picomatch');\n","'use strict';\n\nconst path = require('path');\nconst scan = require('./scan');\nconst parse = require('./parse');\nconst utils = require('./utils');\nconst constants = require('./constants');\nconst isObject = val => val && typeof val === 'object' && !Array.isArray(val);\n\n/**\n * Creates a matcher function from one or more glob patterns. The\n * returned function takes a string to match as its first argument,\n * and returns true if the string is a match. The returned matcher\n * function also takes a boolean as the second argument that, when true,\n * returns an object with additional information.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch(glob[, options]);\n *\n * const isMatch = picomatch('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @name picomatch\n * @param {String|Array} `globs` One or more glob patterns.\n * @param {Object=} `options`\n * @return {Function=} Returns a matcher function.\n * @api public\n */\n\nconst picomatch = (glob, options, returnState = false) => {\n  if (Array.isArray(glob)) {\n    const fns = glob.map(input => picomatch(input, options, returnState));\n    const arrayMatcher = str => {\n      for (const isMatch of fns) {\n        const state = isMatch(str);\n        if (state) return state;\n      }\n      return false;\n    };\n    return arrayMatcher;\n  }\n\n  const isState = isObject(glob) && glob.tokens && glob.input;\n\n  if (glob === '' || (typeof glob !== 'string' && !isState)) {\n    throw new TypeError('Expected pattern to be a non-empty string');\n  }\n\n  const opts = options || {};\n  const posix = utils.isWindows(options);\n  const regex = isState\n    ? picomatch.compileRe(glob, options)\n    : picomatch.makeRe(glob, options, false, true);\n\n  const state = regex.state;\n  delete regex.state;\n\n  let isIgnored = () => false;\n  if (opts.ignore) {\n    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };\n    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);\n  }\n\n  const matcher = (input, returnObject = false) => {\n    const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix });\n    const result = { glob, state, regex, posix, input, output, match, isMatch };\n\n    if (typeof opts.onResult === 'function') {\n      opts.onResult(result);\n    }\n\n    if (isMatch === false) {\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (isIgnored(input)) {\n      if (typeof opts.onIgnore === 'function') {\n        opts.onIgnore(result);\n      }\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (typeof opts.onMatch === 'function') {\n      opts.onMatch(result);\n    }\n    return returnObject ? result : true;\n  };\n\n  if (returnState) {\n    matcher.state = state;\n  }\n\n  return matcher;\n};\n\n/**\n * Test `input` with the given `regex`. This is used by the main\n * `picomatch()` function to test the input string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.test(input, regex[, options]);\n *\n * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp} `regex`\n * @return {Object} Returns an object with matching info.\n * @api public\n */\n\npicomatch.test = (input, regex, options, { glob, posix } = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected input to be a string');\n  }\n\n  if (input === '') {\n    return { isMatch: false, output: '' };\n  }\n\n  const opts = options || {};\n  const format = opts.format || (posix ? utils.toPosixSlashes : null);\n  let match = input === glob;\n  let output = (match && format) ? format(input) : input;\n\n  if (match === false) {\n    output = format ? format(input) : input;\n    match = output === glob;\n  }\n\n  if (match === false || opts.capture === true) {\n    if (opts.matchBase === true || opts.basename === true) {\n      match = picomatch.matchBase(input, regex, options, posix);\n    } else {\n      match = regex.exec(output);\n    }\n  }\n\n  return { isMatch: Boolean(match), match, output };\n};\n\n/**\n * Match the basename of a filepath.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.matchBase(input, glob[, options]);\n * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).\n * @return {Boolean}\n * @api public\n */\n\npicomatch.matchBase = (input, glob, options, posix = utils.isWindows(options)) => {\n  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);\n  return regex.test(path.basename(input));\n};\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.isMatch(string, patterns[, options]);\n *\n * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String|Array} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\npicomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const result = picomatch.parse(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as a regex source string.\n * @api public\n */\n\npicomatch.parse = (pattern, options) => {\n  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));\n  return parse(pattern, { ...options, fastpaths: false });\n};\n\n/**\n * Scan a glob pattern to separate the pattern into segments.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.scan(input[, options]);\n *\n * const result = picomatch.scan('!./foo/*.js');\n * console.log(result);\n * { prefix: '!./',\n *   input: '!./foo/*.js',\n *   start: 3,\n *   base: 'foo',\n *   glob: '*.js',\n *   isBrace: false,\n *   isBracket: false,\n *   isGlob: true,\n *   isExtglob: false,\n *   isGlobstar: false,\n *   negated: true }\n * ```\n * @param {String} `input` Glob pattern to scan.\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\npicomatch.scan = (input, options) => scan(input, options);\n\n/**\n * Create a regular expression from a parsed glob pattern.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const state = picomatch.parse('*.js');\n * // picomatch.compileRe(state[, options]);\n *\n * console.log(picomatch.compileRe(state));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `state` The object returned from the `.parse` method.\n * @param {Object} `options`\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\npicomatch.compileRe = (parsed, options, returnOutput = false, returnState = false) => {\n  if (returnOutput === true) {\n    return parsed.output;\n  }\n\n  const opts = options || {};\n  const prepend = opts.contains ? '' : '^';\n  const append = opts.contains ? '' : '$';\n\n  let source = `${prepend}(?:${parsed.output})${append}`;\n  if (parsed && parsed.negated === true) {\n    source = `^(?!${source}).*$`;\n  }\n\n  const regex = picomatch.toRegex(source, options);\n  if (returnState === true) {\n    regex.state = parsed;\n  }\n\n  return regex;\n};\n\npicomatch.makeRe = (input, options, returnOutput = false, returnState = false) => {\n  if (!input || typeof input !== 'string') {\n    throw new TypeError('Expected a non-empty string');\n  }\n\n  const opts = options || {};\n  let parsed = { negated: false, fastpaths: true };\n  let prefix = '';\n  let output;\n\n  if (input.startsWith('./')) {\n    input = input.slice(2);\n    prefix = parsed.prefix = './';\n  }\n\n  if (opts.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {\n    output = parse.fastpaths(input, options);\n  }\n\n  if (output === undefined) {\n    parsed = parse(input, options);\n    parsed.prefix = prefix + (parsed.prefix || '');\n  } else {\n    parsed.output = output;\n  }\n\n  return picomatch.compileRe(parsed, options, returnOutput, returnState);\n};\n\n/**\n * Create a regular expression from the given regex source string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.toRegex(source[, options]);\n *\n * const { output } = picomatch.parse('*.js');\n * console.log(picomatch.toRegex(output));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `source` Regular expression source string.\n * @param {Object} `options`\n * @return {RegExp}\n * @api public\n */\n\npicomatch.toRegex = (source, options) => {\n  try {\n    const opts = options || {};\n    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));\n  } catch (err) {\n    if (options && options.debug === true) throw err;\n    return /$^/;\n  }\n};\n\n/**\n * Picomatch constants.\n * @return {Object}\n */\n\npicomatch.constants = constants;\n\n/**\n * Expose \"picomatch\"\n */\n\nmodule.exports = picomatch;\n","'use strict';\n\nconst utils = require('./utils');\nconst {\n  CHAR_ASTERISK,             /* * */\n  CHAR_AT,                   /* @ */\n  CHAR_BACKWARD_SLASH,       /* \\ */\n  CHAR_COMMA,                /* , */\n  CHAR_DOT,                  /* . */\n  CHAR_EXCLAMATION_MARK,     /* ! */\n  CHAR_FORWARD_SLASH,        /* / */\n  CHAR_LEFT_CURLY_BRACE,     /* { */\n  CHAR_LEFT_PARENTHESES,     /* ( */\n  CHAR_LEFT_SQUARE_BRACKET,  /* [ */\n  CHAR_PLUS,                 /* + */\n  CHAR_QUESTION_MARK,        /* ? */\n  CHAR_RIGHT_CURLY_BRACE,    /* } */\n  CHAR_RIGHT_PARENTHESES,    /* ) */\n  CHAR_RIGHT_SQUARE_BRACKET  /* ] */\n} = require('./constants');\n\nconst isPathSeparator = code => {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n};\n\nconst depth = token => {\n  if (token.isPrefix !== true) {\n    token.depth = token.isGlobstar ? Infinity : 1;\n  }\n};\n\n/**\n * Quickly scans a glob pattern and returns an object with a handful of\n * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),\n * `glob` (the actual pattern), and `negated` (true if the path starts with `!`).\n *\n * ```js\n * const pm = require('picomatch');\n * console.log(pm.scan('foo/bar/*.js'));\n * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {Object} Returns an object with tokens and regex source string.\n * @api public\n */\n\nconst scan = (input, options) => {\n  const opts = options || {};\n\n  const length = input.length - 1;\n  const scanToEnd = opts.parts === true || opts.scanToEnd === true;\n  const slashes = [];\n  const tokens = [];\n  const parts = [];\n\n  let str = input;\n  let index = -1;\n  let start = 0;\n  let lastIndex = 0;\n  let isBrace = false;\n  let isBracket = false;\n  let isGlob = false;\n  let isExtglob = false;\n  let isGlobstar = false;\n  let braceEscaped = false;\n  let backslashes = false;\n  let negated = false;\n  let finished = false;\n  let braces = 0;\n  let prev;\n  let code;\n  let token = { value: '', depth: 0, isGlob: false };\n\n  const eos = () => index >= length;\n  const peek = () => str.charCodeAt(index + 1);\n  const advance = () => {\n    prev = code;\n    return str.charCodeAt(++index);\n  };\n\n  while (index < length) {\n    code = advance();\n    let next;\n\n    if (code === CHAR_BACKWARD_SLASH) {\n      backslashes = token.backslashes = true;\n      code = advance();\n\n      if (code === CHAR_LEFT_CURLY_BRACE) {\n        braceEscaped = true;\n      }\n      continue;\n    }\n\n    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {\n      braces++;\n\n      while (eos() !== true && (code = advance())) {\n        if (code === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (code === CHAR_LEFT_CURLY_BRACE) {\n          braces++;\n          continue;\n        }\n\n        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (braceEscaped !== true && code === CHAR_COMMA) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (code === CHAR_RIGHT_CURLY_BRACE) {\n          braces--;\n\n          if (braces === 0) {\n            braceEscaped = false;\n            isBrace = token.isBrace = true;\n            finished = true;\n            break;\n          }\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (code === CHAR_FORWARD_SLASH) {\n      slashes.push(index);\n      tokens.push(token);\n      token = { value: '', depth: 0, isGlob: false };\n\n      if (finished === true) continue;\n      if (prev === CHAR_DOT && index === (start + 1)) {\n        start += 2;\n        continue;\n      }\n\n      lastIndex = index + 1;\n      continue;\n    }\n\n    if (opts.noext !== true) {\n      const isExtglobChar = code === CHAR_PLUS\n        || code === CHAR_AT\n        || code === CHAR_ASTERISK\n        || code === CHAR_QUESTION_MARK\n        || code === CHAR_EXCLAMATION_MARK;\n\n      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {\n        isGlob = token.isGlob = true;\n        isExtglob = token.isExtglob = true;\n        finished = true;\n\n        if (scanToEnd === true) {\n          while (eos() !== true && (code = advance())) {\n            if (code === CHAR_BACKWARD_SLASH) {\n              backslashes = token.backslashes = true;\n              code = advance();\n              continue;\n            }\n\n            if (code === CHAR_RIGHT_PARENTHESES) {\n              isGlob = token.isGlob = true;\n              finished = true;\n              break;\n            }\n          }\n          continue;\n        }\n        break;\n      }\n    }\n\n    if (code === CHAR_ASTERISK) {\n      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_QUESTION_MARK) {\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_LEFT_SQUARE_BRACKET) {\n      while (eos() !== true && (next = advance())) {\n        if (next === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          isBracket = token.isBracket = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n          break;\n        }\n      }\n    }\n\n    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\n      negated = token.negated = true;\n      start++;\n      continue;\n    }\n\n    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {\n      isGlob = token.isGlob = true;\n\n      if (scanToEnd === true) {\n        while (eos() !== true && (code = advance())) {\n          if (code === CHAR_LEFT_PARENTHESES) {\n            backslashes = token.backslashes = true;\n            code = advance();\n            continue;\n          }\n\n          if (code === CHAR_RIGHT_PARENTHESES) {\n            finished = true;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    if (isGlob === true) {\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n  }\n\n  if (opts.noext === true) {\n    isExtglob = false;\n    isGlob = false;\n  }\n\n  let base = str;\n  let prefix = '';\n  let glob = '';\n\n  if (start > 0) {\n    prefix = str.slice(0, start);\n    str = str.slice(start);\n    lastIndex -= start;\n  }\n\n  if (base && isGlob === true && lastIndex > 0) {\n    base = str.slice(0, lastIndex);\n    glob = str.slice(lastIndex);\n  } else if (isGlob === true) {\n    base = '';\n    glob = str;\n  } else {\n    base = str;\n  }\n\n  if (base && base !== '' && base !== '/' && base !== str) {\n    if (isPathSeparator(base.charCodeAt(base.length - 1))) {\n      base = base.slice(0, -1);\n    }\n  }\n\n  if (opts.unescape === true) {\n    if (glob) glob = utils.removeBackslashes(glob);\n\n    if (base && backslashes === true) {\n      base = utils.removeBackslashes(base);\n    }\n  }\n\n  const state = {\n    prefix,\n    input,\n    start,\n    base,\n    glob,\n    isBrace,\n    isBracket,\n    isGlob,\n    isExtglob,\n    isGlobstar,\n    negated\n  };\n\n  if (opts.tokens === true) {\n    state.maxDepth = 0;\n    if (!isPathSeparator(code)) {\n      tokens.push(token);\n    }\n    state.tokens = tokens;\n  }\n\n  if (opts.parts === true || opts.tokens === true) {\n    let prevIndex;\n\n    for (let idx = 0; idx < slashes.length; idx++) {\n      const n = prevIndex ? prevIndex + 1 : start;\n      const i = slashes[idx];\n      const value = input.slice(n, i);\n      if (opts.tokens) {\n        if (idx === 0 && start !== 0) {\n          tokens[idx].isPrefix = true;\n          tokens[idx].value = prefix;\n        } else {\n          tokens[idx].value = value;\n        }\n        depth(tokens[idx]);\n        state.maxDepth += tokens[idx].depth;\n      }\n      if (idx !== 0 || value !== '') {\n        parts.push(value);\n      }\n      prevIndex = i;\n    }\n\n    if (prevIndex && prevIndex + 1 < input.length) {\n      const value = input.slice(prevIndex + 1);\n      parts.push(value);\n\n      if (opts.tokens) {\n        tokens[tokens.length - 1].value = value;\n        depth(tokens[tokens.length - 1]);\n        state.maxDepth += tokens[tokens.length - 1].depth;\n      }\n    }\n\n    state.slashes = slashes;\n    state.parts = parts;\n  }\n\n  return state;\n};\n\nmodule.exports = scan;\n","'use strict';\n\nconst constants = require('./constants');\nconst utils = require('./utils');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  POSIX_REGEX_SOURCE,\n  REGEX_NON_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_BACKREF,\n  REPLACEMENTS\n} = constants;\n\n/**\n * Helpers\n */\n\nconst expandRange = (args, options) => {\n  if (typeof options.expandRange === 'function') {\n    return options.expandRange(...args, options);\n  }\n\n  args.sort();\n  const value = `[${args.join('-')}]`;\n\n  try {\n    /* eslint-disable-next-line no-new */\n    new RegExp(value);\n  } catch (ex) {\n    return args.map(v => utils.escapeRegex(v)).join('..');\n  }\n\n  return value;\n};\n\n/**\n * Create the message for a syntax error\n */\n\nconst syntaxError = (type, char) => {\n  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\n};\n\n/**\n * Parse the given input string.\n * @param {String} input\n * @param {Object} options\n * @return {Object}\n */\n\nconst parse = (input, options) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n\n  let len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  const bos = { type: 'bos', value: '', output: opts.prepend || '' };\n  const tokens = [bos];\n\n  const capture = opts.capture ? '' : '?:';\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const PLATFORM_CHARS = constants.globChars(win32);\n  const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);\n\n  const {\n    DOT_LITERAL,\n    PLUS_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOT_SLASH,\n    NO_DOTS_SLASH,\n    QMARK,\n    QMARK_NO_DOT,\n    STAR,\n    START_ANCHOR\n  } = PLATFORM_CHARS;\n\n  const globstar = (opts) => {\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const nodot = opts.dot ? '' : NO_DOT;\n  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\n  let star = opts.bash === true ? globstar(opts) : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  // minimatch options support\n  if (typeof opts.noext === 'boolean') {\n    opts.noextglob = opts.noext;\n  }\n\n  const state = {\n    input,\n    index: -1,\n    start: 0,\n    dot: opts.dot === true,\n    consumed: '',\n    output: '',\n    prefix: '',\n    backtrack: false,\n    negated: false,\n    brackets: 0,\n    braces: 0,\n    parens: 0,\n    quotes: 0,\n    globstar: false,\n    tokens\n  };\n\n  input = utils.removePrefix(input, state);\n  len = input.length;\n\n  const extglobs = [];\n  const braces = [];\n  const stack = [];\n  let prev = bos;\n  let value;\n\n  /**\n   * Tokenizing helpers\n   */\n\n  const eos = () => state.index === len - 1;\n  const peek = state.peek = (n = 1) => input[state.index + n];\n  const advance = state.advance = () => input[++state.index];\n  const remaining = () => input.slice(state.index + 1);\n  const consume = (value = '', num = 0) => {\n    state.consumed += value;\n    state.index += num;\n  };\n  const append = token => {\n    state.output += token.output != null ? token.output : token.value;\n    consume(token.value);\n  };\n\n  const negate = () => {\n    let count = 1;\n\n    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\n      advance();\n      state.start++;\n      count++;\n    }\n\n    if (count % 2 === 0) {\n      return false;\n    }\n\n    state.negated = true;\n    state.start++;\n    return true;\n  };\n\n  const increment = type => {\n    state[type]++;\n    stack.push(type);\n  };\n\n  const decrement = type => {\n    state[type]--;\n    stack.pop();\n  };\n\n  /**\n   * Push tokens onto the tokens array. This helper speeds up\n   * tokenizing by 1) helping us avoid backtracking as much as possible,\n   * and 2) helping us avoid creating extra tokens when consecutive\n   * characters are plain text. This improves performance and simplifies\n   * lookbehinds.\n   */\n\n  const push = tok => {\n    if (prev.type === 'globstar') {\n      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\n      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));\n\n      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\n        state.output = state.output.slice(0, -prev.output.length);\n        prev.type = 'star';\n        prev.value = '*';\n        prev.output = star;\n        state.output += prev.output;\n      }\n    }\n\n    if (extglobs.length && tok.type !== 'paren' && !EXTGLOB_CHARS[tok.value]) {\n      extglobs[extglobs.length - 1].inner += tok.value;\n    }\n\n    if (tok.value || tok.output) append(tok);\n    if (prev && prev.type === 'text' && tok.type === 'text') {\n      prev.value += tok.value;\n      prev.output = (prev.output || '') + tok.value;\n      return;\n    }\n\n    tok.prev = prev;\n    tokens.push(tok);\n    prev = tok;\n  };\n\n  const extglobOpen = (type, value) => {\n    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };\n\n    token.prev = prev;\n    token.parens = state.parens;\n    token.output = state.output;\n    const output = (opts.capture ? '(' : '') + token.open;\n\n    increment('parens');\n    push({ type, value, output: state.output ? '' : ONE_CHAR });\n    push({ type: 'paren', extglob: true, value: advance(), output });\n    extglobs.push(token);\n  };\n\n  const extglobClose = token => {\n    let output = token.close + (opts.capture ? ')' : '');\n\n    if (token.type === 'negate') {\n      let extglobStar = star;\n\n      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\n        extglobStar = globstar(opts);\n      }\n\n      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\n        output = token.close = `)$))${extglobStar}`;\n      }\n\n      if (token.prev.type === 'bos' && eos()) {\n        state.negatedExtglob = true;\n      }\n    }\n\n    push({ type: 'paren', extglob: true, value, output });\n    decrement('parens');\n  };\n\n  /**\n   * Fast paths\n   */\n\n  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\n    let backslashes = false;\n\n    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\n      if (first === '\\\\') {\n        backslashes = true;\n        return m;\n      }\n\n      if (first === '?') {\n        if (esc) {\n          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        if (index === 0) {\n          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        return QMARK.repeat(chars.length);\n      }\n\n      if (first === '.') {\n        return DOT_LITERAL.repeat(chars.length);\n      }\n\n      if (first === '*') {\n        if (esc) {\n          return esc + first + (rest ? star : '');\n        }\n        return star;\n      }\n      return esc ? m : `\\\\${m}`;\n    });\n\n    if (backslashes === true) {\n      if (opts.unescape === true) {\n        output = output.replace(/\\\\/g, '');\n      } else {\n        output = output.replace(/\\\\+/g, m => {\n          return m.length % 2 === 0 ? '\\\\\\\\' : (m ? '\\\\' : '');\n        });\n      }\n    }\n\n    if (output === input && opts.contains === true) {\n      state.output = input;\n      return state;\n    }\n\n    state.output = utils.wrapOutput(output, state, options);\n    return state;\n  }\n\n  /**\n   * Tokenize input until we reach end-of-string\n   */\n\n  while (!eos()) {\n    value = advance();\n\n    if (value === '\\u0000') {\n      continue;\n    }\n\n    /**\n     * Escaped characters\n     */\n\n    if (value === '\\\\') {\n      const next = peek();\n\n      if (next === '/' && opts.bash !== true) {\n        continue;\n      }\n\n      if (next === '.' || next === ';') {\n        continue;\n      }\n\n      if (!next) {\n        value += '\\\\';\n        push({ type: 'text', value });\n        continue;\n      }\n\n      // collapse slashes to reduce potential for exploits\n      const match = /^\\\\+/.exec(remaining());\n      let slashes = 0;\n\n      if (match && match[0].length > 2) {\n        slashes = match[0].length;\n        state.index += slashes;\n        if (slashes % 2 !== 0) {\n          value += '\\\\';\n        }\n      }\n\n      if (opts.unescape === true) {\n        value = advance() || '';\n      } else {\n        value += advance() || '';\n      }\n\n      if (state.brackets === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n    }\n\n    /**\n     * If we're inside a regex character class, continue\n     * until we reach the closing bracket.\n     */\n\n    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\n      if (opts.posix !== false && value === ':') {\n        const inner = prev.value.slice(1);\n        if (inner.includes('[')) {\n          prev.posix = true;\n\n          if (inner.includes(':')) {\n            const idx = prev.value.lastIndexOf('[');\n            const pre = prev.value.slice(0, idx);\n            const rest = prev.value.slice(idx + 2);\n            const posix = POSIX_REGEX_SOURCE[rest];\n            if (posix) {\n              prev.value = pre + posix;\n              state.backtrack = true;\n              advance();\n\n              if (!bos.output && tokens.indexOf(prev) === 1) {\n                bos.output = ONE_CHAR;\n              }\n              continue;\n            }\n          }\n        }\n      }\n\n      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {\n        value = `\\\\${value}`;\n      }\n\n      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\n        value = `\\\\${value}`;\n      }\n\n      if (opts.posix === true && value === '!' && prev.value === '[') {\n        value = '^';\n      }\n\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * If we're inside a quoted string, continue\n     * until we reach the closing double quote.\n     */\n\n    if (state.quotes === 1 && value !== '\"') {\n      value = utils.escapeRegex(value);\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * Double quotes\n     */\n\n    if (value === '\"') {\n      state.quotes = state.quotes === 1 ? 0 : 1;\n      if (opts.keepQuotes === true) {\n        push({ type: 'text', value });\n      }\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === '(') {\n      increment('parens');\n      push({ type: 'paren', value });\n      continue;\n    }\n\n    if (value === ')') {\n      if (state.parens === 0 && opts.strictBrackets === true) {\n        throw new SyntaxError(syntaxError('opening', '('));\n      }\n\n      const extglob = extglobs[extglobs.length - 1];\n      if (extglob && state.parens === extglob.parens + 1) {\n        extglobClose(extglobs.pop());\n        continue;\n      }\n\n      push({ type: 'paren', value, output: state.parens ? ')' : '\\\\)' });\n      decrement('parens');\n      continue;\n    }\n\n    /**\n     * Square brackets\n     */\n\n    if (value === '[') {\n      if (opts.nobracket === true || !remaining().includes(']')) {\n        if (opts.nobracket !== true && opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('closing', ']'));\n        }\n\n        value = `\\\\${value}`;\n      } else {\n        increment('brackets');\n      }\n\n      push({ type: 'bracket', value });\n      continue;\n    }\n\n    if (value === ']') {\n      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      if (state.brackets === 0) {\n        if (opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('opening', '['));\n        }\n\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      decrement('brackets');\n\n      const prevValue = prev.value.slice(1);\n      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\n        value = `/${value}`;\n      }\n\n      prev.value += value;\n      append({ value });\n\n      // when literal brackets are explicitly disabled\n      // assume we should match with a regex character class\n      if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {\n        continue;\n      }\n\n      const escaped = utils.escapeRegex(prev.value);\n      state.output = state.output.slice(0, -prev.value.length);\n\n      // when literal brackets are explicitly enabled\n      // assume we should escape the brackets to match literal characters\n      if (opts.literalBrackets === true) {\n        state.output += escaped;\n        prev.value = escaped;\n        continue;\n      }\n\n      // when the user specifies nothing, try to match both\n      prev.value = `(${capture}${escaped}|${prev.value})`;\n      state.output += prev.value;\n      continue;\n    }\n\n    /**\n     * Braces\n     */\n\n    if (value === '{' && opts.nobrace !== true) {\n      increment('braces');\n\n      const open = {\n        type: 'brace',\n        value,\n        output: '(',\n        outputIndex: state.output.length,\n        tokensIndex: state.tokens.length\n      };\n\n      braces.push(open);\n      push(open);\n      continue;\n    }\n\n    if (value === '}') {\n      const brace = braces[braces.length - 1];\n\n      if (opts.nobrace === true || !brace) {\n        push({ type: 'text', value, output: value });\n        continue;\n      }\n\n      let output = ')';\n\n      if (brace.dots === true) {\n        const arr = tokens.slice();\n        const range = [];\n\n        for (let i = arr.length - 1; i >= 0; i--) {\n          tokens.pop();\n          if (arr[i].type === 'brace') {\n            break;\n          }\n          if (arr[i].type !== 'dots') {\n            range.unshift(arr[i].value);\n          }\n        }\n\n        output = expandRange(range, opts);\n        state.backtrack = true;\n      }\n\n      if (brace.comma !== true && brace.dots !== true) {\n        const out = state.output.slice(0, brace.outputIndex);\n        const toks = state.tokens.slice(brace.tokensIndex);\n        brace.value = brace.output = '\\\\{';\n        value = output = '\\\\}';\n        state.output = out;\n        for (const t of toks) {\n          state.output += (t.output || t.value);\n        }\n      }\n\n      push({ type: 'brace', value, output });\n      decrement('braces');\n      braces.pop();\n      continue;\n    }\n\n    /**\n     * Pipes\n     */\n\n    if (value === '|') {\n      if (extglobs.length > 0) {\n        extglobs[extglobs.length - 1].conditions++;\n      }\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Commas\n     */\n\n    if (value === ',') {\n      let output = value;\n\n      const brace = braces[braces.length - 1];\n      if (brace && stack[stack.length - 1] === 'braces') {\n        brace.comma = true;\n        output = '|';\n      }\n\n      push({ type: 'comma', value, output });\n      continue;\n    }\n\n    /**\n     * Slashes\n     */\n\n    if (value === '/') {\n      // if the beginning of the glob is \"./\", advance the start\n      // to the current index, and don't add the \"./\" characters\n      // to the state. This greatly simplifies lookbehinds when\n      // checking for BOS characters like \"!\" and \".\" (not \"./\")\n      if (prev.type === 'dot' && state.index === state.start + 1) {\n        state.start = state.index + 1;\n        state.consumed = '';\n        state.output = '';\n        tokens.pop();\n        prev = bos; // reset \"prev\" to the first token\n        continue;\n      }\n\n      push({ type: 'slash', value, output: SLASH_LITERAL });\n      continue;\n    }\n\n    /**\n     * Dots\n     */\n\n    if (value === '.') {\n      if (state.braces > 0 && prev.type === 'dot') {\n        if (prev.value === '.') prev.output = DOT_LITERAL;\n        const brace = braces[braces.length - 1];\n        prev.type = 'dots';\n        prev.output += value;\n        prev.value += value;\n        brace.dots = true;\n        continue;\n      }\n\n      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\n        push({ type: 'text', value, output: DOT_LITERAL });\n        continue;\n      }\n\n      push({ type: 'dot', value, output: DOT_LITERAL });\n      continue;\n    }\n\n    /**\n     * Question marks\n     */\n\n    if (value === '?') {\n      const isGroup = prev && prev.value === '(';\n      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('qmark', value);\n        continue;\n      }\n\n      if (prev && prev.type === 'paren') {\n        const next = peek();\n        let output = value;\n\n        if (next === '<' && !utils.supportsLookbehinds()) {\n          throw new Error('Node.js v10 or higher is required for regex lookbehinds');\n        }\n\n        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\\w+>)/.test(remaining()))) {\n          output = `\\\\${value}`;\n        }\n\n        push({ type: 'text', value, output });\n        continue;\n      }\n\n      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\n        push({ type: 'qmark', value, output: QMARK_NO_DOT });\n        continue;\n      }\n\n      push({ type: 'qmark', value, output: QMARK });\n      continue;\n    }\n\n    /**\n     * Exclamation\n     */\n\n    if (value === '!') {\n      if (opts.noextglob !== true && peek() === '(') {\n        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\n          extglobOpen('negate', value);\n          continue;\n        }\n      }\n\n      if (opts.nonegate !== true && state.index === 0) {\n        negate();\n        continue;\n      }\n    }\n\n    /**\n     * Plus\n     */\n\n    if (value === '+') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('plus', value);\n        continue;\n      }\n\n      if ((prev && prev.value === '(') || opts.regex === false) {\n        push({ type: 'plus', value, output: PLUS_LITERAL });\n        continue;\n      }\n\n      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {\n        push({ type: 'plus', value });\n        continue;\n      }\n\n      push({ type: 'plus', value: PLUS_LITERAL });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value === '@') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        push({ type: 'at', extglob: true, value, output: '' });\n        continue;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value !== '*') {\n      if (value === '$' || value === '^') {\n        value = `\\\\${value}`;\n      }\n\n      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\n      if (match) {\n        value += match[0];\n        state.index += match[0].length;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Stars\n     */\n\n    if (prev && (prev.type === 'globstar' || prev.star === true)) {\n      prev.type = 'star';\n      prev.star = true;\n      prev.value += value;\n      prev.output = star;\n      state.backtrack = true;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    let rest = remaining();\n    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\n      extglobOpen('star', value);\n      continue;\n    }\n\n    if (prev.type === 'star') {\n      if (opts.noglobstar === true) {\n        consume(value);\n        continue;\n      }\n\n      const prior = prev.prev;\n      const before = prior.prev;\n      const isStart = prior.type === 'slash' || prior.type === 'bos';\n      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\n\n      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\n      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\n      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      // strip consecutive `/**/`\n      while (rest.slice(0, 3) === '/**') {\n        const after = input[state.index + 4];\n        if (after && after !== '/') {\n          break;\n        }\n        rest = rest.slice(3);\n        consume('/**', 3);\n      }\n\n      if (prior.type === 'bos' && eos()) {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = globstar(opts);\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\n        prev.value += value;\n        state.globstar = true;\n        state.output += prior.output + prev.output;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\n        const end = rest[1] !== void 0 ? '|$' : '';\n\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\n        prev.value += value;\n\n        state.output += prior.output + prev.output;\n        state.globstar = true;\n\n        consume(value + advance());\n\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      if (prior.type === 'bos' && rest[0] === '/') {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value + advance());\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      // remove single star from output\n      state.output = state.output.slice(0, -prev.output.length);\n\n      // reset previous token to globstar\n      prev.type = 'globstar';\n      prev.output = globstar(opts);\n      prev.value += value;\n\n      // reset output with globstar\n      state.output += prev.output;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    const token = { type: 'star', value, output: star };\n\n    if (opts.bash === true) {\n      token.output = '.*?';\n      if (prev.type === 'bos' || prev.type === 'slash') {\n        token.output = nodot + token.output;\n      }\n      push(token);\n      continue;\n    }\n\n    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\n      token.output = value;\n      push(token);\n      continue;\n    }\n\n    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\n      if (prev.type === 'dot') {\n        state.output += NO_DOT_SLASH;\n        prev.output += NO_DOT_SLASH;\n\n      } else if (opts.dot === true) {\n        state.output += NO_DOTS_SLASH;\n        prev.output += NO_DOTS_SLASH;\n\n      } else {\n        state.output += nodot;\n        prev.output += nodot;\n      }\n\n      if (peek() !== '*') {\n        state.output += ONE_CHAR;\n        prev.output += ONE_CHAR;\n      }\n    }\n\n    push(token);\n  }\n\n  while (state.brackets > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));\n    state.output = utils.escapeLast(state.output, '[');\n    decrement('brackets');\n  }\n\n  while (state.parens > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));\n    state.output = utils.escapeLast(state.output, '(');\n    decrement('parens');\n  }\n\n  while (state.braces > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));\n    state.output = utils.escapeLast(state.output, '{');\n    decrement('braces');\n  }\n\n  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {\n    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });\n  }\n\n  // rebuild the output if we had to backtrack at any point\n  if (state.backtrack === true) {\n    state.output = '';\n\n    for (const token of state.tokens) {\n      state.output += token.output != null ? token.output : token.value;\n\n      if (token.suffix) {\n        state.output += token.suffix;\n      }\n    }\n  }\n\n  return state;\n};\n\n/**\n * Fast paths for creating regular expressions for common glob patterns.\n * This can significantly speed up processing and has very little downside\n * impact when none of the fast paths match.\n */\n\nparse.fastpaths = (input, options) => {\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  const len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  input = REPLACEMENTS[input] || input;\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const {\n    DOT_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOTS,\n    NO_DOTS_SLASH,\n    STAR,\n    START_ANCHOR\n  } = constants.globChars(win32);\n\n  const nodot = opts.dot ? NO_DOTS : NO_DOT;\n  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\n  const capture = opts.capture ? '' : '?:';\n  const state = { negated: false, prefix: '' };\n  let star = opts.bash === true ? '.*?' : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  const globstar = (opts) => {\n    if (opts.noglobstar === true) return star;\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const create = str => {\n    switch (str) {\n      case '*':\n        return `${nodot}${ONE_CHAR}${star}`;\n\n      case '.*':\n        return `${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*.*':\n        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*/*':\n        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\n\n      case '**':\n        return nodot + globstar(opts);\n\n      case '**/*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\n\n      case '**/*.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '**/.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      default: {\n        const match = /^(.*?)\\.(\\w+)$/.exec(str);\n        if (!match) return;\n\n        const source = create(match[1]);\n        if (!source) return;\n\n        return source + DOT_LITERAL + match[2];\n      }\n    }\n  };\n\n  const output = utils.removePrefix(input, state);\n  let source = create(output);\n\n  if (source && opts.strictSlashes !== true) {\n    source += `${SLASH_LITERAL}?`;\n  }\n\n  return source;\n};\n\nmodule.exports = parse;\n","\"use strict\";\r\n\r\nconst path = require(\"path\");\r\nconst {CompositeDisposable} = require(\"atom\");\r\nconst {escapeRegExp} = require(\"../../utils.js\");\r\nconst IconTables = require(\"../../icons/icon-tables.js\");\r\nconst Strategy = require(\"../strategy.js\");\r\n\r\n\r\nclass UsertypeStrategy extends Strategy {\r\n\t\r\n\tconstructor(){\r\n\t\tsuper({\r\n\t\t\tname:          \"usertypes\",\r\n\t\t\tpriority:      3,\r\n\t\t\tmatchesFiles:  true,\r\n\t\t\tmatchesDirs:   false,\r\n\t\t\tignoreVirtual: false,\r\n\t\t});\r\n\t\t\r\n\t\tthis.configDisposable = null;\r\n\t\tthis.customTypes      = null;\r\n\t\tthis.customTypeIcons  = null;\r\n\t\tthis.hasCustomTypes   = false;\r\n\t}\r\n\t\r\n\t\r\n\tenable(){\r\n\t\tif(!this.enabled && !this.configDisposable){\r\n\t\t\tthis.customTypes      = new Map();\r\n\t\t\tthis.customTypeIcons  = new Map();\r\n\t\t\tthis.hasCustomTypes   = false;\r\n\t\t\t\r\n\t\t\tthis.configDisposable = new CompositeDisposable(\r\n\t\t\t\tatom.config.onDidChange(\"core.customFileTypes\", types => {\r\n\t\t\t\t\tthis.updateCustomTypes(types.newValue);\r\n\t\t\t\t\tthis.checkAll(false);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\tconst types = atom.config.get(\"core.customFileTypes\");\r\n\t\t\tthis.updateCustomTypes(types);\r\n\t\t}\r\n\t\treturn super.enable();\r\n\t}\r\n\t\r\n\t\r\n\tdisable(){\r\n\t\tif(this.enabled && this.configDisposable){\r\n\t\t\tthis.configDisposable.dispose();\r\n\t\t\tthis.configDisposable = null;\r\n\t\t\tthis.customTypes      = null;\r\n\t\t\tthis.customTypeIcons  = null;\r\n\t\t\tthis.hasCustomTypes   = false;\r\n\t\t}\r\n\t\treturn super.disable();\r\n\t}\r\n\r\n\r\n\tmatchIcon(resource){\r\n\t\tif(!this.hasCustomTypes)\r\n\t\t\treturn null;\r\n\t\t\r\n\t\tfor(const [scopeName, patterns] of this.customTypes){\r\n\t\t\tconst {names, paths} = patterns;\r\n\t\t\tif((null !== names && names.test(resource.name))\r\n\t\t\t||  null !== paths && paths.test(resource.path))\r\n\t\t\t\treturn this.customTypeIcons.get(scopeName);\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t\r\n\tupdateCustomTypes(types){\r\n\t\tthis.customTypes.clear();\r\n\t\tthis.customTypeIcons.clear();\r\n\t\t\r\n\t\tfor(const scopeName in types){\r\n\t\t\tconst icon = IconTables.matchScope(scopeName);\r\n\t\t\tif(!icon)\r\n\t\t\t\tcontinue; // Skip types without icons\r\n\t\t\tthis.customTypeIcons.set(scopeName, icon);\r\n\t\t\t\r\n\t\t\tconst names = [];\r\n\t\t\tconst paths = [];\r\n\t\t\t\r\n\t\t\tconst patterns = types[scopeName];\r\n\t\t\tfor(let i = 0, l = patterns.length; i < l; ++i){\r\n\t\t\t\tconst pattern = patterns[i];\r\n\t\t\t\t(-1 === pattern.indexOf(path.sep))\r\n\t\t\t\t\t? names.push(pattern)\r\n\t\t\t\t\t: paths.push(pattern);\r\n\t\t\t}\r\n\t\t\tthis.customTypes.set(scopeName, {\r\n\t\t\t\tnames: this.makeNamePattern(names),\r\n\t\t\t\tpaths: this.makePathPattern(paths),\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tthis.hasCustomTypes = !!this.customTypes.size;\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Compile an expression to match one or more file extensions.\r\n\t *\r\n\t * @param {String[]} names\r\n\t * @return {RegExp|null}\r\n\t * @private\r\n\t */\r\n\tmakeNamePattern(names){\r\n\t\tconst {length} = names;\r\n\t\t\r\n\t\tif(!length)\r\n\t\t\treturn null;\r\n\t\t\r\n\t\tnames = names.map(s => escapeRegExp(s.replace(/^\\./, \"\"))).join(\"|\");\r\n\t\t\r\n\t\tif(length > 1)\r\n\t\t\tnames = `(?:${names})`;\r\n\t\t\r\n\t\treturn new RegExp(\"(?:^|\\\\.)\" + names + \"$\", \"i\");\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Compile an expression to match one or more pathnames.\r\n\t *\r\n\t * @param {String[]} paths\r\n\t * @return {RegExp|null}\r\n\t * @private\r\n\t */\r\n\tmakePathPattern(paths){\r\n\t\tconst {length} = paths;\r\n\t\t\r\n\t\tif(!length)\r\n\t\t\treturn null;\r\n\t\t\r\n\t\tpaths = paths.map(s => escapeRegExp(s)).join(\"|\");\r\n\t\t\r\n\t\tif(length > 1)\r\n\t\t\tpaths = `(?:${paths})`;\r\n\t\t\r\n\t\treturn new RegExp(\"(?:^|[\\\\/\\\\\\\\])\" + paths + \"$\", \"i\");\r\n\t}\r\n}\r\n\r\n\r\nmodule.exports = new UsertypeStrategy();\r\n","\"use strict\";\r\n\r\nconst {CompositeDisposable, Disposable} = require(\"atom\");\r\nconst IconTables = require(\"../../icons/icon-tables.js\");\r\nconst Strategy = require(\"../strategy.js\");\r\n\r\n\r\nclass GrammarStrategy extends Strategy {\r\n\t\r\n\tconstructor(){\r\n\t\tsuper({\r\n\t\t\tname:         \"grammar\",\r\n\t\t\tpriority:     7,\r\n\t\t\tmatchesFiles: true,\r\n\t\t\tmatchesDirs:  false,\r\n\t\t});\r\n\t}\r\n\t\r\n\t\r\n\t// HACK: See https://github.com/file-icons/atom/issues/704#issuecomment-367167526\r\n\t// TODO: Delete this once the minimum required Atom version is bumped past 1.24.0\r\n\tenable(){\r\n\t\tswitch(atom.getVersion().replace(/^v/i, \"\").toLowerCase()){\r\n\t\t\tcase \"1.24.0\":\r\n\t\t\tcase \"1.25.0-beta0\":\r\n\t\t\t\tif(!atom.inSpecMode())\r\n\t\t\t\t\treturn false;\r\n\t\t}\r\n\t\treturn super.enable();\r\n\t}\r\n\t\r\n\t\r\n\tregisterResource(resource){\r\n\t\tif(super.registerResource(resource)){\r\n\t\t\tconst disposables = this.resourceEvents.get(resource);\r\n\t\t\tconst watcher = new CompositeDisposable();\r\n\t\t\t\r\n\t\t\twatcher.add(\r\n\t\t\t\tnew Disposable(() => disposables.remove(watcher)),\r\n\t\t\t\tresource.onDidDetachEditor(() => watcher.dispose()),\r\n\t\t\t\tresource.observeEditors(editor => {\r\n\t\t\t\t\twatcher.add(editor.observeGrammar(() => {\r\n\t\t\t\t\t\tconst icon = this.matchIcon(resource);\r\n\t\t\t\t\t\ticon\r\n\t\t\t\t\t\t\t? this.addIcon(resource, icon)\r\n\t\t\t\t\t\t\t: this.deleteIcon(resource);\r\n\t\t\t\t\t}));\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\tdisposables.add(watcher);\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tmatchIcon(resource){\r\n\t\tconst editor = resource.getEditor();\r\n\t\t\r\n\t\tif(editor){\r\n\t\t\tconst scopeName = atom.textEditors.getGrammarOverride(editor);\r\n\t\t\tconst grammar = atom.grammars.grammarForScopeName(scopeName);\r\n\t\t\treturn grammar\r\n\t\t\t\t? IconTables.matchScope(grammar.scopeName)\r\n\t\t\t\t: null;\r\n\t\t}\r\n\t\t\r\n\t\telse return null;\r\n\t}\r\n}\r\n\r\n\r\nmodule.exports = new GrammarStrategy();\r\n","\"use strict\";\r\n\r\nconst IconTables = require(\"../../icons/icon-tables.js\");\r\nconst Strategy = require(\"../strategy.js\");\r\n\r\n\r\nclass PathStrategy extends Strategy {\r\n\r\n\tconstructor(){\r\n\t\tsuper({\r\n\t\t\tpriority:      1,\r\n\t\t\tmatchesFiles:  true,\r\n\t\t\tmatchesDirs:   true,\r\n\t\t\tnoSetting:     true,\r\n\t\t\tignoreVirtual: false,\r\n\t\t});\r\n\t}\r\n\t\r\n\t\r\n\tregisterResource(resource){\r\n\t\tif(super.registerResource(resource)){\r\n\t\t\tconst disposables = this.resourceEvents.get(resource);\r\n\t\t\tdisposables.add(resource.onDidMove(() => this.check(resource, false)));\r\n\t\t\tthis.resourceEvents.set(resource, disposables);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse return false;\r\n\t}\r\n\t\r\n\t\r\n\tmatchIcon(resource){\r\n\t\tlet icon = null;\r\n\t\t\r\n\t\tif(resource.isDirectory)\r\n\t\t\treturn icon =\r\n\t\t\t\tIconTables.matchPath(resource.path, true) ||\r\n\t\t\t\tIconTables.matchName(resource.name, true) ||\r\n\t\t\t\tnull;\r\n\t\t\r\n\t\telse{\r\n\t\t\tlet {name} = resource;\r\n\t\t\tlet path = resource.realPath || resource.path;\r\n\t\t\t\r\n\t\t\tlet isFiltered = false;\r\n\t\t\tconst filtered = this.filter(name) || name;\r\n\t\t\tif(filtered !== name){\r\n\t\t\t\tisFiltered = true;\r\n\t\t\t\tname = filtered;\r\n\t\t\t\tpath = this.filter(path);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ticon =\r\n\t\t\t\tIconTables.matchPath(path) ||\r\n\t\t\t\tIconTables.matchName(name) ||\r\n\t\t\t\tnull;\r\n\t\t\t\r\n\t\t\tif(isFiltered && (null === icon || icon.priority < 1))\r\n\t\t\t\ticon = IconTables.matchName(resource.name);\r\n\t\t\t\r\n\t\t\treturn icon || null;\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tfilter(path){\r\n\t\treturn path\r\n\t\t\t.replace(/~(?:orig|previous)$/, \"\")\r\n\t\t\t.replace(/^([^.]*\\.[^.]+)\\.(?:inc?|dist|tm?pl|te?mp|ti?dy)$/i, \"$1\");\r\n\t}\r\n}\r\n\r\n\r\nmodule.exports = new PathStrategy();\r\n","\"use strict\";\r\n\r\nconst {CompositeDisposable, Emitter} = require(\"atom\");\r\nconst {EntityType, normalisePath} = require(\"atom-fs\");\r\nconst StrategyManager = require(\"./strategy-manager.js\");\r\nconst IconTables = require(\"../icons/icon-tables.js\");\r\nconst Options = require(\"../options.js\");\r\nconst Storage = require(\"../storage.js\");\r\n\r\n\r\nclass IconDelegate{\r\n\t\r\n\tconstructor(resource){\r\n\t\tthis.resource    = resource;\r\n\t\tthis.disposables = new CompositeDisposable();\r\n\t\tthis.emitter     = new Emitter();\r\n\t\tthis.icons       = [];\r\n\t\tthis.numIcons    = 0;\r\n\t\tthis.deserialise();\r\n\t}\r\n\t\r\n\t\r\n\tdestroy(){\r\n\t\tif(!this.destroyed){\r\n\t\t\tthis.destroyed = true;\r\n\t\t\tthis.emitter.emit(\"did-destroy\");\r\n\t\t\tthis.emitter.dispose();\r\n\t\t\tthis.emitter = null;\r\n\t\t\tthis.disposables.dispose();\r\n\t\t\tthis.disposables.clear();\r\n\t\t\tthis.disposables = null;\r\n\t\t\tthis.resource = null;\r\n\t\t\tthis.icons = null;\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tonDidDestroy(fn){\r\n\t\treturn this.emitter.on(\"did-destroy\", fn);\r\n\t}\r\n\t\r\n\tonDidChangeIcon(fn){\r\n\t\treturn this.emitter.on(\"did-change-icon\", fn);\r\n\t}\r\n\t\r\n\tonDidChangeMaster(fn){\r\n\t\treturn this.emitter.on(\"did-change-master\", fn);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Instruct {@link IconNode|IconNodes} to reapply their element's CSS classes.\r\n\t *\r\n\t * @param {Icon} from\r\n\t * @param {Icon} to\r\n\t * @emits did-change-icon\r\n\t * @private\r\n\t */\r\n\temitIconChange(from, to){\r\n\t\tif(this.emitter)\r\n\t\t\tthis.emitter.emit(\"did-change-icon\", {from, to});\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Return the CSS classes for displaying the delegate's icon.\r\n\t *\r\n\t * @return {Array}\r\n\t */\r\n\tgetClasses(){\r\n\t\tconst colourMode = Options.colourChangedOnly && !this.resource.vcsStatus\r\n\t\t\t? null\r\n\t\t\t: Options.colourMode;\r\n\t\t\r\n\t\tconst icon = this.master\r\n\t\t\t? this.master.getCurrentIcon()\r\n\t\t\t: this.getCurrentIcon();\r\n\t\t\r\n\t\tlet classes = icon\r\n\t\t\t? icon.getClass(colourMode, true)\r\n\t\t\t: this.getFallbackClasses();\r\n\t\t\r\n\t\tconst replacement = this.getReplacementClass();\r\n\t\tif(replacement) classes\r\n\t\t\t? classes[0] = replacement\r\n\t\t\t: classes = [replacement];\r\n\t\t\r\n\t\treturn classes;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Return the icon-classes to use when nothing matches.\r\n\t *\r\n\t * @return {String[]}\r\n\t * @private\r\n\t */\r\n\tgetFallbackClasses(){\r\n\t\tconst {resource} = this;\r\n\t\t\r\n\t\tif(resource.type & EntityType.DIRECTORY)\r\n\t\t\treturn [\"icon-file-directory\"];\r\n\t\t\r\n\t\telse if(resource.isBinary)\r\n\t\t\treturn [\"icon-file-binary\"];\r\n\t\t\r\n\t\telse{\r\n\t\t\tconst classes = Options.defaultIconClass || [];\r\n\t\t\t\r\n\t\t\t// Avoid referencing original array; return value is subject to modification\r\n\t\t\treturn classes.slice(0);\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Return an icon-class to replace the one used by the delegate.\r\n\t *\r\n\t * Used only in very specific circumstances, when the nature of an entity\r\n\t * takes precedence over usual icon-matching strategies. Examples include\r\n\t * symbolic links and submodule folders. Delegates may still apply their\r\n\t * colour classes, hence the reason a fixed value isn't used.\r\n\t *\r\n\t * @private\r\n\t * @return {String} Name of a CSS class, or the empty string if\r\n\t * no class replacement should be made.\r\n\t */\r\n\tgetReplacementClass(){\r\n\t\tconst {resource} = this;\r\n\t\t\r\n\t\tif(resource.isRepository && resource.isRoot)\r\n\t\t\treturn \"icon-repo\";\r\n\t\t\r\n\t\telse if(resource.isSymlink){\r\n\t\t\tconst type = resource.isDirectory ? \"directory\" : \"file\";\r\n\t\t\treturn \"icon-file-symlink-\" + type;\r\n\t\t}\r\n\t\t\r\n\t\telse if(resource.isSubmodule)\r\n\t\t\treturn \"icon-file-submodule\";\r\n\t\t\r\n\t\telse return \"\";\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Retrieve the delegate's active icon.\r\n\t *\r\n\t * If no icon is found, an attempt is made to locate it.\r\n\t *\r\n\t * @return {Icon}\r\n\t */\r\n\tgetCurrentIcon(){\r\n\t\tif(this.currentIcon)\r\n\t\t\treturn this.currentIcon;\r\n\t\t\r\n\t\telse{\r\n\t\t\tif(this.numIcons > 0)\r\n\t\t\t\tfor(let i = this.icons.length - 1; i >= 0; --i){\r\n\t\t\t\t\tconst icon = this.icons[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(icon){\r\n\t\t\t\t\t\tthis.setCurrentIcon(icon, i);\r\n\t\t\t\t\t\treturn icon;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\tStrategyManager.query(this.resource);\r\n\t\t\treturn this.currentIcon || null;\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Change the currently-active icon.\r\n\t *\r\n\t * @param {Icon} to\r\n\t * @param {Number} priority\r\n\t * @emits did-change-icon\r\n\t */\r\n\tsetCurrentIcon(to, priority = null){\r\n\t\tconst from = this.currentIcon;\r\n\t\t\r\n\t\tif(from !== to){\r\n\t\t\tthis.currentIcon = to;\r\n\t\t\t\r\n\t\t\tif(null !== priority)\r\n\t\t\t\tthis.currentPriority = priority;\r\n\t\t\t\r\n\t\t\t// Re-evaluate icon unless resource is a directory\r\n\t\t\tif(null === to && ~this.resource.type & EntityType.DIRECTORY)\r\n\t\t\t\tto = this.getCurrentIcon();\r\n\t\t\t\r\n\t\t\tthis.serialise();\r\n\t\t\tthis.emitIconChange(from, to);\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tadd(icon, priority){\r\n\t\tif(null == this.icons[priority])\r\n\t\t\t++this.numIcons;\r\n\t\t\r\n\t\tthis.icons[priority] = icon;\r\n\t\t\r\n\t\tif(priority >= this.currentPriority)\r\n\t\t\tthis.setCurrentIcon(icon, priority);\r\n\t}\r\n\t\r\n\t\r\n\tremove(icon, priority){\r\n\t\tif(this.icons[priority] === icon){\r\n\t\t\tthis.icons[priority] = null;\r\n\t\t\t--this.numIcons;\r\n\t\t\t\r\n\t\t\tif(this.currentPriority === priority)\r\n\t\t\t\tthis.setCurrentIcon(null, -1);\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tdeserialise(){\r\n\t\t// HACK: https://github.com/file-icons/atom/issues/568#issuecomment-288983875\r\n\t\tif(!this.resource)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tconst path = normalisePath(this.resource.path);\r\n\t\t\r\n\t\tif(!Storage.hasIcon(path))\r\n\t\t\treturn;\r\n\t\t\r\n\t\tconst {isDirectory} = this.resource;\r\n\t\tconst icons = isDirectory\r\n\t\t\t? IconTables.directoryIcons\r\n\t\t\t: IconTables.fileIcons;\r\n\t\t\r\n\t\tconst {priority, index, iconClass} = Storage.getPathIcon(path);\r\n\t\tconst icon = icons.byName[index];\r\n\t\t\r\n\t\t// Verify cache is accurate\r\n\t\t(icon && iconClass === icon.icon)\r\n\t\t\t? this.add(icon, priority)\r\n\t\t\t: Storage.deletePathIcon(path);\r\n\t\t\r\n\t\tsetImmediate(() => StrategyManager.query(this.resource));\r\n\t}\r\n\t\r\n\t\r\n\tserialise(){\r\n\t\tif(!Storage.locked){\r\n\t\t\tconst path = normalisePath(this.resource.path);\r\n\t\t\tconst icon = this.currentIcon;\r\n\t\t\t\r\n\t\t\tif(icon)\r\n\t\t\t\tStorage.setPathIcon(path, {\r\n\t\t\t\t\tpriority:  this.currentPriority,\r\n\t\t\t\t\ticonClass: icon.icon,\r\n\t\t\t\t\tindex:     icon.index,\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t\telse\r\n\t\t\t\tStorage.deletePathIcon(path);\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Parent delegate from which to inherit icons and change events.\r\n\t *\r\n\t * NOTE: Assignment is irrevocable. Surrogate instances cannot be\r\n\t * recovered once bound: only reassigned a different master. This\r\n\t * mechanism exists for symlink use only.\r\n\t *\r\n\t * FIXME: This should be a method, not a property. Destructively\r\n\t * redefining a property when writing to it is seriously weird.\r\n\t * \r\n\t * @param {IconDelegate} input\r\n\t * @emits did-change-master\r\n\t */\r\n\tset master(input){\r\n\t\tif(null == input || input.master === this)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tconst originalIcon = this.currentIcon;\r\n\t\tlet masterDelegate = null;\r\n\t\tlet disposable     = null;\r\n\t\t\r\n\t\tObject.defineProperties(this, {\r\n\t\t\tmaster: {\r\n\t\t\t\tget: () => masterDelegate,\r\n\t\t\t\tset: to => {\r\n\t\t\t\t\tconst from = masterDelegate;\r\n\t\t\t\t\tif((to = to || null) !== from){\r\n\t\t\t\t\t\tmasterDelegate = to;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(disposable){\r\n\t\t\t\t\t\t\tdisposable.dispose();\r\n\t\t\t\t\t\t\tdisposable = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(to && to instanceof IconDelegate && !to.destroyed)\r\n\t\t\t\t\t\t\tdisposable = new CompositeDisposable(\r\n\t\t\t\t\t\t\t\tto.onDidDestroy(() => this.master = null),\r\n\t\t\t\t\t\t\t\tto.onDidChangeMaster(to => this.master = to),\r\n\t\t\t\t\t\t\t\tto.onDidChangeIcon(change => {\r\n\t\t\t\t\t\t\t\t\tconst {from, to} = change;\r\n\t\t\t\t\t\t\t\t\tthis.emitIconChange(from, to);\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(this.emitter)\r\n\t\t\t\t\t\t\tthis.emitter.emit(\"did-change-master\", {from, to});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tto = this.currentIcon;\r\n\t\t\t\t\t\tthis.emitIconChange(originalIcon, to);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t});\r\n\t\t\r\n\t\tthis.master = input;\r\n\t}\r\n}\r\n\r\n\r\nIconDelegate.prototype.destroyed = false;\r\nIconDelegate.prototype.currentIcon = null;\r\nIconDelegate.prototype.currentPriority = -1;\r\nIconDelegate.prototype.master = null;\r\n\r\nmodule.exports = IconDelegate;\r\n","\"use strict\";\r\n\r\nconst {CompositeDisposable, Disposable} = require(\"atom\");\r\nconst {FileSystem, EntityType} = require(\"atom-fs\");\r\nconst Options = require(\"../options.js\");\r\nconst UI = require(\"../ui.js\");\r\n\r\nconst iconsByElement = new WeakMap();\r\nconst iconDisposables = new WeakMap();\r\n\r\n\r\nclass IconNode{\r\n\t\r\n\tconstructor(resource, element, tabIcon = false){\r\n\t\tconst delegate = resource.icon;\r\n\t\t\r\n\t\tthis.disposables = new CompositeDisposable();\r\n\t\tthis.resource = resource;\r\n\t\tthis.element = element;\r\n\t\tthis.visible = true;\r\n\t\tthis.classes = null;\r\n\t\tthis.appliedClasses = null;\r\n\t\ticonsByElement.set(element, this);\r\n\r\n\t\t// HACK(#698): This. Shouldn't. Happen.\r\n\t\tif(null == delegate)\r\n\t\t\treturn this.destroy();\r\n\t\t\r\n\t\tthis.disposables.add(\r\n\t\t\tUI.onMotifChanged(() => this.refresh()),\r\n\t\t\tOptions.onDidChange(\"coloured\", () => this.refresh()),\r\n\t\t\tOptions.onDidChange(\"colourChangedOnly\", () => this.refresh()),\r\n\t\t\tdelegate.onDidChangeIcon(() => this.refresh()),\r\n\t\t\tresource.onDidDestroy(() => this.destroy()),\r\n\t\t\tresource.onDidChangeVCSStatus(() => {\r\n\t\t\t\tif(Options.colourChangedOnly)\r\n\t\t\t\t\tthis.refresh();\r\n\t\t\t})\r\n\t\t);\r\n\t\t\r\n\t\tif(tabIcon){\r\n\t\t\tthis.disposables.add(\r\n\t\t\t\tOptions.onDidChange(\"tabPaneIcon\", show => this.setVisible(show))\r\n\t\t\t);\r\n\t\t\tthis.setVisible(Options.tabPaneIcon);\r\n\t\t}\r\n\t\t\r\n\t\tif(resource.isFile)\r\n\t\t\tthis.disposables.add(\r\n\t\t\t\tOptions.onDidChange(\"defaultIconClass\", () => this.refresh())\r\n\t\t\t);\r\n\t\t\r\n\t\telse if(delegate.getCurrentIcon())\r\n\t\t\telement.classList.remove(...delegate.getFallbackClasses());\r\n\t\t\r\n\t\tthis.refresh();\r\n\t}\r\n\t\r\n\t\r\n\tdestroy(){\r\n\t\tif(!this.destroyed){\r\n\t\t\tthis.disposables.dispose();\r\n\t\t\ticonsByElement.delete(this.element);\r\n\t\t\tthis.appliedClasses = null;\r\n\t\t\tthis.classes   = null;\r\n\t\t\tthis.resource  = null;\r\n\t\t\tthis.element   = null;\r\n\t\t\tthis.destroyed = true;\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\trefresh(){\r\n\t\tif(!this.visible){\r\n\t\t\tthis.removeClasses();\r\n\t\t\tthis.classes = null;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconst classes = this.resource.icon.getClasses();\r\n\t\t\tif(this.classesDiffer(classes, this.classes)){\r\n\t\t\t\tthis.removeClasses();\r\n\t\t\t\tthis.classes = classes;\r\n\t\t\t\tthis.addClasses();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tsetVisible(input){\r\n\t\tinput = !!input;\r\n\t\tif(input !== this.visible){\r\n\t\t\tthis.visible = input;\r\n\t\t\tthis.refresh();\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Apply the current icon-classes to the instance's element.\r\n\t *\r\n\t * @private\r\n\t */\r\n\taddClasses(){\r\n\t\tif(!this.visible) return;\r\n\t\t\r\n\t\tif(this.classes){\r\n\t\t\tthis.appliedClasses = this.classes;\r\n\t\t\tthis.element.classList.add(...this.appliedClasses);\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove previously-applied classes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tremoveClasses(){\r\n\t\tif(null !== this.appliedClasses){\r\n\t\t\tthis.element.classList.remove(...this.appliedClasses);\r\n\t\t\tthis.appliedClasses = null;\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Determine if two icon-class lists differ.\r\n\t *\r\n\t * @param {Array} a\r\n\t * @param {Array} b\r\n\t * @return {Boolean}\r\n\t * @private\r\n\t */\r\n\tclassesDiffer(a, b){\r\n\t\treturn (a && b)\r\n\t\t\t? !(a[0] === b[0] && a[1] === b[1])\r\n\t\t\t: true;\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Create and apply an {IconNode} to a DOM element the `File-Icons`\r\n\t * package has no control over. This method is invoked by the service's\r\n\t * `addIconToElement` method, which ensures icon elements created by\r\n\t * consumers continue to display accurate icons even when matches change.\r\n\t *\r\n\t * @public\r\n\t * @static\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t *    DOM element receiving the icon-classes.\r\n\t *\r\n\t * @param {String} path\r\n\t *    Absolute filesystem path\r\n\t *\r\n\t * @param {EntityType} [typeHint={@link EntityType.FILE}]\r\n\t *    Resource type to assume for unreadable or remote paths.\r\n\t *    Defaults to a regular file.\r\n\t *\r\n\t * @param {Boolean} [isTabIcon=false]\r\n\t *    Hide node when tab-pane icons are disabled.\r\n\t *\r\n\t * @returns {Disposable}\r\n\t *    A Disposable that destroys the {IconNode} when disposed of. Authors\r\n\t *    are encouraged to do so once the element is no longer needed.\r\n\t */\r\n\tstatic forElement(element, path, typeHint = EntityType.FILE, isTabIcon = false){\r\n\t\tif(!element) return null;\r\n\t\tconst icon = iconsByElement.get(element);\r\n\t\t\r\n\t\tif(icon && !icon.destroyed && iconDisposables.has(icon))\r\n\t\t\treturn iconDisposables.get(icon);\r\n\t\t\r\n\t\telse{\r\n\t\t\tif(!path)\r\n\t\t\t\treturn new Disposable();\r\n\t\t\t\r\n\t\t\tconst rsrc = FileSystem.get(path, false, typeHint);\r\n\t\t\tconst node = new IconNode(rsrc, element, isTabIcon);\r\n\t\t\t\r\n\t\t\tconst disp = new Disposable(() => {\r\n\t\t\t\ticonDisposables.delete(node);\r\n\t\t\t\tnode.removeClasses();\r\n\t\t\t\tnode.destroy();\r\n\t\t\t});\r\n\t\t\ticonDisposables.set(node, disp);\r\n\t\t\treturn disp;\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Retrieve a previously-created {IconNode} for a DOM element.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t * @return {IconNode}\r\n\t * @private\r\n\t */\r\n\tstatic getIcon(element){\r\n\t\treturn element\r\n\t\t\t? iconsByElement.get(element) || null\r\n\t\t\t: null;\r\n\t}\r\n}\r\n\r\n\r\nIconNode.prototype.destroyed = false;\r\nmodule.exports = IconNode;\r\n"],"sourceRoot":""}